{"ast":null,"code":"/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() : typeof define === 'function' && define.amd ? define(factory) : (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n})(this, function () {\n  'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = {\n    exports: {}\n  };\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n  /**\n   * Helpers\n   */\n\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (!cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, lines, itemContents;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*| *)(?:\\\\n[^\\\\n]*)*(?:\\\\n|$))\"); // Get each top-level item\n\n        while (src) {\n          if (this.rules.block.hr.test(src)) {\n            // End list if we encounter an HR (possibly move into itemRegex?)\n            break;\n          }\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          lines = cap[2].split('\\n');\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = lines[0].trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1\n\n            itemContents = lines[0].slice(indent - cap[1].length);\n          }\n\n          blankLine = false;\n          raw = cap[0];\n\n          if (!lines[0] && /^ *$/.test(lines[1])) {\n            // items begin with at most one blank line\n            raw = cap[1] + lines.slice(0, 2).join('\\n') + '\\n';\n            list.loose = true;\n            lines = [];\n          }\n\n          var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\");\n\n          for (i = 1; i < lines.length; i++) {\n            line = lines[i];\n\n            if (this.options.pedantic) {\n              // Re-align to follow commonmark nesting rules\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            } // End list item if found start of new bullet\n\n\n            if (nextBulletRegex.test(line)) {\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            } // Until we encounter a blank line, item contents do not need indentation\n\n\n            if (!blankLine) {\n              if (!line.trim()) {\n                // Check if current line is empty\n                blankLine = true;\n              } // Dedent if possible\n\n\n              if (line.search(/[^ ]/) >= indent) {\n                itemContents += '\\n' + line.slice(indent);\n              } else {\n                itemContents += '\\n' + line;\n              }\n\n              continue;\n            } // Dedent this line\n\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) {\n              itemContents += '\\n' + line.slice(indent);\n              continue;\n            } else {\n              // Line was not properly indented; end of this item\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n          src = src.slice(raw.length);\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n          if (list.items[i].tokens.some(function (t) {\n            return t.type === 'space';\n          })) {\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n    /**\n     * Static Lex Method\n     */\n\n\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype; // no need for block level renderers\n\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n  /**\n   * Slugger generates header id\n   */\n\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n      changeDefaults = defaults$5.exports.changeDefaults,\n      defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(_this, token);\n\n          if (walkTokens) {\n            walkTokens(token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n  return marked_1;\n});","map":{"version":3,"sources":["/Users/yashowardhanshinde/Desktop/React/react-blog-template-master/node_modules/marked/lib/marked.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","marked","_defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","_createClass","Constructor","protoProps","staticProps","prototype","_unsupportedIterableToArray","o","minLen","_arrayLikeToArray","n","toString","call","slice","constructor","name","Array","from","test","arr","len","arr2","_createForOfIteratorHelperLoose","allowArrayLike","it","Symbol","iterator","next","bind","isArray","done","value","TypeError","defaults$5","getDefaults$1","baseUrl","breaks","extensions","gfm","headerIds","headerPrefix","highlight","langPrefix","mangle","pedantic","renderer","sanitize","sanitizer","silent","smartLists","smartypants","tokenizer","walkTokens","xhtml","changeDefaults$1","newDefaults","defaults","getDefaults","changeDefaults","escapeTest","escapeReplace","escapeTestNoEncode","escapeReplaceNoEncode","escapeReplacements","getEscapeReplacement","ch","escape$2","html","encode","replace","unescapeTest","unescape$1","_","toLowerCase","charAt","String","fromCharCode","parseInt","substring","caret","edit$1","regex","opt","source","obj","val","getRegex","RegExp","nonWordAndColonTest","originIndependentUrl","cleanUrl$1","base","href","prot","decodeURIComponent","e","indexOf","resolveUrl","encodeURI","baseUrls","justDomain","protocol","domain","rtrim$1","relativeBase","noopTest$1","exec","noopTest","merge$2","arguments","hasOwnProperty","splitCells$1","tableRow","count","row","match","offset","str","escaped","curr","cells","split","trim","shift","pop","splice","push","c","invert","l","suffLen","currChar","substr","findClosingBracket$1","b","level","checkSanitizeDeprecation$1","console","warn","repeatString$1","pattern","result","helpers","escape","unescape","edit","cleanUrl","merge","splitCells","rtrim","findClosingBracket","checkSanitizeDeprecation","repeatString","defaults$4","_escape","outputLink","cap","link","raw","lexer","title","text","state","inLink","token","type","tokens","inlineTokens","indentCodeCompensation","matchIndentToCode","indentToCode","map","node","matchIndentInNode","indentInNode","join","Tokenizer_1","Tokenizer","options","_proto","space","src","rules","block","newline","code","codeBlockStyle","fences","lang","heading","trimmed","depth","inline","hr","blockquote","blockTokens","list","istask","ischecked","indent","blankLine","endsWithBlankLine","line","lines","itemContents","bull","isordered","ordered","start","loose","items","itemRegex","trimLeft","search","nextBulletRegex","Math","min","task","checked","trimRight","top","some","t","pre","def","tag","table","item","header","align","rows","j","k","lheading","paragraph","inRawBlock","trimmedUrl","rtrimSlash","lastParenIndex","linkLen","_escapes","reflink","links","nolink","emStrong","maskedSrc","prevChar","lDelim","nextChar","punctuation","lLength","rDelim","rLength","delimTotal","midDelimTotal","endReg","rDelimAst","rDelimUnd","lastIndex","_text","index","codespan","hasNonSpaceChars","hasSpaceCharsOnBothEnds","br","del","autolink","url","prevCapZero","_backpedal","inlineText","merge$1","block$1","_paragraph","_label","_title","bullet","listItemStart","_tag","_comment","normal","inline$1","reflinkSearch","_punctuation","blockSkip","escapedEmSt","_scheme","_email","_attribute","_href","strong","middle","endAst","endUnd","em","_extended_email","Tokenizer$1","defaults$3","out","charCodeAt","random","Lexer_1","Lexer","create","inlineQueue","lex","lexInline","_this","lastToken","cutSrc","lastParagraphClipped","extTokenizer","startBlock","startIndex","Infinity","tempSrc","tempStart","forEach","getStartIndex","errMsg","error","Error","_this2","keepPrevChar","keys","includes","lastIndexOf","startInline","get","defaults$2","escape$1","Renderer_1","Renderer","_code","infostring","quote","_html","slugger","slug","body","startatt","listitem","checkbox","tablerow","content","tablecell","flags","image","TextRenderer_1","TextRenderer","Slugger_1","Slugger","seen","serialize","getNextSafeSlug","originalSlug","isDryRun","occurenceAccumulator","dryrun","Renderer$1","TextRenderer$1","Slugger$1","defaults$1","Parser_1","Parser","textRenderer","parse","parser","parseInline","l2","l3","cell","itemBody","ret","renderers","unshift","callback","err","pending","setTimeout","_tokens","message","setOptions","use","_len","args","_key","opts","apply","concat","childTokens","hasExtensions","pack","ext","prevRenderer","_len2","_key2","_loop","prop","_len3","_key3","_loop2","prevTokenizer","_len4","_key4","_loop3","_step","_iterator2","_step2","_iterator3","_step3","_iterator4","_step4","_cell","_iterator","marked_1"],"mappings":"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","sourcesContent":["/**\n * marked - a markdown parser\n * Copyright (c) 2011-2021, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n/**\n * DO NOT EDIT THIS FILE\n * The code in this file is generated from files in ./src/\n */\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.marked = factory());\n}(this, (function () { 'use strict';\n\n  function _defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  function _createClass(Constructor, protoProps, staticProps) {\n    if (protoProps) _defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) _defineProperties(Constructor, staticProps);\n    return Constructor;\n  }\n\n  function _unsupportedIterableToArray(o, minLen) {\n    if (!o) return;\n    if (typeof o === \"string\") return _arrayLikeToArray(o, minLen);\n    var n = Object.prototype.toString.call(o).slice(8, -1);\n    if (n === \"Object\" && o.constructor) n = o.constructor.name;\n    if (n === \"Map\" || n === \"Set\") return Array.from(o);\n    if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen);\n  }\n\n  function _arrayLikeToArray(arr, len) {\n    if (len == null || len > arr.length) len = arr.length;\n\n    for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i];\n\n    return arr2;\n  }\n\n  function _createForOfIteratorHelperLoose(o, allowArrayLike) {\n    var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"];\n    if (it) return (it = it.call(o)).next.bind(it);\n\n    if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") {\n      if (it) o = it;\n      var i = 0;\n      return function () {\n        if (i >= o.length) return {\n          done: true\n        };\n        return {\n          done: false,\n          value: o[i++]\n        };\n      };\n    }\n\n    throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\");\n  }\n\n  var defaults$5 = {exports: {}};\n\n  function getDefaults$1() {\n    return {\n      baseUrl: null,\n      breaks: false,\n      extensions: null,\n      gfm: true,\n      headerIds: true,\n      headerPrefix: '',\n      highlight: null,\n      langPrefix: 'language-',\n      mangle: true,\n      pedantic: false,\n      renderer: null,\n      sanitize: false,\n      sanitizer: null,\n      silent: false,\n      smartLists: false,\n      smartypants: false,\n      tokenizer: null,\n      walkTokens: null,\n      xhtml: false\n    };\n  }\n\n  function changeDefaults$1(newDefaults) {\n    defaults$5.exports.defaults = newDefaults;\n  }\n\n  defaults$5.exports = {\n    defaults: getDefaults$1(),\n    getDefaults: getDefaults$1,\n    changeDefaults: changeDefaults$1\n  };\n\n  /**\n   * Helpers\n   */\n  var escapeTest = /[&<>\"']/;\n  var escapeReplace = /[&<>\"']/g;\n  var escapeTestNoEncode = /[<>\"']|&(?!#?\\w+;)/;\n  var escapeReplaceNoEncode = /[<>\"']|&(?!#?\\w+;)/g;\n  var escapeReplacements = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  };\n\n  var getEscapeReplacement = function getEscapeReplacement(ch) {\n    return escapeReplacements[ch];\n  };\n\n  function escape$2(html, encode) {\n    if (encode) {\n      if (escapeTest.test(html)) {\n        return html.replace(escapeReplace, getEscapeReplacement);\n      }\n    } else {\n      if (escapeTestNoEncode.test(html)) {\n        return html.replace(escapeReplaceNoEncode, getEscapeReplacement);\n      }\n    }\n\n    return html;\n  }\n\n  var unescapeTest = /&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig;\n\n  function unescape$1(html) {\n    // explicitly match decimal, hex, and named HTML entities\n    return html.replace(unescapeTest, function (_, n) {\n      n = n.toLowerCase();\n      if (n === 'colon') return ':';\n\n      if (n.charAt(0) === '#') {\n        return n.charAt(1) === 'x' ? String.fromCharCode(parseInt(n.substring(2), 16)) : String.fromCharCode(+n.substring(1));\n      }\n\n      return '';\n    });\n  }\n\n  var caret = /(^|[^\\[])\\^/g;\n\n  function edit$1(regex, opt) {\n    regex = regex.source || regex;\n    opt = opt || '';\n    var obj = {\n      replace: function replace(name, val) {\n        val = val.source || val;\n        val = val.replace(caret, '$1');\n        regex = regex.replace(name, val);\n        return obj;\n      },\n      getRegex: function getRegex() {\n        return new RegExp(regex, opt);\n      }\n    };\n    return obj;\n  }\n\n  var nonWordAndColonTest = /[^\\w:]/g;\n  var originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\n  function cleanUrl$1(sanitize, base, href) {\n    if (sanitize) {\n      var prot;\n\n      try {\n        prot = decodeURIComponent(unescape$1(href)).replace(nonWordAndColonTest, '').toLowerCase();\n      } catch (e) {\n        return null;\n      }\n\n      if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n        return null;\n      }\n    }\n\n    if (base && !originIndependentUrl.test(href)) {\n      href = resolveUrl(base, href);\n    }\n\n    try {\n      href = encodeURI(href).replace(/%25/g, '%');\n    } catch (e) {\n      return null;\n    }\n\n    return href;\n  }\n\n  var baseUrls = {};\n  var justDomain = /^[^:]+:\\/*[^/]*$/;\n  var protocol = /^([^:]+:)[\\s\\S]*$/;\n  var domain = /^([^:]+:\\/*[^/]*)[\\s\\S]*$/;\n\n  function resolveUrl(base, href) {\n    if (!baseUrls[' ' + base]) {\n      // we can ignore everything in base after the last slash of its path component,\n      // but we might need to add _that_\n      // https://tools.ietf.org/html/rfc3986#section-3\n      if (justDomain.test(base)) {\n        baseUrls[' ' + base] = base + '/';\n      } else {\n        baseUrls[' ' + base] = rtrim$1(base, '/', true);\n      }\n    }\n\n    base = baseUrls[' ' + base];\n    var relativeBase = base.indexOf(':') === -1;\n\n    if (href.substring(0, 2) === '//') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(protocol, '$1') + href;\n    } else if (href.charAt(0) === '/') {\n      if (relativeBase) {\n        return href;\n      }\n\n      return base.replace(domain, '$1') + href;\n    } else {\n      return base + href;\n    }\n  }\n\n  var noopTest$1 = {\n    exec: function noopTest() {}\n  };\n\n  function merge$2(obj) {\n    var i = 1,\n        target,\n        key;\n\n    for (; i < arguments.length; i++) {\n      target = arguments[i];\n\n      for (key in target) {\n        if (Object.prototype.hasOwnProperty.call(target, key)) {\n          obj[key] = target[key];\n        }\n      }\n    }\n\n    return obj;\n  }\n\n  function splitCells$1(tableRow, count) {\n    // ensure that every cell-delimiting pipe has a space\n    // before it to distinguish it from an escaped pipe\n    var row = tableRow.replace(/\\|/g, function (match, offset, str) {\n      var escaped = false,\n          curr = offset;\n\n      while (--curr >= 0 && str[curr] === '\\\\') {\n        escaped = !escaped;\n      }\n\n      if (escaped) {\n        // odd number of slashes means | is escaped\n        // so we leave it alone\n        return '|';\n      } else {\n        // add space before unescaped |\n        return ' |';\n      }\n    }),\n        cells = row.split(/ \\|/);\n    var i = 0; // First/last cell in a row cannot be empty if it has no leading/trailing pipe\n\n    if (!cells[0].trim()) {\n      cells.shift();\n    }\n\n    if (!cells[cells.length - 1].trim()) {\n      cells.pop();\n    }\n\n    if (cells.length > count) {\n      cells.splice(count);\n    } else {\n      while (cells.length < count) {\n        cells.push('');\n      }\n    }\n\n    for (; i < cells.length; i++) {\n      // leading or trailing whitespace is ignored per the gfm spec\n      cells[i] = cells[i].trim().replace(/\\\\\\|/g, '|');\n    }\n\n    return cells;\n  } // Remove trailing 'c's. Equivalent to str.replace(/c*$/, '').\n  // /c*$/ is vulnerable to REDOS.\n  // invert: Remove suffix of non-c chars instead. Default falsey.\n\n\n  function rtrim$1(str, c, invert) {\n    var l = str.length;\n\n    if (l === 0) {\n      return '';\n    } // Length of suffix matching the invert condition.\n\n\n    var suffLen = 0; // Step left until we fail to match the invert condition.\n\n    while (suffLen < l) {\n      var currChar = str.charAt(l - suffLen - 1);\n\n      if (currChar === c && !invert) {\n        suffLen++;\n      } else if (currChar !== c && invert) {\n        suffLen++;\n      } else {\n        break;\n      }\n    }\n\n    return str.substr(0, l - suffLen);\n  }\n\n  function findClosingBracket$1(str, b) {\n    if (str.indexOf(b[1]) === -1) {\n      return -1;\n    }\n\n    var l = str.length;\n    var level = 0,\n        i = 0;\n\n    for (; i < l; i++) {\n      if (str[i] === '\\\\') {\n        i++;\n      } else if (str[i] === b[0]) {\n        level++;\n      } else if (str[i] === b[1]) {\n        level--;\n\n        if (level < 0) {\n          return i;\n        }\n      }\n    }\n\n    return -1;\n  }\n\n  function checkSanitizeDeprecation$1(opt) {\n    if (opt && opt.sanitize && !opt.silent) {\n      console.warn('marked(): sanitize and sanitizer parameters are deprecated since version 0.7.0, should not be used and will be removed in the future. Read more here: https://marked.js.org/#/USING_ADVANCED.md#options');\n    }\n  } // copied from https://stackoverflow.com/a/5450113/806777\n\n\n  function repeatString$1(pattern, count) {\n    if (count < 1) {\n      return '';\n    }\n\n    var result = '';\n\n    while (count > 1) {\n      if (count & 1) {\n        result += pattern;\n      }\n\n      count >>= 1;\n      pattern += pattern;\n    }\n\n    return result + pattern;\n  }\n\n  var helpers = {\n    escape: escape$2,\n    unescape: unescape$1,\n    edit: edit$1,\n    cleanUrl: cleanUrl$1,\n    resolveUrl: resolveUrl,\n    noopTest: noopTest$1,\n    merge: merge$2,\n    splitCells: splitCells$1,\n    rtrim: rtrim$1,\n    findClosingBracket: findClosingBracket$1,\n    checkSanitizeDeprecation: checkSanitizeDeprecation$1,\n    repeatString: repeatString$1\n  };\n\n  var defaults$4 = defaults$5.exports.defaults;\n  var rtrim = helpers.rtrim,\n      splitCells = helpers.splitCells,\n      _escape = helpers.escape,\n      findClosingBracket = helpers.findClosingBracket;\n\n  function outputLink(cap, link, raw, lexer) {\n    var href = link.href;\n    var title = link.title ? _escape(link.title) : null;\n    var text = cap[1].replace(/\\\\([\\[\\]])/g, '$1');\n\n    if (cap[0].charAt(0) !== '!') {\n      lexer.state.inLink = true;\n      var token = {\n        type: 'link',\n        raw: raw,\n        href: href,\n        title: title,\n        text: text,\n        tokens: lexer.inlineTokens(text, [])\n      };\n      lexer.state.inLink = false;\n      return token;\n    } else {\n      return {\n        type: 'image',\n        raw: raw,\n        href: href,\n        title: title,\n        text: _escape(text)\n      };\n    }\n  }\n\n  function indentCodeCompensation(raw, text) {\n    var matchIndentToCode = raw.match(/^(\\s+)(?:```)/);\n\n    if (matchIndentToCode === null) {\n      return text;\n    }\n\n    var indentToCode = matchIndentToCode[1];\n    return text.split('\\n').map(function (node) {\n      var matchIndentInNode = node.match(/^\\s+/);\n\n      if (matchIndentInNode === null) {\n        return node;\n      }\n\n      var indentInNode = matchIndentInNode[0];\n\n      if (indentInNode.length >= indentToCode.length) {\n        return node.slice(indentToCode.length);\n      }\n\n      return node;\n    }).join('\\n');\n  }\n  /**\n   * Tokenizer\n   */\n\n\n  var Tokenizer_1 = /*#__PURE__*/function () {\n    function Tokenizer(options) {\n      this.options = options || defaults$4;\n    }\n\n    var _proto = Tokenizer.prototype;\n\n    _proto.space = function space(src) {\n      var cap = this.rules.block.newline.exec(src);\n\n      if (cap) {\n        if (cap[0].length > 1) {\n          return {\n            type: 'space',\n            raw: cap[0]\n          };\n        }\n\n        return {\n          raw: '\\n'\n        };\n      }\n    };\n\n    _proto.code = function code(src) {\n      var cap = this.rules.block.code.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ {1,4}/gm, '');\n        return {\n          type: 'code',\n          raw: cap[0],\n          codeBlockStyle: 'indented',\n          text: !this.options.pedantic ? rtrim(text, '\\n') : text\n        };\n      }\n    };\n\n    _proto.fences = function fences(src) {\n      var cap = this.rules.block.fences.exec(src);\n\n      if (cap) {\n        var raw = cap[0];\n        var text = indentCodeCompensation(raw, cap[3] || '');\n        return {\n          type: 'code',\n          raw: raw,\n          lang: cap[2] ? cap[2].trim() : cap[2],\n          text: text\n        };\n      }\n    };\n\n    _proto.heading = function heading(src) {\n      var cap = this.rules.block.heading.exec(src);\n\n      if (cap) {\n        var text = cap[2].trim(); // remove trailing #s\n\n        if (/#$/.test(text)) {\n          var trimmed = rtrim(text, '#');\n\n          if (this.options.pedantic) {\n            text = trimmed.trim();\n          } else if (!trimmed || / $/.test(trimmed)) {\n            // CommonMark requires space before trailing #s\n            text = trimmed.trim();\n          }\n        }\n\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[1].length,\n          text: text,\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.hr = function hr(src) {\n      var cap = this.rules.block.hr.exec(src);\n\n      if (cap) {\n        return {\n          type: 'hr',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.blockquote = function blockquote(src) {\n      var cap = this.rules.block.blockquote.exec(src);\n\n      if (cap) {\n        var text = cap[0].replace(/^ *> ?/gm, '');\n        return {\n          type: 'blockquote',\n          raw: cap[0],\n          tokens: this.lexer.blockTokens(text, []),\n          text: text\n        };\n      }\n    };\n\n    _proto.list = function list(src) {\n      var cap = this.rules.block.list.exec(src);\n\n      if (cap) {\n        var raw, istask, ischecked, indent, i, blankLine, endsWithBlankLine, line, lines, itemContents;\n        var bull = cap[1].trim();\n        var isordered = bull.length > 1;\n        var list = {\n          type: 'list',\n          raw: '',\n          ordered: isordered,\n          start: isordered ? +bull.slice(0, -1) : '',\n          loose: false,\n          items: []\n        };\n        bull = isordered ? \"\\\\d{1,9}\\\\\" + bull.slice(-1) : \"\\\\\" + bull;\n\n        if (this.options.pedantic) {\n          bull = isordered ? bull : '[*+-]';\n        } // Get next list item\n\n\n        var itemRegex = new RegExp(\"^( {0,3}\" + bull + \")((?: [^\\\\n]*| *)(?:\\\\n[^\\\\n]*)*(?:\\\\n|$))\"); // Get each top-level item\n\n        while (src) {\n          if (this.rules.block.hr.test(src)) {\n            // End list if we encounter an HR (possibly move into itemRegex?)\n            break;\n          }\n\n          if (!(cap = itemRegex.exec(src))) {\n            break;\n          }\n\n          lines = cap[2].split('\\n');\n\n          if (this.options.pedantic) {\n            indent = 2;\n            itemContents = lines[0].trimLeft();\n          } else {\n            indent = cap[2].search(/[^ ]/); // Find first non-space char\n\n            indent = cap[1].length + (indent > 4 ? 1 : indent); // intented code blocks after 4 spaces; indent is always 1\n\n            itemContents = lines[0].slice(indent - cap[1].length);\n          }\n\n          blankLine = false;\n          raw = cap[0];\n\n          if (!lines[0] && /^ *$/.test(lines[1])) {\n            // items begin with at most one blank line\n            raw = cap[1] + lines.slice(0, 2).join('\\n') + '\\n';\n            list.loose = true;\n            lines = [];\n          }\n\n          var nextBulletRegex = new RegExp(\"^ {0,\" + Math.min(3, indent - 1) + \"}(?:[*+-]|\\\\d{1,9}[.)])\");\n\n          for (i = 1; i < lines.length; i++) {\n            line = lines[i];\n\n            if (this.options.pedantic) {\n              // Re-align to follow commonmark nesting rules\n              line = line.replace(/^ {1,4}(?=( {4})*[^ ])/g, '  ');\n            } // End list item if found start of new bullet\n\n\n            if (nextBulletRegex.test(line)) {\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            } // Until we encounter a blank line, item contents do not need indentation\n\n\n            if (!blankLine) {\n              if (!line.trim()) {\n                // Check if current line is empty\n                blankLine = true;\n              } // Dedent if possible\n\n\n              if (line.search(/[^ ]/) >= indent) {\n                itemContents += '\\n' + line.slice(indent);\n              } else {\n                itemContents += '\\n' + line;\n              }\n\n              continue;\n            } // Dedent this line\n\n\n            if (line.search(/[^ ]/) >= indent || !line.trim()) {\n              itemContents += '\\n' + line.slice(indent);\n              continue;\n            } else {\n              // Line was not properly indented; end of this item\n              raw = cap[1] + lines.slice(0, i).join('\\n') + '\\n';\n              break;\n            }\n          }\n\n          if (!list.loose) {\n            // If the previous item ended with a blank line, the list is loose\n            if (endsWithBlankLine) {\n              list.loose = true;\n            } else if (/\\n *\\n *$/.test(raw)) {\n              endsWithBlankLine = true;\n            }\n          } // Check for task list items\n\n\n          if (this.options.gfm) {\n            istask = /^\\[[ xX]\\] /.exec(itemContents);\n\n            if (istask) {\n              ischecked = istask[0] !== '[ ] ';\n              itemContents = itemContents.replace(/^\\[[ xX]\\] +/, '');\n            }\n          }\n\n          list.items.push({\n            type: 'list_item',\n            raw: raw,\n            task: !!istask,\n            checked: ischecked,\n            loose: false,\n            text: itemContents\n          });\n          list.raw += raw;\n          src = src.slice(raw.length);\n        } // Do not consume newlines at end of final item. Alternatively, make itemRegex *start* with any newlines to simplify/speed up endsWithBlankLine logic\n\n\n        list.items[list.items.length - 1].raw = raw.trimRight();\n        list.items[list.items.length - 1].text = itemContents.trimRight();\n        list.raw = list.raw.trimRight();\n        var l = list.items.length; // Item child tokens handled here at end because we needed to have the final item to trim it first\n\n        for (i = 0; i < l; i++) {\n          this.lexer.state.top = false;\n          list.items[i].tokens = this.lexer.blockTokens(list.items[i].text, []);\n\n          if (list.items[i].tokens.some(function (t) {\n            return t.type === 'space';\n          })) {\n            list.loose = true;\n            list.items[i].loose = true;\n          }\n        }\n\n        return list;\n      }\n    };\n\n    _proto.html = function html(src) {\n      var cap = this.rules.block.html.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'html',\n          raw: cap[0],\n          pre: !this.options.sanitizer && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n          text: cap[0]\n        };\n\n        if (this.options.sanitize) {\n          token.type = 'paragraph';\n          token.text = this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]);\n          token.tokens = [];\n          this.lexer.inline(token.text, token.tokens);\n        }\n\n        return token;\n      }\n    };\n\n    _proto.def = function def(src) {\n      var cap = this.rules.block.def.exec(src);\n\n      if (cap) {\n        if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n        var tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n        return {\n          type: 'def',\n          tag: tag,\n          raw: cap[0],\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n    };\n\n    _proto.table = function table(src) {\n      var cap = this.rules.block.table.exec(src);\n\n      if (cap) {\n        var item = {\n          type: 'table',\n          header: splitCells(cap[1]).map(function (c) {\n            return {\n              text: c\n            };\n          }),\n          align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n          rows: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n        };\n\n        if (item.header.length === item.align.length) {\n          item.raw = cap[0];\n          var l = item.align.length;\n          var i, j, k, row;\n\n          for (i = 0; i < l; i++) {\n            if (/^ *-+: *$/.test(item.align[i])) {\n              item.align[i] = 'right';\n            } else if (/^ *:-+: *$/.test(item.align[i])) {\n              item.align[i] = 'center';\n            } else if (/^ *:-+ *$/.test(item.align[i])) {\n              item.align[i] = 'left';\n            } else {\n              item.align[i] = null;\n            }\n          }\n\n          l = item.rows.length;\n\n          for (i = 0; i < l; i++) {\n            item.rows[i] = splitCells(item.rows[i], item.header.length).map(function (c) {\n              return {\n                text: c\n              };\n            });\n          } // parse child tokens inside headers and cells\n          // header child tokens\n\n\n          l = item.header.length;\n\n          for (j = 0; j < l; j++) {\n            item.header[j].tokens = [];\n            this.lexer.inlineTokens(item.header[j].text, item.header[j].tokens);\n          } // cell child tokens\n\n\n          l = item.rows.length;\n\n          for (j = 0; j < l; j++) {\n            row = item.rows[j];\n\n            for (k = 0; k < row.length; k++) {\n              row[k].tokens = [];\n              this.lexer.inlineTokens(row[k].text, row[k].tokens);\n            }\n          }\n\n          return item;\n        }\n      }\n    };\n\n    _proto.lheading = function lheading(src) {\n      var cap = this.rules.block.lheading.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'heading',\n          raw: cap[0],\n          depth: cap[2].charAt(0) === '=' ? 1 : 2,\n          text: cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.paragraph = function paragraph(src) {\n      var cap = this.rules.block.paragraph.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'paragraph',\n          raw: cap[0],\n          text: cap[1].charAt(cap[1].length - 1) === '\\n' ? cap[1].slice(0, -1) : cap[1],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.text = function text(src) {\n      var cap = this.rules.block.text.exec(src);\n\n      if (cap) {\n        var token = {\n          type: 'text',\n          raw: cap[0],\n          text: cap[0],\n          tokens: []\n        };\n        this.lexer.inline(token.text, token.tokens);\n        return token;\n      }\n    };\n\n    _proto.escape = function escape(src) {\n      var cap = this.rules.inline.escape.exec(src);\n\n      if (cap) {\n        return {\n          type: 'escape',\n          raw: cap[0],\n          text: _escape(cap[1])\n        };\n      }\n    };\n\n    _proto.tag = function tag(src) {\n      var cap = this.rules.inline.tag.exec(src);\n\n      if (cap) {\n        if (!this.lexer.state.inLink && /^<a /i.test(cap[0])) {\n          this.lexer.state.inLink = true;\n        } else if (this.lexer.state.inLink && /^<\\/a>/i.test(cap[0])) {\n          this.lexer.state.inLink = false;\n        }\n\n        if (!this.lexer.state.inRawBlock && /^<(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = true;\n        } else if (this.lexer.state.inRawBlock && /^<\\/(pre|code|kbd|script)(\\s|>)/i.test(cap[0])) {\n          this.lexer.state.inRawBlock = false;\n        }\n\n        return {\n          type: this.options.sanitize ? 'text' : 'html',\n          raw: cap[0],\n          inLink: this.lexer.state.inLink,\n          inRawBlock: this.lexer.state.inRawBlock,\n          text: this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0]\n        };\n      }\n    };\n\n    _proto.link = function link(src) {\n      var cap = this.rules.inline.link.exec(src);\n\n      if (cap) {\n        var trimmedUrl = cap[2].trim();\n\n        if (!this.options.pedantic && /^</.test(trimmedUrl)) {\n          // commonmark requires matching angle brackets\n          if (!/>$/.test(trimmedUrl)) {\n            return;\n          } // ending angle bracket cannot be escaped\n\n\n          var rtrimSlash = rtrim(trimmedUrl.slice(0, -1), '\\\\');\n\n          if ((trimmedUrl.length - rtrimSlash.length) % 2 === 0) {\n            return;\n          }\n        } else {\n          // find closing parenthesis\n          var lastParenIndex = findClosingBracket(cap[2], '()');\n\n          if (lastParenIndex > -1) {\n            var start = cap[0].indexOf('!') === 0 ? 5 : 4;\n            var linkLen = start + cap[1].length + lastParenIndex;\n            cap[2] = cap[2].substring(0, lastParenIndex);\n            cap[0] = cap[0].substring(0, linkLen).trim();\n            cap[3] = '';\n          }\n        }\n\n        var href = cap[2];\n        var title = '';\n\n        if (this.options.pedantic) {\n          // split pedantic href and title\n          var link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n          if (link) {\n            href = link[1];\n            title = link[3];\n          }\n        } else {\n          title = cap[3] ? cap[3].slice(1, -1) : '';\n        }\n\n        href = href.trim();\n\n        if (/^</.test(href)) {\n          if (this.options.pedantic && !/>$/.test(trimmedUrl)) {\n            // pedantic allows starting angle bracket without ending angle bracket\n            href = href.slice(1);\n          } else {\n            href = href.slice(1, -1);\n          }\n        }\n\n        return outputLink(cap, {\n          href: href ? href.replace(this.rules.inline._escapes, '$1') : href,\n          title: title ? title.replace(this.rules.inline._escapes, '$1') : title\n        }, cap[0], this.lexer);\n      }\n    };\n\n    _proto.reflink = function reflink(src, links) {\n      var cap;\n\n      if ((cap = this.rules.inline.reflink.exec(src)) || (cap = this.rules.inline.nolink.exec(src))) {\n        var link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n        link = links[link.toLowerCase()];\n\n        if (!link || !link.href) {\n          var text = cap[0].charAt(0);\n          return {\n            type: 'text',\n            raw: text,\n            text: text\n          };\n        }\n\n        return outputLink(cap, link, cap[0], this.lexer);\n      }\n    };\n\n    _proto.emStrong = function emStrong(src, maskedSrc, prevChar) {\n      if (prevChar === void 0) {\n        prevChar = '';\n      }\n\n      var match = this.rules.inline.emStrong.lDelim.exec(src);\n      if (!match) return; // _ can't be between two alphanumerics. \\p{L}\\p{N} includes non-english alphabet/numbers as well\n\n      if (match[3] && prevChar.match(/(?:[0-9A-Za-z\\xAA\\xB2\\xB3\\xB5\\xB9\\xBA\\xBC-\\xBE\\xC0-\\xD6\\xD8-\\xF6\\xF8-\\u02C1\\u02C6-\\u02D1\\u02E0-\\u02E4\\u02EC\\u02EE\\u0370-\\u0374\\u0376\\u0377\\u037A-\\u037D\\u037F\\u0386\\u0388-\\u038A\\u038C\\u038E-\\u03A1\\u03A3-\\u03F5\\u03F7-\\u0481\\u048A-\\u052F\\u0531-\\u0556\\u0559\\u0560-\\u0588\\u05D0-\\u05EA\\u05EF-\\u05F2\\u0620-\\u064A\\u0660-\\u0669\\u066E\\u066F\\u0671-\\u06D3\\u06D5\\u06E5\\u06E6\\u06EE-\\u06FC\\u06FF\\u0710\\u0712-\\u072F\\u074D-\\u07A5\\u07B1\\u07C0-\\u07EA\\u07F4\\u07F5\\u07FA\\u0800-\\u0815\\u081A\\u0824\\u0828\\u0840-\\u0858\\u0860-\\u086A\\u08A0-\\u08B4\\u08B6-\\u08C7\\u0904-\\u0939\\u093D\\u0950\\u0958-\\u0961\\u0966-\\u096F\\u0971-\\u0980\\u0985-\\u098C\\u098F\\u0990\\u0993-\\u09A8\\u09AA-\\u09B0\\u09B2\\u09B6-\\u09B9\\u09BD\\u09CE\\u09DC\\u09DD\\u09DF-\\u09E1\\u09E6-\\u09F1\\u09F4-\\u09F9\\u09FC\\u0A05-\\u0A0A\\u0A0F\\u0A10\\u0A13-\\u0A28\\u0A2A-\\u0A30\\u0A32\\u0A33\\u0A35\\u0A36\\u0A38\\u0A39\\u0A59-\\u0A5C\\u0A5E\\u0A66-\\u0A6F\\u0A72-\\u0A74\\u0A85-\\u0A8D\\u0A8F-\\u0A91\\u0A93-\\u0AA8\\u0AAA-\\u0AB0\\u0AB2\\u0AB3\\u0AB5-\\u0AB9\\u0ABD\\u0AD0\\u0AE0\\u0AE1\\u0AE6-\\u0AEF\\u0AF9\\u0B05-\\u0B0C\\u0B0F\\u0B10\\u0B13-\\u0B28\\u0B2A-\\u0B30\\u0B32\\u0B33\\u0B35-\\u0B39\\u0B3D\\u0B5C\\u0B5D\\u0B5F-\\u0B61\\u0B66-\\u0B6F\\u0B71-\\u0B77\\u0B83\\u0B85-\\u0B8A\\u0B8E-\\u0B90\\u0B92-\\u0B95\\u0B99\\u0B9A\\u0B9C\\u0B9E\\u0B9F\\u0BA3\\u0BA4\\u0BA8-\\u0BAA\\u0BAE-\\u0BB9\\u0BD0\\u0BE6-\\u0BF2\\u0C05-\\u0C0C\\u0C0E-\\u0C10\\u0C12-\\u0C28\\u0C2A-\\u0C39\\u0C3D\\u0C58-\\u0C5A\\u0C60\\u0C61\\u0C66-\\u0C6F\\u0C78-\\u0C7E\\u0C80\\u0C85-\\u0C8C\\u0C8E-\\u0C90\\u0C92-\\u0CA8\\u0CAA-\\u0CB3\\u0CB5-\\u0CB9\\u0CBD\\u0CDE\\u0CE0\\u0CE1\\u0CE6-\\u0CEF\\u0CF1\\u0CF2\\u0D04-\\u0D0C\\u0D0E-\\u0D10\\u0D12-\\u0D3A\\u0D3D\\u0D4E\\u0D54-\\u0D56\\u0D58-\\u0D61\\u0D66-\\u0D78\\u0D7A-\\u0D7F\\u0D85-\\u0D96\\u0D9A-\\u0DB1\\u0DB3-\\u0DBB\\u0DBD\\u0DC0-\\u0DC6\\u0DE6-\\u0DEF\\u0E01-\\u0E30\\u0E32\\u0E33\\u0E40-\\u0E46\\u0E50-\\u0E59\\u0E81\\u0E82\\u0E84\\u0E86-\\u0E8A\\u0E8C-\\u0EA3\\u0EA5\\u0EA7-\\u0EB0\\u0EB2\\u0EB3\\u0EBD\\u0EC0-\\u0EC4\\u0EC6\\u0ED0-\\u0ED9\\u0EDC-\\u0EDF\\u0F00\\u0F20-\\u0F33\\u0F40-\\u0F47\\u0F49-\\u0F6C\\u0F88-\\u0F8C\\u1000-\\u102A\\u103F-\\u1049\\u1050-\\u1055\\u105A-\\u105D\\u1061\\u1065\\u1066\\u106E-\\u1070\\u1075-\\u1081\\u108E\\u1090-\\u1099\\u10A0-\\u10C5\\u10C7\\u10CD\\u10D0-\\u10FA\\u10FC-\\u1248\\u124A-\\u124D\\u1250-\\u1256\\u1258\\u125A-\\u125D\\u1260-\\u1288\\u128A-\\u128D\\u1290-\\u12B0\\u12B2-\\u12B5\\u12B8-\\u12BE\\u12C0\\u12C2-\\u12C5\\u12C8-\\u12D6\\u12D8-\\u1310\\u1312-\\u1315\\u1318-\\u135A\\u1369-\\u137C\\u1380-\\u138F\\u13A0-\\u13F5\\u13F8-\\u13FD\\u1401-\\u166C\\u166F-\\u167F\\u1681-\\u169A\\u16A0-\\u16EA\\u16EE-\\u16F8\\u1700-\\u170C\\u170E-\\u1711\\u1720-\\u1731\\u1740-\\u1751\\u1760-\\u176C\\u176E-\\u1770\\u1780-\\u17B3\\u17D7\\u17DC\\u17E0-\\u17E9\\u17F0-\\u17F9\\u1810-\\u1819\\u1820-\\u1878\\u1880-\\u1884\\u1887-\\u18A8\\u18AA\\u18B0-\\u18F5\\u1900-\\u191E\\u1946-\\u196D\\u1970-\\u1974\\u1980-\\u19AB\\u19B0-\\u19C9\\u19D0-\\u19DA\\u1A00-\\u1A16\\u1A20-\\u1A54\\u1A80-\\u1A89\\u1A90-\\u1A99\\u1AA7\\u1B05-\\u1B33\\u1B45-\\u1B4B\\u1B50-\\u1B59\\u1B83-\\u1BA0\\u1BAE-\\u1BE5\\u1C00-\\u1C23\\u1C40-\\u1C49\\u1C4D-\\u1C7D\\u1C80-\\u1C88\\u1C90-\\u1CBA\\u1CBD-\\u1CBF\\u1CE9-\\u1CEC\\u1CEE-\\u1CF3\\u1CF5\\u1CF6\\u1CFA\\u1D00-\\u1DBF\\u1E00-\\u1F15\\u1F18-\\u1F1D\\u1F20-\\u1F45\\u1F48-\\u1F4D\\u1F50-\\u1F57\\u1F59\\u1F5B\\u1F5D\\u1F5F-\\u1F7D\\u1F80-\\u1FB4\\u1FB6-\\u1FBC\\u1FBE\\u1FC2-\\u1FC4\\u1FC6-\\u1FCC\\u1FD0-\\u1FD3\\u1FD6-\\u1FDB\\u1FE0-\\u1FEC\\u1FF2-\\u1FF4\\u1FF6-\\u1FFC\\u2070\\u2071\\u2074-\\u2079\\u207F-\\u2089\\u2090-\\u209C\\u2102\\u2107\\u210A-\\u2113\\u2115\\u2119-\\u211D\\u2124\\u2126\\u2128\\u212A-\\u212D\\u212F-\\u2139\\u213C-\\u213F\\u2145-\\u2149\\u214E\\u2150-\\u2189\\u2460-\\u249B\\u24EA-\\u24FF\\u2776-\\u2793\\u2C00-\\u2C2E\\u2C30-\\u2C5E\\u2C60-\\u2CE4\\u2CEB-\\u2CEE\\u2CF2\\u2CF3\\u2CFD\\u2D00-\\u2D25\\u2D27\\u2D2D\\u2D30-\\u2D67\\u2D6F\\u2D80-\\u2D96\\u2DA0-\\u2DA6\\u2DA8-\\u2DAE\\u2DB0-\\u2DB6\\u2DB8-\\u2DBE\\u2DC0-\\u2DC6\\u2DC8-\\u2DCE\\u2DD0-\\u2DD6\\u2DD8-\\u2DDE\\u2E2F\\u3005-\\u3007\\u3021-\\u3029\\u3031-\\u3035\\u3038-\\u303C\\u3041-\\u3096\\u309D-\\u309F\\u30A1-\\u30FA\\u30FC-\\u30FF\\u3105-\\u312F\\u3131-\\u318E\\u3192-\\u3195\\u31A0-\\u31BF\\u31F0-\\u31FF\\u3220-\\u3229\\u3248-\\u324F\\u3251-\\u325F\\u3280-\\u3289\\u32B1-\\u32BF\\u3400-\\u4DBF\\u4E00-\\u9FFC\\uA000-\\uA48C\\uA4D0-\\uA4FD\\uA500-\\uA60C\\uA610-\\uA62B\\uA640-\\uA66E\\uA67F-\\uA69D\\uA6A0-\\uA6EF\\uA717-\\uA71F\\uA722-\\uA788\\uA78B-\\uA7BF\\uA7C2-\\uA7CA\\uA7F5-\\uA801\\uA803-\\uA805\\uA807-\\uA80A\\uA80C-\\uA822\\uA830-\\uA835\\uA840-\\uA873\\uA882-\\uA8B3\\uA8D0-\\uA8D9\\uA8F2-\\uA8F7\\uA8FB\\uA8FD\\uA8FE\\uA900-\\uA925\\uA930-\\uA946\\uA960-\\uA97C\\uA984-\\uA9B2\\uA9CF-\\uA9D9\\uA9E0-\\uA9E4\\uA9E6-\\uA9FE\\uAA00-\\uAA28\\uAA40-\\uAA42\\uAA44-\\uAA4B\\uAA50-\\uAA59\\uAA60-\\uAA76\\uAA7A\\uAA7E-\\uAAAF\\uAAB1\\uAAB5\\uAAB6\\uAAB9-\\uAABD\\uAAC0\\uAAC2\\uAADB-\\uAADD\\uAAE0-\\uAAEA\\uAAF2-\\uAAF4\\uAB01-\\uAB06\\uAB09-\\uAB0E\\uAB11-\\uAB16\\uAB20-\\uAB26\\uAB28-\\uAB2E\\uAB30-\\uAB5A\\uAB5C-\\uAB69\\uAB70-\\uABE2\\uABF0-\\uABF9\\uAC00-\\uD7A3\\uD7B0-\\uD7C6\\uD7CB-\\uD7FB\\uF900-\\uFA6D\\uFA70-\\uFAD9\\uFB00-\\uFB06\\uFB13-\\uFB17\\uFB1D\\uFB1F-\\uFB28\\uFB2A-\\uFB36\\uFB38-\\uFB3C\\uFB3E\\uFB40\\uFB41\\uFB43\\uFB44\\uFB46-\\uFBB1\\uFBD3-\\uFD3D\\uFD50-\\uFD8F\\uFD92-\\uFDC7\\uFDF0-\\uFDFB\\uFE70-\\uFE74\\uFE76-\\uFEFC\\uFF10-\\uFF19\\uFF21-\\uFF3A\\uFF41-\\uFF5A\\uFF66-\\uFFBE\\uFFC2-\\uFFC7\\uFFCA-\\uFFCF\\uFFD2-\\uFFD7\\uFFDA-\\uFFDC]|\\uD800[\\uDC00-\\uDC0B\\uDC0D-\\uDC26\\uDC28-\\uDC3A\\uDC3C\\uDC3D\\uDC3F-\\uDC4D\\uDC50-\\uDC5D\\uDC80-\\uDCFA\\uDD07-\\uDD33\\uDD40-\\uDD78\\uDD8A\\uDD8B\\uDE80-\\uDE9C\\uDEA0-\\uDED0\\uDEE1-\\uDEFB\\uDF00-\\uDF23\\uDF2D-\\uDF4A\\uDF50-\\uDF75\\uDF80-\\uDF9D\\uDFA0-\\uDFC3\\uDFC8-\\uDFCF\\uDFD1-\\uDFD5]|\\uD801[\\uDC00-\\uDC9D\\uDCA0-\\uDCA9\\uDCB0-\\uDCD3\\uDCD8-\\uDCFB\\uDD00-\\uDD27\\uDD30-\\uDD63\\uDE00-\\uDF36\\uDF40-\\uDF55\\uDF60-\\uDF67]|\\uD802[\\uDC00-\\uDC05\\uDC08\\uDC0A-\\uDC35\\uDC37\\uDC38\\uDC3C\\uDC3F-\\uDC55\\uDC58-\\uDC76\\uDC79-\\uDC9E\\uDCA7-\\uDCAF\\uDCE0-\\uDCF2\\uDCF4\\uDCF5\\uDCFB-\\uDD1B\\uDD20-\\uDD39\\uDD80-\\uDDB7\\uDDBC-\\uDDCF\\uDDD2-\\uDE00\\uDE10-\\uDE13\\uDE15-\\uDE17\\uDE19-\\uDE35\\uDE40-\\uDE48\\uDE60-\\uDE7E\\uDE80-\\uDE9F\\uDEC0-\\uDEC7\\uDEC9-\\uDEE4\\uDEEB-\\uDEEF\\uDF00-\\uDF35\\uDF40-\\uDF55\\uDF58-\\uDF72\\uDF78-\\uDF91\\uDFA9-\\uDFAF]|\\uD803[\\uDC00-\\uDC48\\uDC80-\\uDCB2\\uDCC0-\\uDCF2\\uDCFA-\\uDD23\\uDD30-\\uDD39\\uDE60-\\uDE7E\\uDE80-\\uDEA9\\uDEB0\\uDEB1\\uDF00-\\uDF27\\uDF30-\\uDF45\\uDF51-\\uDF54\\uDFB0-\\uDFCB\\uDFE0-\\uDFF6]|\\uD804[\\uDC03-\\uDC37\\uDC52-\\uDC6F\\uDC83-\\uDCAF\\uDCD0-\\uDCE8\\uDCF0-\\uDCF9\\uDD03-\\uDD26\\uDD36-\\uDD3F\\uDD44\\uDD47\\uDD50-\\uDD72\\uDD76\\uDD83-\\uDDB2\\uDDC1-\\uDDC4\\uDDD0-\\uDDDA\\uDDDC\\uDDE1-\\uDDF4\\uDE00-\\uDE11\\uDE13-\\uDE2B\\uDE80-\\uDE86\\uDE88\\uDE8A-\\uDE8D\\uDE8F-\\uDE9D\\uDE9F-\\uDEA8\\uDEB0-\\uDEDE\\uDEF0-\\uDEF9\\uDF05-\\uDF0C\\uDF0F\\uDF10\\uDF13-\\uDF28\\uDF2A-\\uDF30\\uDF32\\uDF33\\uDF35-\\uDF39\\uDF3D\\uDF50\\uDF5D-\\uDF61]|\\uD805[\\uDC00-\\uDC34\\uDC47-\\uDC4A\\uDC50-\\uDC59\\uDC5F-\\uDC61\\uDC80-\\uDCAF\\uDCC4\\uDCC5\\uDCC7\\uDCD0-\\uDCD9\\uDD80-\\uDDAE\\uDDD8-\\uDDDB\\uDE00-\\uDE2F\\uDE44\\uDE50-\\uDE59\\uDE80-\\uDEAA\\uDEB8\\uDEC0-\\uDEC9\\uDF00-\\uDF1A\\uDF30-\\uDF3B]|\\uD806[\\uDC00-\\uDC2B\\uDCA0-\\uDCF2\\uDCFF-\\uDD06\\uDD09\\uDD0C-\\uDD13\\uDD15\\uDD16\\uDD18-\\uDD2F\\uDD3F\\uDD41\\uDD50-\\uDD59\\uDDA0-\\uDDA7\\uDDAA-\\uDDD0\\uDDE1\\uDDE3\\uDE00\\uDE0B-\\uDE32\\uDE3A\\uDE50\\uDE5C-\\uDE89\\uDE9D\\uDEC0-\\uDEF8]|\\uD807[\\uDC00-\\uDC08\\uDC0A-\\uDC2E\\uDC40\\uDC50-\\uDC6C\\uDC72-\\uDC8F\\uDD00-\\uDD06\\uDD08\\uDD09\\uDD0B-\\uDD30\\uDD46\\uDD50-\\uDD59\\uDD60-\\uDD65\\uDD67\\uDD68\\uDD6A-\\uDD89\\uDD98\\uDDA0-\\uDDA9\\uDEE0-\\uDEF2\\uDFB0\\uDFC0-\\uDFD4]|\\uD808[\\uDC00-\\uDF99]|\\uD809[\\uDC00-\\uDC6E\\uDC80-\\uDD43]|[\\uD80C\\uD81C-\\uD820\\uD822\\uD840-\\uD868\\uD86A-\\uD86C\\uD86F-\\uD872\\uD874-\\uD879\\uD880-\\uD883][\\uDC00-\\uDFFF]|\\uD80D[\\uDC00-\\uDC2E]|\\uD811[\\uDC00-\\uDE46]|\\uD81A[\\uDC00-\\uDE38\\uDE40-\\uDE5E\\uDE60-\\uDE69\\uDED0-\\uDEED\\uDF00-\\uDF2F\\uDF40-\\uDF43\\uDF50-\\uDF59\\uDF5B-\\uDF61\\uDF63-\\uDF77\\uDF7D-\\uDF8F]|\\uD81B[\\uDE40-\\uDE96\\uDF00-\\uDF4A\\uDF50\\uDF93-\\uDF9F\\uDFE0\\uDFE1\\uDFE3]|\\uD821[\\uDC00-\\uDFF7]|\\uD823[\\uDC00-\\uDCD5\\uDD00-\\uDD08]|\\uD82C[\\uDC00-\\uDD1E\\uDD50-\\uDD52\\uDD64-\\uDD67\\uDD70-\\uDEFB]|\\uD82F[\\uDC00-\\uDC6A\\uDC70-\\uDC7C\\uDC80-\\uDC88\\uDC90-\\uDC99]|\\uD834[\\uDEE0-\\uDEF3\\uDF60-\\uDF78]|\\uD835[\\uDC00-\\uDC54\\uDC56-\\uDC9C\\uDC9E\\uDC9F\\uDCA2\\uDCA5\\uDCA6\\uDCA9-\\uDCAC\\uDCAE-\\uDCB9\\uDCBB\\uDCBD-\\uDCC3\\uDCC5-\\uDD05\\uDD07-\\uDD0A\\uDD0D-\\uDD14\\uDD16-\\uDD1C\\uDD1E-\\uDD39\\uDD3B-\\uDD3E\\uDD40-\\uDD44\\uDD46\\uDD4A-\\uDD50\\uDD52-\\uDEA5\\uDEA8-\\uDEC0\\uDEC2-\\uDEDA\\uDEDC-\\uDEFA\\uDEFC-\\uDF14\\uDF16-\\uDF34\\uDF36-\\uDF4E\\uDF50-\\uDF6E\\uDF70-\\uDF88\\uDF8A-\\uDFA8\\uDFAA-\\uDFC2\\uDFC4-\\uDFCB\\uDFCE-\\uDFFF]|\\uD838[\\uDD00-\\uDD2C\\uDD37-\\uDD3D\\uDD40-\\uDD49\\uDD4E\\uDEC0-\\uDEEB\\uDEF0-\\uDEF9]|\\uD83A[\\uDC00-\\uDCC4\\uDCC7-\\uDCCF\\uDD00-\\uDD43\\uDD4B\\uDD50-\\uDD59]|\\uD83B[\\uDC71-\\uDCAB\\uDCAD-\\uDCAF\\uDCB1-\\uDCB4\\uDD01-\\uDD2D\\uDD2F-\\uDD3D\\uDE00-\\uDE03\\uDE05-\\uDE1F\\uDE21\\uDE22\\uDE24\\uDE27\\uDE29-\\uDE32\\uDE34-\\uDE37\\uDE39\\uDE3B\\uDE42\\uDE47\\uDE49\\uDE4B\\uDE4D-\\uDE4F\\uDE51\\uDE52\\uDE54\\uDE57\\uDE59\\uDE5B\\uDE5D\\uDE5F\\uDE61\\uDE62\\uDE64\\uDE67-\\uDE6A\\uDE6C-\\uDE72\\uDE74-\\uDE77\\uDE79-\\uDE7C\\uDE7E\\uDE80-\\uDE89\\uDE8B-\\uDE9B\\uDEA1-\\uDEA3\\uDEA5-\\uDEA9\\uDEAB-\\uDEBB]|\\uD83C[\\uDD00-\\uDD0C]|\\uD83E[\\uDFF0-\\uDFF9]|\\uD869[\\uDC00-\\uDEDD\\uDF00-\\uDFFF]|\\uD86D[\\uDC00-\\uDF34\\uDF40-\\uDFFF]|\\uD86E[\\uDC00-\\uDC1D\\uDC20-\\uDFFF]|\\uD873[\\uDC00-\\uDEA1\\uDEB0-\\uDFFF]|\\uD87A[\\uDC00-\\uDFE0]|\\uD87E[\\uDC00-\\uDE1D]|\\uD884[\\uDC00-\\uDF4A])/)) return;\n      var nextChar = match[1] || match[2] || '';\n\n      if (!nextChar || nextChar && (prevChar === '' || this.rules.inline.punctuation.exec(prevChar))) {\n        var lLength = match[0].length - 1;\n        var rDelim,\n            rLength,\n            delimTotal = lLength,\n            midDelimTotal = 0;\n        var endReg = match[0][0] === '*' ? this.rules.inline.emStrong.rDelimAst : this.rules.inline.emStrong.rDelimUnd;\n        endReg.lastIndex = 0; // Clip maskedSrc to same section of string as src (move to lexer?)\n\n        maskedSrc = maskedSrc.slice(-1 * src.length + lLength);\n\n        while ((match = endReg.exec(maskedSrc)) != null) {\n          rDelim = match[1] || match[2] || match[3] || match[4] || match[5] || match[6];\n          if (!rDelim) continue; // skip single * in __abc*abc__\n\n          rLength = rDelim.length;\n\n          if (match[3] || match[4]) {\n            // found another Left Delim\n            delimTotal += rLength;\n            continue;\n          } else if (match[5] || match[6]) {\n            // either Left or Right Delim\n            if (lLength % 3 && !((lLength + rLength) % 3)) {\n              midDelimTotal += rLength;\n              continue; // CommonMark Emphasis Rules 9-10\n            }\n          }\n\n          delimTotal -= rLength;\n          if (delimTotal > 0) continue; // Haven't found enough closing delimiters\n          // Remove extra characters. *a*** -> *a*\n\n          rLength = Math.min(rLength, rLength + delimTotal + midDelimTotal); // Create `em` if smallest delimiter has odd char count. *a***\n\n          if (Math.min(lLength, rLength) % 2) {\n            var _text = src.slice(1, lLength + match.index + rLength);\n\n            return {\n              type: 'em',\n              raw: src.slice(0, lLength + match.index + rLength + 1),\n              text: _text,\n              tokens: this.lexer.inlineTokens(_text, [])\n            };\n          } // Create 'strong' if smallest delimiter has even char count. **a***\n\n\n          var text = src.slice(2, lLength + match.index + rLength - 1);\n          return {\n            type: 'strong',\n            raw: src.slice(0, lLength + match.index + rLength + 1),\n            text: text,\n            tokens: this.lexer.inlineTokens(text, [])\n          };\n        }\n      }\n    };\n\n    _proto.codespan = function codespan(src) {\n      var cap = this.rules.inline.code.exec(src);\n\n      if (cap) {\n        var text = cap[2].replace(/\\n/g, ' ');\n        var hasNonSpaceChars = /[^ ]/.test(text);\n        var hasSpaceCharsOnBothEnds = /^ /.test(text) && / $/.test(text);\n\n        if (hasNonSpaceChars && hasSpaceCharsOnBothEnds) {\n          text = text.substring(1, text.length - 1);\n        }\n\n        text = _escape(text, true);\n        return {\n          type: 'codespan',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    _proto.br = function br(src) {\n      var cap = this.rules.inline.br.exec(src);\n\n      if (cap) {\n        return {\n          type: 'br',\n          raw: cap[0]\n        };\n      }\n    };\n\n    _proto.del = function del(src) {\n      var cap = this.rules.inline.del.exec(src);\n\n      if (cap) {\n        return {\n          type: 'del',\n          raw: cap[0],\n          text: cap[2],\n          tokens: this.lexer.inlineTokens(cap[2], [])\n        };\n      }\n    };\n\n    _proto.autolink = function autolink(src, mangle) {\n      var cap = this.rules.inline.autolink.exec(src);\n\n      if (cap) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[1]) : cap[1]);\n          href = 'mailto:' + text;\n        } else {\n          text = _escape(cap[1]);\n          href = text;\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.url = function url(src, mangle) {\n      var cap;\n\n      if (cap = this.rules.inline.url.exec(src)) {\n        var text, href;\n\n        if (cap[2] === '@') {\n          text = _escape(this.options.mangle ? mangle(cap[0]) : cap[0]);\n          href = 'mailto:' + text;\n        } else {\n          // do extended autolink path validation\n          var prevCapZero;\n\n          do {\n            prevCapZero = cap[0];\n            cap[0] = this.rules.inline._backpedal.exec(cap[0])[0];\n          } while (prevCapZero !== cap[0]);\n\n          text = _escape(cap[0]);\n\n          if (cap[1] === 'www.') {\n            href = 'http://' + text;\n          } else {\n            href = text;\n          }\n        }\n\n        return {\n          type: 'link',\n          raw: cap[0],\n          text: text,\n          href: href,\n          tokens: [{\n            type: 'text',\n            raw: text,\n            text: text\n          }]\n        };\n      }\n    };\n\n    _proto.inlineText = function inlineText(src, smartypants) {\n      var cap = this.rules.inline.text.exec(src);\n\n      if (cap) {\n        var text;\n\n        if (this.lexer.state.inRawBlock) {\n          text = this.options.sanitize ? this.options.sanitizer ? this.options.sanitizer(cap[0]) : _escape(cap[0]) : cap[0];\n        } else {\n          text = _escape(this.options.smartypants ? smartypants(cap[0]) : cap[0]);\n        }\n\n        return {\n          type: 'text',\n          raw: cap[0],\n          text: text\n        };\n      }\n    };\n\n    return Tokenizer;\n  }();\n\n  var noopTest = helpers.noopTest,\n      edit = helpers.edit,\n      merge$1 = helpers.merge;\n  /**\n   * Block-Level Grammar\n   */\n\n  var block$1 = {\n    newline: /^(?: *(?:\\n|$))+/,\n    code: /^( {4}[^\\n]+(?:\\n(?: *(?:\\n|$))*)?)+/,\n    fences: /^ {0,3}(`{3,}(?=[^`\\n]*\\n)|~{3,})([^\\n]*)\\n(?:|([\\s\\S]*?)\\n)(?: {0,3}\\1[~`]* *(?=\\n|$)|$)/,\n    hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n    heading: /^ {0,3}(#{1,6})(?=\\s|$)(.*)(?:\\n+|$)/,\n    blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n    list: /^( {0,3}bull)( [^\\n]+?)?(?:\\n|$)/,\n    html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style|textarea)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?(?:\\\\?>\\\\n*|$)' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?(?:>\\\\n*|$)' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?(?:\\\\]\\\\]>\\\\n*|$)' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (6)\n    + '|<(?!script|pre|style|textarea)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) open tag\n    + '|</(?!script|pre|style|textarea)[a-z][\\\\w-]*\\\\s*>(?=[ \\\\t]*(?:\\\\n|$))[\\\\s\\\\S]*?(?:(?:\\\\n *)+\\\\n|$)' // (7) closing tag\n    + ')',\n    def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n    table: noopTest,\n    lheading: /^([^\\n]+)\\n {0,3}(=+|-+) *(?:\\n+|$)/,\n    // regex template, placeholders will be replaced according to different paragraph\n    // interruption rules of commonmark and the original markdown spec:\n    _paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading|blockquote|fences|list|html| +\\n)[^\\n]+)*)/,\n    text: /^[^\\n]+/\n  };\n  block$1._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\n  block$1._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\n  block$1.def = edit(block$1.def).replace('label', block$1._label).replace('title', block$1._title).getRegex();\n  block$1.bullet = /(?:[*+-]|\\d{1,9}[.)])/;\n  block$1.listItemStart = edit(/^( *)(bull) */).replace('bull', block$1.bullet).getRegex();\n  block$1.list = edit(block$1.list).replace(/bull/g, block$1.bullet).replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))').replace('def', '\\\\n+(?=' + block$1.def.source + ')').getRegex();\n  block$1._tag = 'address|article|aside|base|basefont|blockquote|body|caption' + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption' + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe' + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option' + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr' + '|track|ul';\n  block$1._comment = /<!--(?!-?>)[\\s\\S]*?(?:-->|$)/;\n  block$1.html = edit(block$1.html, 'i').replace('comment', block$1._comment).replace('tag', block$1._tag).replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/).getRegex();\n  block$1.paragraph = edit(block$1._paragraph).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('|lheading', '') // setex headings don't interrupt commonmark paragraphs\n  .replace('blockquote', ' {0,3}>').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n  block$1.blockquote = edit(block$1.blockquote).replace('paragraph', block$1.paragraph).getRegex();\n  /**\n   * Normal Block Grammar\n   */\n\n  block$1.normal = merge$1({}, block$1);\n  /**\n   * GFM Block Grammar\n   */\n\n  block$1.gfm = merge$1({}, block$1.normal, {\n    table: '^ *([^\\\\n ].*\\\\|.*)\\\\n' // Header\n    + ' {0,3}(?:\\\\| *)?(:?-+:? *(?:\\\\| *:?-+:? *)*)(?:\\\\| *)?' // Align\n    + '(?:\\\\n((?:(?! *\\\\n|hr|heading|blockquote|code|fences|list|html).*(?:\\\\n|$))*)\\\\n*|$)' // Cells\n\n  });\n  block$1.gfm.table = edit(block$1.gfm.table).replace('hr', block$1.hr).replace('heading', ' {0,3}#{1,6} ').replace('blockquote', ' {0,3}>').replace('code', ' {4}[^\\\\n]').replace('fences', ' {0,3}(?:`{3,}(?=[^`\\\\n]*\\\\n)|~{3,})[^\\\\n]*\\\\n').replace('list', ' {0,3}(?:[*+-]|1[.)]) ') // only lists starting from 1 can interrupt\n  .replace('html', '</?(?:tag)(?: +|\\\\n|/?>)|<(?:script|pre|style|textarea|!--)').replace('tag', block$1._tag) // tables can be interrupted by type (6) html blocks\n  .getRegex();\n  /**\n   * Pedantic grammar (original John Gruber's loose markdown specification)\n   */\n\n  block$1.pedantic = merge$1({}, block$1.normal, {\n    html: edit('^ *(?:comment *(?:\\\\n|\\\\s*$)' + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))').replace('comment', block$1._comment).replace(/tag/g, '(?!(?:' + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub' + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)' + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b').getRegex(),\n    def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/,\n    heading: /^(#{1,6})(.*)(?:\\n+|$)/,\n    fences: noopTest,\n    // fences not supported\n    paragraph: edit(block$1.normal._paragraph).replace('hr', block$1.hr).replace('heading', ' *#{1,6} *[^\\n]').replace('lheading', block$1.lheading).replace('blockquote', ' {0,3}>').replace('|fences', '').replace('|list', '').replace('|html', '').getRegex()\n  });\n  /**\n   * Inline-Level Grammar\n   */\n\n  var inline$1 = {\n    escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n    autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n    url: noopTest,\n    tag: '^comment' + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>',\n    // CDATA section\n    link: /^!?\\[(label)\\]\\(\\s*(href)(?:\\s+(title))?\\s*\\)/,\n    reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n    nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n    reflinkSearch: 'reflink|nolink(?!\\\\()',\n    emStrong: {\n      lDelim: /^(?:\\*+(?:([punct_])|[^\\s*]))|^_+(?:([punct*])|([^\\s_]))/,\n      //        (1) and (2) can only be a Right Delimiter. (3) and (4) can only be Left.  (5) and (6) can be either Left or Right.\n      //        () Skip orphan delim inside strong    (1) #***                (2) a***#, a***                   (3) #***a, ***a                 (4) ***#              (5) #***#                 (6) a***a\n      rDelimAst: /^[^_*]*?\\_\\_[^_*]*?\\*[^_*]*?(?=\\_\\_)|[punct_](\\*+)(?=[\\s]|$)|[^punct*_\\s](\\*+)(?=[punct_\\s]|$)|[punct_\\s](\\*+)(?=[^punct*_\\s])|[\\s](\\*+)(?=[punct_])|[punct_](\\*+)(?=[punct_])|[^punct*_\\s](\\*+)(?=[^punct*_\\s])/,\n      rDelimUnd: /^[^_*]*?\\*\\*[^_*]*?\\_[^_*]*?(?=\\*\\*)|[punct*](\\_+)(?=[\\s]|$)|[^punct*_\\s](\\_+)(?=[punct*\\s]|$)|[punct*\\s](\\_+)(?=[^punct*_\\s])|[\\s](\\_+)(?=[punct*])|[punct*](\\_+)(?=[punct*])/ // ^- Not allowed for _\n\n    },\n    code: /^(`+)([^`]|[^`][\\s\\S]*?[^`])\\1(?!`)/,\n    br: /^( {2,}|\\\\)\\n(?!\\s*$)/,\n    del: noopTest,\n    text: /^(`+|[^`])(?:(?= {2,}\\n)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*_]|\\b_|$)|[^ ](?= {2,}\\n)))/,\n    punctuation: /^([\\spunctuation])/\n  }; // list of punctuation marks from CommonMark spec\n  // without * and _ to handle the different emphasis markers * and _\n\n  inline$1._punctuation = '!\"#$%&\\'()+\\\\-.,/:;<=>?@\\\\[\\\\]`^{|}~';\n  inline$1.punctuation = edit(inline$1.punctuation).replace(/punctuation/g, inline$1._punctuation).getRegex(); // sequences em should skip over [title](link), `code`, <html>\n\n  inline$1.blockSkip = /\\[[^\\]]*?\\]\\([^\\)]*?\\)|`[^`]*?`|<[^>]*?>/g;\n  inline$1.escapedEmSt = /\\\\\\*|\\\\_/g;\n  inline$1._comment = edit(block$1._comment).replace('(?:-->|$)', '-->').getRegex();\n  inline$1.emStrong.lDelim = edit(inline$1.emStrong.lDelim).replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimAst = edit(inline$1.emStrong.rDelimAst, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1.emStrong.rDelimUnd = edit(inline$1.emStrong.rDelimUnd, 'g').replace(/punct/g, inline$1._punctuation).getRegex();\n  inline$1._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n  inline$1._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\n  inline$1._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\n  inline$1.autolink = edit(inline$1.autolink).replace('scheme', inline$1._scheme).replace('email', inline$1._email).getRegex();\n  inline$1._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n  inline$1.tag = edit(inline$1.tag).replace('comment', inline$1._comment).replace('attribute', inline$1._attribute).getRegex();\n  inline$1._label = /(?:\\[(?:\\\\.|[^\\[\\]\\\\])*\\]|\\\\.|`[^`]*`|[^\\[\\]\\\\`])*?/;\n  inline$1._href = /<(?:\\\\.|[^\\n<>\\\\])+>|[^\\s\\x00-\\x1f]*/;\n  inline$1._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n  inline$1.link = edit(inline$1.link).replace('label', inline$1._label).replace('href', inline$1._href).replace('title', inline$1._title).getRegex();\n  inline$1.reflink = edit(inline$1.reflink).replace('label', inline$1._label).getRegex();\n  inline$1.reflinkSearch = edit(inline$1.reflinkSearch, 'g').replace('reflink', inline$1.reflink).replace('nolink', inline$1.nolink).getRegex();\n  /**\n   * Normal Inline Grammar\n   */\n\n  inline$1.normal = merge$1({}, inline$1);\n  /**\n   * Pedantic Inline Grammar\n   */\n\n  inline$1.pedantic = merge$1({}, inline$1.normal, {\n    strong: {\n      start: /^__|\\*\\*/,\n      middle: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n      endAst: /\\*\\*(?!\\*)/g,\n      endUnd: /__(?!_)/g\n    },\n    em: {\n      start: /^_|\\*/,\n      middle: /^()\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)|^_(?=\\S)([\\s\\S]*?\\S)_(?!_)/,\n      endAst: /\\*(?!\\*)/g,\n      endUnd: /_(?!_)/g\n    },\n    link: edit(/^!?\\[(label)\\]\\((.*?)\\)/).replace('label', inline$1._label).getRegex(),\n    reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/).replace('label', inline$1._label).getRegex()\n  });\n  /**\n   * GFM Inline Grammar\n   */\n\n  inline$1.gfm = merge$1({}, inline$1.normal, {\n    escape: edit(inline$1.escape).replace('])', '~|])').getRegex(),\n    _extended_email: /[A-Za-z0-9._+-]+(@)[a-zA-Z0-9-_]+(?:\\.[a-zA-Z0-9-_]*[a-zA-Z0-9])+(?![-_])/,\n    url: /^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/,\n    _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n    del: /^(~~?)(?=[^\\s~])([\\s\\S]*?[^\\s~])\\1(?=[^~]|$)/,\n    text: /^([`~]+|[^`~])(?:(?= {2,}\\n)|(?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)|[\\s\\S]*?(?:(?=[\\\\<!\\[`*~_]|\\b_|https?:\\/\\/|ftp:\\/\\/|www\\.|$)|[^ ](?= {2,}\\n)|[^a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-](?=[a-zA-Z0-9.!#$%&'*+\\/=?_`{\\|}~-]+@)))/\n  });\n  inline$1.gfm.url = edit(inline$1.gfm.url, 'i').replace('email', inline$1.gfm._extended_email).getRegex();\n  /**\n   * GFM + Line Breaks Inline Grammar\n   */\n\n  inline$1.breaks = merge$1({}, inline$1.gfm, {\n    br: edit(inline$1.br).replace('{2,}', '*').getRegex(),\n    text: edit(inline$1.gfm.text).replace('\\\\b_', '\\\\b_| {2,}\\\\n').replace(/\\{2,\\}/g, '*').getRegex()\n  });\n  var rules = {\n    block: block$1,\n    inline: inline$1\n  };\n\n  var Tokenizer$1 = Tokenizer_1;\n  var defaults$3 = defaults$5.exports.defaults;\n  var block = rules.block,\n      inline = rules.inline;\n  var repeatString = helpers.repeatString;\n  /**\n   * smartypants text replacement\n   */\n\n  function smartypants(text) {\n    return text // em-dashes\n    .replace(/---/g, \"\\u2014\") // en-dashes\n    .replace(/--/g, \"\\u2013\") // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, \"$1\\u2018\") // closing singles & apostrophes\n    .replace(/'/g, \"\\u2019\") // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, \"$1\\u201C\") // closing doubles\n    .replace(/\"/g, \"\\u201D\") // ellipses\n    .replace(/\\.{3}/g, \"\\u2026\");\n  }\n  /**\n   * mangle email addresses\n   */\n\n\n  function mangle(text) {\n    var out = '',\n        i,\n        ch;\n    var l = text.length;\n\n    for (i = 0; i < l; i++) {\n      ch = text.charCodeAt(i);\n\n      if (Math.random() > 0.5) {\n        ch = 'x' + ch.toString(16);\n      }\n\n      out += '&#' + ch + ';';\n    }\n\n    return out;\n  }\n  /**\n   * Block Lexer\n   */\n\n\n  var Lexer_1 = /*#__PURE__*/function () {\n    function Lexer(options) {\n      this.tokens = [];\n      this.tokens.links = Object.create(null);\n      this.options = options || defaults$3;\n      this.options.tokenizer = this.options.tokenizer || new Tokenizer$1();\n      this.tokenizer = this.options.tokenizer;\n      this.tokenizer.options = this.options;\n      this.tokenizer.lexer = this;\n      this.inlineQueue = [];\n      this.state = {\n        inLink: false,\n        inRawBlock: false,\n        top: true\n      };\n      var rules = {\n        block: block.normal,\n        inline: inline.normal\n      };\n\n      if (this.options.pedantic) {\n        rules.block = block.pedantic;\n        rules.inline = inline.pedantic;\n      } else if (this.options.gfm) {\n        rules.block = block.gfm;\n\n        if (this.options.breaks) {\n          rules.inline = inline.breaks;\n        } else {\n          rules.inline = inline.gfm;\n        }\n      }\n\n      this.tokenizer.rules = rules;\n    }\n    /**\n     * Expose Rules\n     */\n\n\n    /**\n     * Static Lex Method\n     */\n    Lexer.lex = function lex(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.lex(src);\n    }\n    /**\n     * Static Lex Inline Method\n     */\n    ;\n\n    Lexer.lexInline = function lexInline(src, options) {\n      var lexer = new Lexer(options);\n      return lexer.inlineTokens(src);\n    }\n    /**\n     * Preprocessing\n     */\n    ;\n\n    var _proto = Lexer.prototype;\n\n    _proto.lex = function lex(src) {\n      src = src.replace(/\\r\\n|\\r/g, '\\n').replace(/\\t/g, '    ');\n      this.blockTokens(src, this.tokens);\n      var next;\n\n      while (next = this.inlineQueue.shift()) {\n        this.inlineTokens(next.src, next.tokens);\n      }\n\n      return this.tokens;\n    }\n    /**\n     * Lexing\n     */\n    ;\n\n    _proto.blockTokens = function blockTokens(src, tokens) {\n      var _this = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      if (this.options.pedantic) {\n        src = src.replace(/^ +$/gm, '');\n      }\n\n      var token, lastToken, cutSrc, lastParagraphClipped;\n\n      while (src) {\n        if (this.options.extensions && this.options.extensions.block && this.options.extensions.block.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // newline\n\n\n        if (token = this.tokenizer.space(src)) {\n          src = src.substring(token.raw.length);\n\n          if (token.type) {\n            tokens.push(token);\n          }\n\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.code(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1]; // An indented code block cannot interrupt a paragraph.\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // fences\n\n\n        if (token = this.tokenizer.fences(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // heading\n\n\n        if (token = this.tokenizer.heading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // hr\n\n\n        if (token = this.tokenizer.hr(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // blockquote\n\n\n        if (token = this.tokenizer.blockquote(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // list\n\n\n        if (token = this.tokenizer.list(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // html\n\n\n        if (token = this.tokenizer.html(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // def\n\n\n        if (token = this.tokenizer.def(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && (lastToken.type === 'paragraph' || lastToken.type === 'text')) {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.raw;\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else if (!this.tokens.links[token.tag]) {\n            this.tokens.links[token.tag] = {\n              href: token.href,\n              title: token.title\n            };\n          }\n\n          continue;\n        } // table (gfm)\n\n\n        if (token = this.tokenizer.table(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // lheading\n\n\n        if (token = this.tokenizer.lheading(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // top-level paragraph\n        // prevent paragraph consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startBlock) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this.options.extensions.startBlock.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (this.state.top && (token = this.tokenizer.paragraph(cutSrc))) {\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastParagraphClipped && lastToken.type === 'paragraph') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          lastParagraphClipped = cutSrc.length !== src.length;\n          src = src.substring(token.raw.length);\n          continue;\n        } // text\n\n\n        if (token = this.tokenizer.text(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += '\\n' + token.raw;\n            lastToken.text += '\\n' + token.text;\n            this.inlineQueue.pop();\n            this.inlineQueue[this.inlineQueue.length - 1].src = lastToken.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      this.state.top = true;\n      return tokens;\n    };\n\n    _proto.inline = function inline(src, tokens) {\n      this.inlineQueue.push({\n        src: src,\n        tokens: tokens\n      });\n    }\n    /**\n     * Lexing/Compiling\n     */\n    ;\n\n    _proto.inlineTokens = function inlineTokens(src, tokens) {\n      var _this2 = this;\n\n      if (tokens === void 0) {\n        tokens = [];\n      }\n\n      var token, lastToken, cutSrc; // String with links masked to avoid interference with em and strong\n\n      var maskedSrc = src;\n      var match;\n      var keepPrevChar, prevChar; // Mask out reflinks\n\n      if (this.tokens.links) {\n        var links = Object.keys(this.tokens.links);\n\n        if (links.length > 0) {\n          while ((match = this.tokenizer.rules.inline.reflinkSearch.exec(maskedSrc)) != null) {\n            if (links.includes(match[0].slice(match[0].lastIndexOf('[') + 1, -1))) {\n              maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.reflinkSearch.lastIndex);\n            }\n          }\n        }\n      } // Mask out other blocks\n\n\n      while ((match = this.tokenizer.rules.inline.blockSkip.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '[' + repeatString('a', match[0].length - 2) + ']' + maskedSrc.slice(this.tokenizer.rules.inline.blockSkip.lastIndex);\n      } // Mask out escaped em & strong delimiters\n\n\n      while ((match = this.tokenizer.rules.inline.escapedEmSt.exec(maskedSrc)) != null) {\n        maskedSrc = maskedSrc.slice(0, match.index) + '++' + maskedSrc.slice(this.tokenizer.rules.inline.escapedEmSt.lastIndex);\n      }\n\n      while (src) {\n        if (!keepPrevChar) {\n          prevChar = '';\n        }\n\n        keepPrevChar = false; // extensions\n\n        if (this.options.extensions && this.options.extensions.inline && this.options.extensions.inline.some(function (extTokenizer) {\n          if (token = extTokenizer.call({\n            lexer: _this2\n          }, src, tokens)) {\n            src = src.substring(token.raw.length);\n            tokens.push(token);\n            return true;\n          }\n\n          return false;\n        })) {\n          continue;\n        } // escape\n\n\n        if (token = this.tokenizer.escape(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // tag\n\n\n        if (token = this.tokenizer.tag(src)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // link\n\n\n        if (token = this.tokenizer.link(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // reflink, nolink\n\n\n        if (token = this.tokenizer.reflink(src, this.tokens.links)) {\n          src = src.substring(token.raw.length);\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && token.type === 'text' && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        } // em & strong\n\n\n        if (token = this.tokenizer.emStrong(src, maskedSrc, prevChar)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // code\n\n\n        if (token = this.tokenizer.codespan(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // br\n\n\n        if (token = this.tokenizer.br(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // del (gfm)\n\n\n        if (token = this.tokenizer.del(src)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // autolink\n\n\n        if (token = this.tokenizer.autolink(src, mangle)) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // url (gfm)\n\n\n        if (!this.state.inLink && (token = this.tokenizer.url(src, mangle))) {\n          src = src.substring(token.raw.length);\n          tokens.push(token);\n          continue;\n        } // text\n        // prevent inlineText consuming extensions by clipping 'src' to extension start\n\n\n        cutSrc = src;\n\n        if (this.options.extensions && this.options.extensions.startInline) {\n          (function () {\n            var startIndex = Infinity;\n            var tempSrc = src.slice(1);\n            var tempStart = void 0;\n\n            _this2.options.extensions.startInline.forEach(function (getStartIndex) {\n              tempStart = getStartIndex.call({\n                lexer: this\n              }, tempSrc);\n\n              if (typeof tempStart === 'number' && tempStart >= 0) {\n                startIndex = Math.min(startIndex, tempStart);\n              }\n            });\n\n            if (startIndex < Infinity && startIndex >= 0) {\n              cutSrc = src.substring(0, startIndex + 1);\n            }\n          })();\n        }\n\n        if (token = this.tokenizer.inlineText(cutSrc, smartypants)) {\n          src = src.substring(token.raw.length);\n\n          if (token.raw.slice(-1) !== '_') {\n            // Track prevChar before string of ____ started\n            prevChar = token.raw.slice(-1);\n          }\n\n          keepPrevChar = true;\n          lastToken = tokens[tokens.length - 1];\n\n          if (lastToken && lastToken.type === 'text') {\n            lastToken.raw += token.raw;\n            lastToken.text += token.text;\n          } else {\n            tokens.push(token);\n          }\n\n          continue;\n        }\n\n        if (src) {\n          var errMsg = 'Infinite loop on byte: ' + src.charCodeAt(0);\n\n          if (this.options.silent) {\n            console.error(errMsg);\n            break;\n          } else {\n            throw new Error(errMsg);\n          }\n        }\n      }\n\n      return tokens;\n    };\n\n    _createClass(Lexer, null, [{\n      key: \"rules\",\n      get: function get() {\n        return {\n          block: block,\n          inline: inline\n        };\n      }\n    }]);\n\n    return Lexer;\n  }();\n\n  var defaults$2 = defaults$5.exports.defaults;\n  var cleanUrl = helpers.cleanUrl,\n      escape$1 = helpers.escape;\n  /**\n   * Renderer\n   */\n\n  var Renderer_1 = /*#__PURE__*/function () {\n    function Renderer(options) {\n      this.options = options || defaults$2;\n    }\n\n    var _proto = Renderer.prototype;\n\n    _proto.code = function code(_code, infostring, escaped) {\n      var lang = (infostring || '').match(/\\S*/)[0];\n\n      if (this.options.highlight) {\n        var out = this.options.highlight(_code, lang);\n\n        if (out != null && out !== _code) {\n          escaped = true;\n          _code = out;\n        }\n      }\n\n      _code = _code.replace(/\\n$/, '') + '\\n';\n\n      if (!lang) {\n        return '<pre><code>' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n      }\n\n      return '<pre><code class=\"' + this.options.langPrefix + escape$1(lang, true) + '\">' + (escaped ? _code : escape$1(_code, true)) + '</code></pre>\\n';\n    };\n\n    _proto.blockquote = function blockquote(quote) {\n      return '<blockquote>\\n' + quote + '</blockquote>\\n';\n    };\n\n    _proto.html = function html(_html) {\n      return _html;\n    };\n\n    _proto.heading = function heading(text, level, raw, slugger) {\n      if (this.options.headerIds) {\n        return '<h' + level + ' id=\"' + this.options.headerPrefix + slugger.slug(raw) + '\">' + text + '</h' + level + '>\\n';\n      } // ignore IDs\n\n\n      return '<h' + level + '>' + text + '</h' + level + '>\\n';\n    };\n\n    _proto.hr = function hr() {\n      return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n    };\n\n    _proto.list = function list(body, ordered, start) {\n      var type = ordered ? 'ol' : 'ul',\n          startatt = ordered && start !== 1 ? ' start=\"' + start + '\"' : '';\n      return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n    };\n\n    _proto.listitem = function listitem(text) {\n      return '<li>' + text + '</li>\\n';\n    };\n\n    _proto.checkbox = function checkbox(checked) {\n      return '<input ' + (checked ? 'checked=\"\" ' : '') + 'disabled=\"\" type=\"checkbox\"' + (this.options.xhtml ? ' /' : '') + '> ';\n    };\n\n    _proto.paragraph = function paragraph(text) {\n      return '<p>' + text + '</p>\\n';\n    };\n\n    _proto.table = function table(header, body) {\n      if (body) body = '<tbody>' + body + '</tbody>';\n      return '<table>\\n' + '<thead>\\n' + header + '</thead>\\n' + body + '</table>\\n';\n    };\n\n    _proto.tablerow = function tablerow(content) {\n      return '<tr>\\n' + content + '</tr>\\n';\n    };\n\n    _proto.tablecell = function tablecell(content, flags) {\n      var type = flags.header ? 'th' : 'td';\n      var tag = flags.align ? '<' + type + ' align=\"' + flags.align + '\">' : '<' + type + '>';\n      return tag + content + '</' + type + '>\\n';\n    } // span level renderer\n    ;\n\n    _proto.strong = function strong(text) {\n      return '<strong>' + text + '</strong>';\n    };\n\n    _proto.em = function em(text) {\n      return '<em>' + text + '</em>';\n    };\n\n    _proto.codespan = function codespan(text) {\n      return '<code>' + text + '</code>';\n    };\n\n    _proto.br = function br() {\n      return this.options.xhtml ? '<br/>' : '<br>';\n    };\n\n    _proto.del = function del(text) {\n      return '<del>' + text + '</del>';\n    };\n\n    _proto.link = function link(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<a href=\"' + escape$1(href) + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += '>' + text + '</a>';\n      return out;\n    };\n\n    _proto.image = function image(href, title, text) {\n      href = cleanUrl(this.options.sanitize, this.options.baseUrl, href);\n\n      if (href === null) {\n        return text;\n      }\n\n      var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n\n      if (title) {\n        out += ' title=\"' + title + '\"';\n      }\n\n      out += this.options.xhtml ? '/>' : '>';\n      return out;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    return Renderer;\n  }();\n\n  /**\n   * TextRenderer\n   * returns only the textual part of the token\n   */\n\n  var TextRenderer_1 = /*#__PURE__*/function () {\n    function TextRenderer() {}\n\n    var _proto = TextRenderer.prototype;\n\n    // no need for block level renderers\n    _proto.strong = function strong(text) {\n      return text;\n    };\n\n    _proto.em = function em(text) {\n      return text;\n    };\n\n    _proto.codespan = function codespan(text) {\n      return text;\n    };\n\n    _proto.del = function del(text) {\n      return text;\n    };\n\n    _proto.html = function html(text) {\n      return text;\n    };\n\n    _proto.text = function text(_text) {\n      return _text;\n    };\n\n    _proto.link = function link(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.image = function image(href, title, text) {\n      return '' + text;\n    };\n\n    _proto.br = function br() {\n      return '';\n    };\n\n    return TextRenderer;\n  }();\n\n  /**\n   * Slugger generates header id\n   */\n\n  var Slugger_1 = /*#__PURE__*/function () {\n    function Slugger() {\n      this.seen = {};\n    }\n\n    var _proto = Slugger.prototype;\n\n    _proto.serialize = function serialize(value) {\n      return value.toLowerCase().trim() // remove html tags\n      .replace(/<[!\\/a-z].*?>/ig, '') // remove unwanted chars\n      .replace(/[\\u2000-\\u206F\\u2E00-\\u2E7F\\\\'!\"#$%&()*+,./:;<=>?@[\\]^`{|}~]/g, '').replace(/\\s/g, '-');\n    }\n    /**\n     * Finds the next safe (unique) slug to use\n     */\n    ;\n\n    _proto.getNextSafeSlug = function getNextSafeSlug(originalSlug, isDryRun) {\n      var slug = originalSlug;\n      var occurenceAccumulator = 0;\n\n      if (this.seen.hasOwnProperty(slug)) {\n        occurenceAccumulator = this.seen[originalSlug];\n\n        do {\n          occurenceAccumulator++;\n          slug = originalSlug + '-' + occurenceAccumulator;\n        } while (this.seen.hasOwnProperty(slug));\n      }\n\n      if (!isDryRun) {\n        this.seen[originalSlug] = occurenceAccumulator;\n        this.seen[slug] = 0;\n      }\n\n      return slug;\n    }\n    /**\n     * Convert string to unique id\n     * @param {object} options\n     * @param {boolean} options.dryrun Generates the next unique slug without updating the internal accumulator.\n     */\n    ;\n\n    _proto.slug = function slug(value, options) {\n      if (options === void 0) {\n        options = {};\n      }\n\n      var slug = this.serialize(value);\n      return this.getNextSafeSlug(slug, options.dryrun);\n    };\n\n    return Slugger;\n  }();\n\n  var Renderer$1 = Renderer_1;\n  var TextRenderer$1 = TextRenderer_1;\n  var Slugger$1 = Slugger_1;\n  var defaults$1 = defaults$5.exports.defaults;\n  var unescape = helpers.unescape;\n  /**\n   * Parsing & Compiling\n   */\n\n  var Parser_1 = /*#__PURE__*/function () {\n    function Parser(options) {\n      this.options = options || defaults$1;\n      this.options.renderer = this.options.renderer || new Renderer$1();\n      this.renderer = this.options.renderer;\n      this.renderer.options = this.options;\n      this.textRenderer = new TextRenderer$1();\n      this.slugger = new Slugger$1();\n    }\n    /**\n     * Static Parse Method\n     */\n\n\n    Parser.parse = function parse(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parse(tokens);\n    }\n    /**\n     * Static Parse Inline Method\n     */\n    ;\n\n    Parser.parseInline = function parseInline(tokens, options) {\n      var parser = new Parser(options);\n      return parser.parseInline(tokens);\n    }\n    /**\n     * Parse Loop\n     */\n    ;\n\n    var _proto = Parser.prototype;\n\n    _proto.parse = function parse(tokens, top) {\n      if (top === void 0) {\n        top = true;\n      }\n\n      var out = '',\n          i,\n          j,\n          k,\n          l2,\n          l3,\n          row,\n          cell,\n          header,\n          body,\n          token,\n          ordered,\n          start,\n          loose,\n          itemBody,\n          item,\n          checked,\n          task,\n          checkbox,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['space', 'hr', 'heading', 'code', 'table', 'blockquote', 'list', 'html', 'paragraph', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'space':\n            {\n              continue;\n            }\n\n          case 'hr':\n            {\n              out += this.renderer.hr();\n              continue;\n            }\n\n          case 'heading':\n            {\n              out += this.renderer.heading(this.parseInline(token.tokens), token.depth, unescape(this.parseInline(token.tokens, this.textRenderer)), this.slugger);\n              continue;\n            }\n\n          case 'code':\n            {\n              out += this.renderer.code(token.text, token.lang, token.escaped);\n              continue;\n            }\n\n          case 'table':\n            {\n              header = ''; // header\n\n              cell = '';\n              l2 = token.header.length;\n\n              for (j = 0; j < l2; j++) {\n                cell += this.renderer.tablecell(this.parseInline(token.header[j].tokens), {\n                  header: true,\n                  align: token.align[j]\n                });\n              }\n\n              header += this.renderer.tablerow(cell);\n              body = '';\n              l2 = token.rows.length;\n\n              for (j = 0; j < l2; j++) {\n                row = token.rows[j];\n                cell = '';\n                l3 = row.length;\n\n                for (k = 0; k < l3; k++) {\n                  cell += this.renderer.tablecell(this.parseInline(row[k].tokens), {\n                    header: false,\n                    align: token.align[k]\n                  });\n                }\n\n                body += this.renderer.tablerow(cell);\n              }\n\n              out += this.renderer.table(header, body);\n              continue;\n            }\n\n          case 'blockquote':\n            {\n              body = this.parse(token.tokens);\n              out += this.renderer.blockquote(body);\n              continue;\n            }\n\n          case 'list':\n            {\n              ordered = token.ordered;\n              start = token.start;\n              loose = token.loose;\n              l2 = token.items.length;\n              body = '';\n\n              for (j = 0; j < l2; j++) {\n                item = token.items[j];\n                checked = item.checked;\n                task = item.task;\n                itemBody = '';\n\n                if (item.task) {\n                  checkbox = this.renderer.checkbox(checked);\n\n                  if (loose) {\n                    if (item.tokens.length > 0 && item.tokens[0].type === 'paragraph') {\n                      item.tokens[0].text = checkbox + ' ' + item.tokens[0].text;\n\n                      if (item.tokens[0].tokens && item.tokens[0].tokens.length > 0 && item.tokens[0].tokens[0].type === 'text') {\n                        item.tokens[0].tokens[0].text = checkbox + ' ' + item.tokens[0].tokens[0].text;\n                      }\n                    } else {\n                      item.tokens.unshift({\n                        type: 'text',\n                        text: checkbox\n                      });\n                    }\n                  } else {\n                    itemBody += checkbox;\n                  }\n                }\n\n                itemBody += this.parse(item.tokens, loose);\n                body += this.renderer.listitem(itemBody, task, checked);\n              }\n\n              out += this.renderer.list(body, ordered, start);\n              continue;\n            }\n\n          case 'html':\n            {\n              // TODO parse inline content if parameter markdown=1\n              out += this.renderer.html(token.text);\n              continue;\n            }\n\n          case 'paragraph':\n            {\n              out += this.renderer.paragraph(this.parseInline(token.tokens));\n              continue;\n            }\n\n          case 'text':\n            {\n              body = token.tokens ? this.parseInline(token.tokens) : token.text;\n\n              while (i + 1 < l && tokens[i + 1].type === 'text') {\n                token = tokens[++i];\n                body += '\\n' + (token.tokens ? this.parseInline(token.tokens) : token.text);\n              }\n\n              out += top ? this.renderer.paragraph(body) : body;\n              continue;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    }\n    /**\n     * Parse Inline Tokens\n     */\n    ;\n\n    _proto.parseInline = function parseInline(tokens, renderer) {\n      renderer = renderer || this.renderer;\n      var out = '',\n          i,\n          token,\n          ret;\n      var l = tokens.length;\n\n      for (i = 0; i < l; i++) {\n        token = tokens[i]; // Run any renderer extensions\n\n        if (this.options.extensions && this.options.extensions.renderers && this.options.extensions.renderers[token.type]) {\n          ret = this.options.extensions.renderers[token.type].call({\n            parser: this\n          }, token);\n\n          if (ret !== false || !['escape', 'html', 'link', 'image', 'strong', 'em', 'codespan', 'br', 'del', 'text'].includes(token.type)) {\n            out += ret || '';\n            continue;\n          }\n        }\n\n        switch (token.type) {\n          case 'escape':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          case 'html':\n            {\n              out += renderer.html(token.text);\n              break;\n            }\n\n          case 'link':\n            {\n              out += renderer.link(token.href, token.title, this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'image':\n            {\n              out += renderer.image(token.href, token.title, token.text);\n              break;\n            }\n\n          case 'strong':\n            {\n              out += renderer.strong(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'em':\n            {\n              out += renderer.em(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'codespan':\n            {\n              out += renderer.codespan(token.text);\n              break;\n            }\n\n          case 'br':\n            {\n              out += renderer.br();\n              break;\n            }\n\n          case 'del':\n            {\n              out += renderer.del(this.parseInline(token.tokens, renderer));\n              break;\n            }\n\n          case 'text':\n            {\n              out += renderer.text(token.text);\n              break;\n            }\n\n          default:\n            {\n              var errMsg = 'Token with \"' + token.type + '\" type was not found.';\n\n              if (this.options.silent) {\n                console.error(errMsg);\n                return;\n              } else {\n                throw new Error(errMsg);\n              }\n            }\n        }\n      }\n\n      return out;\n    };\n\n    return Parser;\n  }();\n\n  var Lexer = Lexer_1;\n  var Parser = Parser_1;\n  var Tokenizer = Tokenizer_1;\n  var Renderer = Renderer_1;\n  var TextRenderer = TextRenderer_1;\n  var Slugger = Slugger_1;\n  var merge = helpers.merge,\n      checkSanitizeDeprecation = helpers.checkSanitizeDeprecation,\n      escape = helpers.escape;\n  var getDefaults = defaults$5.exports.getDefaults,\n      changeDefaults = defaults$5.exports.changeDefaults,\n      defaults = defaults$5.exports.defaults;\n  /**\n   * Marked\n   */\n\n  function marked(src, opt, callback) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    if (typeof opt === 'function') {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    if (callback) {\n      var highlight = opt.highlight;\n      var tokens;\n\n      try {\n        tokens = Lexer.lex(src, opt);\n      } catch (e) {\n        return callback(e);\n      }\n\n      var done = function done(err) {\n        var out;\n\n        if (!err) {\n          try {\n            if (opt.walkTokens) {\n              marked.walkTokens(tokens, opt.walkTokens);\n            }\n\n            out = Parser.parse(tokens, opt);\n          } catch (e) {\n            err = e;\n          }\n        }\n\n        opt.highlight = highlight;\n        return err ? callback(err) : callback(null, out);\n      };\n\n      if (!highlight || highlight.length < 3) {\n        return done();\n      }\n\n      delete opt.highlight;\n      if (!tokens.length) return done();\n      var pending = 0;\n      marked.walkTokens(tokens, function (token) {\n        if (token.type === 'code') {\n          pending++;\n          setTimeout(function () {\n            highlight(token.text, token.lang, function (err, code) {\n              if (err) {\n                return done(err);\n              }\n\n              if (code != null && code !== token.text) {\n                token.text = code;\n                token.escaped = true;\n              }\n\n              pending--;\n\n              if (pending === 0) {\n                done();\n              }\n            });\n          }, 0);\n        }\n      });\n\n      if (pending === 0) {\n        done();\n      }\n\n      return;\n    }\n\n    try {\n      var _tokens = Lexer.lex(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(_tokens, opt.walkTokens);\n      }\n\n      return Parser.parse(_tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  }\n  /**\n   * Options\n   */\n\n\n  marked.options = marked.setOptions = function (opt) {\n    merge(marked.defaults, opt);\n    changeDefaults(marked.defaults);\n    return marked;\n  };\n\n  marked.getDefaults = getDefaults;\n  marked.defaults = defaults;\n  /**\n   * Use Extension\n   */\n\n  marked.use = function () {\n    var _this = this;\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    var opts = merge.apply(void 0, [{}].concat(args));\n    var extensions = marked.defaults.extensions || {\n      renderers: {},\n      childTokens: {}\n    };\n    var hasExtensions;\n    args.forEach(function (pack) {\n      // ==-- Parse \"addon\" extensions --== //\n      if (pack.extensions) {\n        hasExtensions = true;\n        pack.extensions.forEach(function (ext) {\n          if (!ext.name) {\n            throw new Error('extension name required');\n          }\n\n          if (ext.renderer) {\n            // Renderer extensions\n            var prevRenderer = extensions.renderers ? extensions.renderers[ext.name] : null;\n\n            if (prevRenderer) {\n              // Replace extension with func to run new extension but fall back if false\n              extensions.renderers[ext.name] = function () {\n                for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                  args[_key2] = arguments[_key2];\n                }\n\n                var ret = ext.renderer.apply(this, args);\n\n                if (ret === false) {\n                  ret = prevRenderer.apply(this, args);\n                }\n\n                return ret;\n              };\n            } else {\n              extensions.renderers[ext.name] = ext.renderer;\n            }\n          }\n\n          if (ext.tokenizer) {\n            // Tokenizer Extensions\n            if (!ext.level || ext.level !== 'block' && ext.level !== 'inline') {\n              throw new Error(\"extension level must be 'block' or 'inline'\");\n            }\n\n            if (extensions[ext.level]) {\n              extensions[ext.level].unshift(ext.tokenizer);\n            } else {\n              extensions[ext.level] = [ext.tokenizer];\n            }\n\n            if (ext.start) {\n              // Function to check for start of token\n              if (ext.level === 'block') {\n                if (extensions.startBlock) {\n                  extensions.startBlock.push(ext.start);\n                } else {\n                  extensions.startBlock = [ext.start];\n                }\n              } else if (ext.level === 'inline') {\n                if (extensions.startInline) {\n                  extensions.startInline.push(ext.start);\n                } else {\n                  extensions.startInline = [ext.start];\n                }\n              }\n            }\n          }\n\n          if (ext.childTokens) {\n            // Child tokens to be visited by walkTokens\n            extensions.childTokens[ext.name] = ext.childTokens;\n          }\n        });\n      } // ==-- Parse \"overwrite\" extensions --== //\n\n\n      if (pack.renderer) {\n        (function () {\n          var renderer = marked.defaults.renderer || new Renderer();\n\n          var _loop = function _loop(prop) {\n            var prevRenderer = renderer[prop]; // Replace renderer with func to run extension, but fall back if false\n\n            renderer[prop] = function () {\n              for (var _len3 = arguments.length, args = new Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n                args[_key3] = arguments[_key3];\n              }\n\n              var ret = pack.renderer[prop].apply(renderer, args);\n\n              if (ret === false) {\n                ret = prevRenderer.apply(renderer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.renderer) {\n            _loop(prop);\n          }\n\n          opts.renderer = renderer;\n        })();\n      }\n\n      if (pack.tokenizer) {\n        (function () {\n          var tokenizer = marked.defaults.tokenizer || new Tokenizer();\n\n          var _loop2 = function _loop2(prop) {\n            var prevTokenizer = tokenizer[prop]; // Replace tokenizer with func to run extension, but fall back if false\n\n            tokenizer[prop] = function () {\n              for (var _len4 = arguments.length, args = new Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n              }\n\n              var ret = pack.tokenizer[prop].apply(tokenizer, args);\n\n              if (ret === false) {\n                ret = prevTokenizer.apply(tokenizer, args);\n              }\n\n              return ret;\n            };\n          };\n\n          for (var prop in pack.tokenizer) {\n            _loop2(prop);\n          }\n\n          opts.tokenizer = tokenizer;\n        })();\n      } // ==-- Parse WalkTokens extensions --== //\n\n\n      if (pack.walkTokens) {\n        var walkTokens = marked.defaults.walkTokens;\n\n        opts.walkTokens = function (token) {\n          pack.walkTokens.call(_this, token);\n\n          if (walkTokens) {\n            walkTokens(token);\n          }\n        };\n      }\n\n      if (hasExtensions) {\n        opts.extensions = extensions;\n      }\n\n      marked.setOptions(opts);\n    });\n  };\n  /**\n   * Run callback for every token\n   */\n\n\n  marked.walkTokens = function (tokens, callback) {\n    var _loop3 = function _loop3() {\n      var token = _step.value;\n      callback(token);\n\n      switch (token.type) {\n        case 'table':\n          {\n            for (var _iterator2 = _createForOfIteratorHelperLoose(token.header), _step2; !(_step2 = _iterator2()).done;) {\n              var cell = _step2.value;\n              marked.walkTokens(cell.tokens, callback);\n            }\n\n            for (var _iterator3 = _createForOfIteratorHelperLoose(token.rows), _step3; !(_step3 = _iterator3()).done;) {\n              var row = _step3.value;\n\n              for (var _iterator4 = _createForOfIteratorHelperLoose(row), _step4; !(_step4 = _iterator4()).done;) {\n                var _cell = _step4.value;\n                marked.walkTokens(_cell.tokens, callback);\n              }\n            }\n\n            break;\n          }\n\n        case 'list':\n          {\n            marked.walkTokens(token.items, callback);\n            break;\n          }\n\n        default:\n          {\n            if (marked.defaults.extensions && marked.defaults.extensions.childTokens && marked.defaults.extensions.childTokens[token.type]) {\n              // Walk any extensions\n              marked.defaults.extensions.childTokens[token.type].forEach(function (childTokens) {\n                marked.walkTokens(token[childTokens], callback);\n              });\n            } else if (token.tokens) {\n              marked.walkTokens(token.tokens, callback);\n            }\n          }\n      }\n    };\n\n    for (var _iterator = _createForOfIteratorHelperLoose(tokens), _step; !(_step = _iterator()).done;) {\n      _loop3();\n    }\n  };\n  /**\n   * Parse Inline\n   */\n\n\n  marked.parseInline = function (src, opt) {\n    // throw error in case of non string input\n    if (typeof src === 'undefined' || src === null) {\n      throw new Error('marked.parseInline(): input parameter is undefined or null');\n    }\n\n    if (typeof src !== 'string') {\n      throw new Error('marked.parseInline(): input parameter is of type ' + Object.prototype.toString.call(src) + ', string expected');\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n    checkSanitizeDeprecation(opt);\n\n    try {\n      var tokens = Lexer.lexInline(src, opt);\n\n      if (opt.walkTokens) {\n        marked.walkTokens(tokens, opt.walkTokens);\n      }\n\n      return Parser.parseInline(tokens, opt);\n    } catch (e) {\n      e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n\n      if (opt.silent) {\n        return '<p>An error occurred:</p><pre>' + escape(e.message + '', true) + '</pre>';\n      }\n\n      throw e;\n    }\n  };\n  /**\n   * Expose\n   */\n\n\n  marked.Parser = Parser;\n  marked.parser = Parser.parse;\n  marked.Renderer = Renderer;\n  marked.TextRenderer = TextRenderer;\n  marked.Lexer = Lexer;\n  marked.lexer = Lexer.lex;\n  marked.Tokenizer = Tokenizer;\n  marked.Slugger = Slugger;\n  marked.parse = marked;\n  var marked_1 = marked;\n\n  return marked_1;\n\n})));\n"]},"metadata":{},"sourceType":"script"}