{"ast":null,"code":"import { hsla, rgba, hex, color, complex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { getFrameData } from 'framesync';\nimport { createAnticipateEasing, createBackIn, createExpoIn, cubicBezier, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, reversed, mirrored } from '@popmotion/easing';\nexport { createAnticipateEasing, createBackIn, createExpoIn, cubicBezier, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, reversed, mirrored } from '@popmotion/easing';\nvar zeroPoint = {\n  x: 0,\n  y: 0,\n  z: 0\n};\n\nvar isNum = function isNum(v) {\n  return typeof v === 'number';\n};\n\nvar radiansToDegrees = function radiansToDegrees(radians) {\n  return radians * 180 / Math.PI;\n};\n\nvar angle = function angle(a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n\n  return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\n};\n\nvar applyOffset = function applyOffset(from, to) {\n  var hasReceivedFrom = true;\n\n  if (to === undefined) {\n    to = from;\n    hasReceivedFrom = false;\n  }\n\n  return function (v) {\n    if (hasReceivedFrom) {\n      return v - from + to;\n    } else {\n      from = v;\n      hasReceivedFrom = true;\n      return to;\n    }\n  };\n};\n\nvar curryRange = function curryRange(func) {\n  return function (min, max, v) {\n    return v !== undefined ? func(min, max, v) : function (cv) {\n      return func(min, max, cv);\n    };\n  };\n};\n\nvar clamp = function clamp(min, max, v) {\n  return Math.min(Math.max(v, min), max);\n};\n\nvar clamp$1 = curryRange(clamp);\n\nvar conditional = function conditional(check, apply) {\n  return function (v) {\n    return check(v) ? apply(v) : v;\n  };\n};\n\nvar degreesToRadians = function degreesToRadians(degrees) {\n  return degrees * Math.PI / 180;\n};\n\nvar isPoint = function isPoint(point) {\n  return point.hasOwnProperty('x') && point.hasOwnProperty('y');\n};\n\nvar isPoint3D = function isPoint3D(point) {\n  return isPoint(point) && point.hasOwnProperty('z');\n};\n\nvar distance1D = function distance1D(a, b) {\n  return Math.abs(a - b);\n};\n\nvar distance = function distance(a, b) {\n  if (b === void 0) {\n    b = zeroPoint;\n  }\n\n  if (isNum(a) && isNum(b)) {\n    return distance1D(a, b);\n  } else if (isPoint(a) && isPoint(b)) {\n    var xDelta = distance1D(a.x, b.x);\n    var yDelta = distance1D(a.y, b.y);\n    var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\n    return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\n  }\n\n  return 0;\n};\n\nvar progress = function progress(from, to, value) {\n  var toFromDifference = to - from;\n  return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\n};\n\nvar mix = function mix(from, to, progress) {\n  return -progress * from + progress * to + from;\n};\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n\nvar _assign = function __assign() {\n  _assign = Object.assign || function __assign(t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return _assign.apply(this, arguments);\n};\n\nvar mixLinearColor = function mixLinearColor(from, to, v) {\n  var fromExpo = from * from;\n  var toExpo = to * to;\n  return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\n};\n\nvar colorTypes = [hex, rgba, hsla];\n\nvar getColorType = function getColorType(v) {\n  return colorTypes.find(function (type) {\n    return type.test(v);\n  });\n};\n\nvar notAnimatable = function notAnimatable(color$$1) {\n  return \"'\" + color$$1 + \"' is not an animatable color. Use the equivalent color code instead.\";\n};\n\nvar mixColor = function mixColor(from, to) {\n  var fromColorType = getColorType(from);\n  var toColorType = getColorType(to);\n  invariant(!!fromColorType, notAnimatable(from));\n  invariant(!!toColorType, notAnimatable(to));\n  invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\n  var fromColor = fromColorType.parse(from);\n  var toColor = toColorType.parse(to);\n\n  var blended = _assign({}, fromColor);\n\n  var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\n  return function (v) {\n    for (var key in blended) {\n      if (key !== 'alpha') {\n        blended[key] = mixFunc(fromColor[key], toColor[key], v);\n      }\n    }\n\n    blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\n    return fromColorType.transform(blended);\n  };\n};\n\nvar combineFunctions = function combineFunctions(a, b) {\n  return function (v) {\n    return b(a(v));\n  };\n};\n\nvar pipe = function pipe() {\n  var transformers = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    transformers[_i] = arguments[_i];\n  }\n\n  return transformers.reduce(combineFunctions);\n};\n\nfunction getMixer(origin, target) {\n  if (isNum(origin)) {\n    return function (v) {\n      return mix(origin, target, v);\n    };\n  } else if (color.test(origin)) {\n    return mixColor(origin, target);\n  } else {\n    return mixComplex(origin, target);\n  }\n}\n\nvar mixArray = function mixArray(from, to) {\n  var output = from.slice();\n  var numValues = output.length;\n  var blendValue = from.map(function (fromThis, i) {\n    return getMixer(fromThis, to[i]);\n  });\n  return function (v) {\n    for (var i = 0; i < numValues; i++) {\n      output[i] = blendValue[i](v);\n    }\n\n    return output;\n  };\n};\n\nvar mixObject = function mixObject(origin, target) {\n  var output = _assign({}, origin, target);\n\n  var blendValue = {};\n\n  for (var key in output) {\n    if (origin[key] !== undefined && target[key] !== undefined) {\n      blendValue[key] = getMixer(origin[key], target[key]);\n    }\n  }\n\n  return function (v) {\n    for (var key in blendValue) {\n      output[key] = blendValue[key](v);\n    }\n\n    return output;\n  };\n};\n\nfunction analyse(value) {\n  var parsed = complex.parse(value);\n  var numValues = parsed.length;\n  var numNumbers = 0;\n  var numRGB = 0;\n  var numHSL = 0;\n\n  for (var i = 0; i < numValues; i++) {\n    if (numNumbers || typeof parsed[i] === 'number') {\n      numNumbers++;\n    } else {\n      if (parsed[i].hue !== undefined) {\n        numHSL++;\n      } else {\n        numRGB++;\n      }\n    }\n  }\n\n  return {\n    parsed: parsed,\n    numNumbers: numNumbers,\n    numRGB: numRGB,\n    numHSL: numHSL\n  };\n}\n\nvar mixComplex = function mixComplex(origin, target) {\n  var template = complex.createTransformer(target);\n  var originStats = analyse(origin);\n  var targetStats = analyse(target);\n  invariant(originStats.numHSL === targetStats.numHSL && originStats.numRGB === targetStats.numRGB && originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\n  return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\n};\n\nvar mixNumber = function mixNumber(from, to) {\n  return function (p) {\n    return mix(from, to, p);\n  };\n};\n\nfunction detectMixerFactory(v) {\n  if (typeof v === 'number') {\n    return mixNumber;\n  } else if (typeof v === 'string') {\n    if (color.test(v)) {\n      return mixColor;\n    } else {\n      return mixComplex;\n    }\n  } else if (Array.isArray(v)) {\n    return mixArray;\n  } else if (typeof v === 'object') {\n    return mixObject;\n  }\n}\n\nfunction createMixers(output, ease, customMixer) {\n  var mixers = [];\n  var mixerFactory = customMixer || detectMixerFactory(output[0]);\n  var numMixers = output.length - 1;\n\n  for (var i = 0; i < numMixers; i++) {\n    var mixer = mixerFactory(output[i], output[i + 1]);\n\n    if (ease) {\n      var easingFunction = Array.isArray(ease) ? ease[i] : ease;\n      mixer = pipe(easingFunction, mixer);\n    }\n\n    mixers.push(mixer);\n  }\n\n  return mixers;\n}\n\nfunction fastInterpolate(_a, _b) {\n  var from = _a[0],\n      to = _a[1];\n  var mixer = _b[0];\n  return function (v) {\n    return mixer(progress(from, to, v));\n  };\n}\n\nfunction slowInterpolate(input, mixers) {\n  var inputLength = input.length;\n  var lastInputIndex = inputLength - 1;\n  return function (v) {\n    var mixerIndex = 0;\n    var foundMixerIndex = false;\n\n    if (v <= input[0]) {\n      foundMixerIndex = true;\n    } else if (v >= input[lastInputIndex]) {\n      mixerIndex = lastInputIndex - 1;\n      foundMixerIndex = true;\n    }\n\n    if (!foundMixerIndex) {\n      var i = 1;\n\n      for (; i < inputLength; i++) {\n        if (input[i] > v || i === lastInputIndex) {\n          break;\n        }\n      }\n\n      mixerIndex = i - 1;\n    }\n\n    var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\n    return mixers[mixerIndex](progressInRange);\n  };\n}\n\nfunction interpolate(input, output, _a) {\n  var _b = _a === void 0 ? {} : _a,\n      _c = _b.clamp,\n      clamp = _c === void 0 ? true : _c,\n      ease = _b.ease,\n      mixer = _b.mixer;\n\n  var inputLength = input.length;\n  invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\n  invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\n\n  if (input[0] > input[inputLength - 1]) {\n    input = [].concat(input);\n    output = [].concat(output);\n    input.reverse();\n    output.reverse();\n  }\n\n  var mixers = createMixers(output, ease, mixer);\n  var interpolator = inputLength === 2 ? fastInterpolate(input, mixers) : slowInterpolate(input, mixers);\n  return clamp ? pipe(clamp$1(input[0], input[inputLength - 1]), interpolator) : interpolator;\n}\n\nvar pointFromVector = function pointFromVector(origin, angle, distance) {\n  angle = degreesToRadians(angle);\n  return {\n    x: distance * Math.cos(angle) + origin.x,\n    y: distance * Math.sin(angle) + origin.y\n  };\n};\n\nvar toDecimal = function toDecimal(num, precision) {\n  if (precision === void 0) {\n    precision = 2;\n  }\n\n  precision = Math.pow(10, precision);\n  return Math.round(num * precision) / precision;\n};\n\nvar smoothFrame = function smoothFrame(prevValue, nextValue, duration, smoothing) {\n  if (smoothing === void 0) {\n    smoothing = 0;\n  }\n\n  return toDecimal(prevValue + duration * (nextValue - prevValue) / Math.max(smoothing, duration));\n};\n\nvar smooth = function smooth(strength) {\n  if (strength === void 0) {\n    strength = 50;\n  }\n\n  var previousValue = 0;\n  var lastUpdated = 0;\n  return function (v) {\n    var currentFramestamp = getFrameData().timestamp;\n    var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\n    var newValue = timeDelta ? smoothFrame(previousValue, v, timeDelta, strength) : previousValue;\n    lastUpdated = currentFramestamp;\n    previousValue = newValue;\n    return newValue;\n  };\n};\n\nvar snap = function snap(points) {\n  if (typeof points === 'number') {\n    return function (v) {\n      return Math.round(v / points) * points;\n    };\n  } else {\n    var i_1 = 0;\n    var numPoints_1 = points.length;\n    return function (v) {\n      var lastDistance = Math.abs(points[0] - v);\n\n      for (i_1 = 1; i_1 < numPoints_1; i_1++) {\n        var point = points[i_1];\n        var distance = Math.abs(point - v);\n        if (distance === 0) return point;\n        if (distance > lastDistance) return points[i_1 - 1];\n        if (i_1 === numPoints_1 - 1) return point;\n        lastDistance = distance;\n      }\n    };\n  }\n};\n\nvar identity = function identity(v) {\n  return v;\n};\n\nvar springForce = function springForce(alterDisplacement) {\n  if (alterDisplacement === void 0) {\n    alterDisplacement = identity;\n  }\n\n  return curryRange(function (constant, origin, v) {\n    var displacement = origin - v;\n    var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\n    return displacement <= 0 ? origin + springModifiedDisplacement : origin - springModifiedDisplacement;\n  });\n};\n\nvar springForceLinear = springForce();\nvar springForceExpo = springForce(Math.sqrt);\n\nvar velocityPerFrame = function velocityPerFrame(xps, frameDuration) {\n  return isNum(xps) ? xps / (1000 / frameDuration) : 0;\n};\n\nvar velocityPerSecond = function velocityPerSecond(velocity, frameDuration) {\n  return frameDuration ? velocity * (1000 / frameDuration) : 0;\n};\n\nvar wrap = function wrap(min, max, v) {\n  var rangeSize = max - min;\n  return ((v - min) % rangeSize + rangeSize) % rangeSize + min;\n};\n\nvar wrap$1 = curryRange(wrap);\nvar clampProgress = clamp$1(0, 1);\n\nvar steps = function steps(_steps, direction) {\n  if (direction === void 0) {\n    direction = 'end';\n  }\n\n  return function (progress) {\n    progress = direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\n    var expanded = progress * _steps;\n    var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\n    return clampProgress(rounded / _steps);\n  };\n};\n\nexport { angle, applyOffset, clamp$1 as clamp, conditional, degreesToRadians, distance, interpolate, isPoint, isPoint3D, mix, mixArray, mixColor, mixComplex, mixObject, pipe, pointFromVector, progress, radiansToDegrees, smooth, smoothFrame, snap, springForce, springForceExpo, springForceLinear, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap$1 as wrap };","map":{"version":3,"sources":["/Users/yashowardhanshinde/Desktop/GitHub/react-blog-template-master/node_modules/@popmotion/popcorn/dist/popcorn.es.js"],"names":["hsla","rgba","hex","color","complex","invariant","getFrameData","createAnticipateEasing","createBackIn","createExpoIn","cubicBezier","linear","easeIn","easeOut","easeInOut","circIn","circOut","circInOut","backIn","backOut","backInOut","anticipate","reversed","mirrored","zeroPoint","x","y","z","isNum","v","radiansToDegrees","radians","Math","PI","angle","a","b","atan2","applyOffset","from","to","hasReceivedFrom","undefined","curryRange","func","min","max","cv","clamp","clamp$1","conditional","check","apply","degreesToRadians","degrees","isPoint","point","hasOwnProperty","isPoint3D","distance1D","abs","distance","xDelta","yDelta","zDelta","sqrt","pow","progress","value","toFromDifference","mix","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","call","mixLinearColor","fromExpo","toExpo","colorTypes","getColorType","find","type","test","notAnimatable","color$$1","mixColor","fromColorType","toColorType","transform","fromColor","parse","toColor","blended","mixFunc","key","alpha","combineFunctions","pipe","transformers","_i","reduce","getMixer","origin","target","mixComplex","mixArray","output","slice","numValues","blendValue","map","fromThis","mixObject","analyse","parsed","numNumbers","numRGB","numHSL","hue","template","createTransformer","originStats","targetStats","mixNumber","detectMixerFactory","Array","isArray","createMixers","ease","customMixer","mixers","mixerFactory","numMixers","mixer","easingFunction","push","fastInterpolate","_a","_b","slowInterpolate","input","inputLength","lastInputIndex","mixerIndex","foundMixerIndex","progressInRange","interpolate","_c","concat","reverse","interpolator","pointFromVector","cos","sin","toDecimal","num","precision","round","smoothFrame","prevValue","nextValue","duration","smoothing","smooth","strength","previousValue","lastUpdated","currentFramestamp","timestamp","timeDelta","newValue","snap","points","i_1","numPoints_1","lastDistance","identity","springForce","alterDisplacement","constant","displacement","springModifiedDisplacement","springForceLinear","springForceExpo","velocityPerFrame","xps","frameDuration","velocityPerSecond","velocity","wrap","rangeSize","wrap$1","clampProgress","steps","direction","expanded","rounded","floor","ceil"],"mappings":"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","sourcesContent":["import { hsla, rgba, hex, color, complex } from 'style-value-types';\nimport { invariant } from 'hey-listen';\nimport { getFrameData } from 'framesync';\nimport { createAnticipateEasing, createBackIn, createExpoIn, cubicBezier, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, reversed, mirrored } from '@popmotion/easing';\nexport { createAnticipateEasing, createBackIn, createExpoIn, cubicBezier, linear, easeIn, easeOut, easeInOut, circIn, circOut, circInOut, backIn, backOut, backInOut, anticipate, reversed, mirrored } from '@popmotion/easing';\n\nvar zeroPoint = {\r\n    x: 0,\r\n    y: 0,\r\n    z: 0\r\n};\r\nvar isNum = function (v) { return typeof v === 'number'; };\n\nvar radiansToDegrees = (function (radians) { return (radians * 180) / Math.PI; });\n\nvar angle = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    return radiansToDegrees(Math.atan2(b.y - a.y, b.x - a.x));\r\n});\n\nvar applyOffset = (function (from, to) {\r\n    var hasReceivedFrom = true;\r\n    if (to === undefined) {\r\n        to = from;\r\n        hasReceivedFrom = false;\r\n    }\r\n    return function (v) {\r\n        if (hasReceivedFrom) {\r\n            return v - from + to;\r\n        }\r\n        else {\r\n            from = v;\r\n            hasReceivedFrom = true;\r\n            return to;\r\n        }\r\n    };\r\n});\n\nvar curryRange = (function (func) { return function (min, max, v) { return (v !== undefined ? func(min, max, v) : function (cv) { return func(min, max, cv); }); }; });\n\nvar clamp = function (min, max, v) {\r\n    return Math.min(Math.max(v, min), max);\r\n};\r\nvar clamp$1 = curryRange(clamp);\n\nvar conditional = (function (check, apply) { return function (v) {\r\n    return check(v) ? apply(v) : v;\r\n}; });\n\nvar degreesToRadians = (function (degrees) { return (degrees * Math.PI) / 180; });\n\nvar isPoint = (function (point) {\r\n    return point.hasOwnProperty('x') && point.hasOwnProperty('y');\r\n});\n\nvar isPoint3D = (function (point) {\r\n    return isPoint(point) && point.hasOwnProperty('z');\r\n});\n\nvar distance1D = function (a, b) { return Math.abs(a - b); };\r\nvar distance = (function (a, b) {\r\n    if (b === void 0) { b = zeroPoint; }\r\n    if (isNum(a) && isNum(b)) {\r\n        return distance1D(a, b);\r\n    }\r\n    else if (isPoint(a) && isPoint(b)) {\r\n        var xDelta = distance1D(a.x, b.x);\r\n        var yDelta = distance1D(a.y, b.y);\r\n        var zDelta = isPoint3D(a) && isPoint3D(b) ? distance1D(a.z, b.z) : 0;\r\n        return Math.sqrt(Math.pow(xDelta, 2) + Math.pow(yDelta, 2) + Math.pow(zDelta, 2));\r\n    }\r\n    return 0;\r\n});\n\nvar progress = (function (from, to, value) {\r\n    var toFromDifference = to - from;\r\n    return toFromDifference === 0 ? 1 : (value - from) / toFromDifference;\r\n});\n\nvar mix = (function (from, to, progress) {\r\n    return -progress * from + progress * to + from;\r\n});\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\n\nvar mixLinearColor = function (from, to, v) {\r\n    var fromExpo = from * from;\r\n    var toExpo = to * to;\r\n    return Math.sqrt(Math.max(0, v * (toExpo - fromExpo) + fromExpo));\r\n};\r\nvar colorTypes = [hex, rgba, hsla];\r\nvar getColorType = function (v) {\r\n    return colorTypes.find(function (type) { return type.test(v); });\r\n};\r\nvar notAnimatable = function (color$$1) {\r\n    return \"'\" + color$$1 + \"' is not an animatable color. Use the equivalent color code instead.\";\r\n};\r\nvar mixColor = (function (from, to) {\r\n    var fromColorType = getColorType(from);\r\n    var toColorType = getColorType(to);\r\n    invariant(!!fromColorType, notAnimatable(from));\r\n    invariant(!!toColorType, notAnimatable(to));\r\n    invariant(fromColorType.transform === toColorType.transform, 'Both colors must be hex/RGBA, OR both must be HSLA.');\r\n    var fromColor = fromColorType.parse(from);\r\n    var toColor = toColorType.parse(to);\r\n    var blended = __assign({}, fromColor);\r\n    var mixFunc = fromColorType === hsla ? mix : mixLinearColor;\r\n    return function (v) {\r\n        for (var key in blended) {\r\n            if (key !== 'alpha') {\r\n                blended[key] = mixFunc(fromColor[key], toColor[key], v);\r\n            }\r\n        }\r\n        blended.alpha = mix(fromColor.alpha, toColor.alpha, v);\r\n        return fromColorType.transform(blended);\r\n    };\r\n});\n\nvar combineFunctions = function (a, b) { return function (v) { return b(a(v)); }; };\r\nvar pipe = (function () {\r\n    var transformers = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        transformers[_i] = arguments[_i];\r\n    }\r\n    return transformers.reduce(combineFunctions);\r\n});\n\nfunction getMixer(origin, target) {\r\n    if (isNum(origin)) {\r\n        return function (v) { return mix(origin, target, v); };\r\n    }\r\n    else if (color.test(origin)) {\r\n        return mixColor(origin, target);\r\n    }\r\n    else {\r\n        return mixComplex(origin, target);\r\n    }\r\n}\r\nvar mixArray = function (from, to) {\r\n    var output = from.slice();\r\n    var numValues = output.length;\r\n    var blendValue = from.map(function (fromThis, i) { return getMixer(fromThis, to[i]); });\r\n    return function (v) {\r\n        for (var i = 0; i < numValues; i++) {\r\n            output[i] = blendValue[i](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nvar mixObject = function (origin, target) {\r\n    var output = __assign({}, origin, target);\r\n    var blendValue = {};\r\n    for (var key in output) {\r\n        if (origin[key] !== undefined && target[key] !== undefined) {\r\n            blendValue[key] = getMixer(origin[key], target[key]);\r\n        }\r\n    }\r\n    return function (v) {\r\n        for (var key in blendValue) {\r\n            output[key] = blendValue[key](v);\r\n        }\r\n        return output;\r\n    };\r\n};\r\nfunction analyse(value) {\r\n    var parsed = complex.parse(value);\r\n    var numValues = parsed.length;\r\n    var numNumbers = 0;\r\n    var numRGB = 0;\r\n    var numHSL = 0;\r\n    for (var i = 0; i < numValues; i++) {\r\n        if (numNumbers || typeof parsed[i] === 'number') {\r\n            numNumbers++;\r\n        }\r\n        else {\r\n            if (parsed[i].hue !== undefined) {\r\n                numHSL++;\r\n            }\r\n            else {\r\n                numRGB++;\r\n            }\r\n        }\r\n    }\r\n    return { parsed: parsed, numNumbers: numNumbers, numRGB: numRGB, numHSL: numHSL };\r\n}\r\nvar mixComplex = function (origin, target) {\r\n    var template = complex.createTransformer(target);\r\n    var originStats = analyse(origin);\r\n    var targetStats = analyse(target);\r\n    invariant(originStats.numHSL === targetStats.numHSL &&\r\n        originStats.numRGB === targetStats.numRGB &&\r\n        originStats.numNumbers >= targetStats.numNumbers, \"Complex values '\" + origin + \"' and '\" + target + \"' too different to mix. Ensure all colors are of the same type.\");\r\n    return pipe(mixArray(originStats.parsed, targetStats.parsed), template);\r\n};\n\nvar mixNumber = function (from, to) { return function (p) { return mix(from, to, p); }; };\r\nfunction detectMixerFactory(v) {\r\n    if (typeof v === 'number') {\r\n        return mixNumber;\r\n    }\r\n    else if (typeof v === 'string') {\r\n        if (color.test(v)) {\r\n            return mixColor;\r\n        }\r\n        else {\r\n            return mixComplex;\r\n        }\r\n    }\r\n    else if (Array.isArray(v)) {\r\n        return mixArray;\r\n    }\r\n    else if (typeof v === 'object') {\r\n        return mixObject;\r\n    }\r\n}\r\nfunction createMixers(output, ease, customMixer) {\r\n    var mixers = [];\r\n    var mixerFactory = customMixer || detectMixerFactory(output[0]);\r\n    var numMixers = output.length - 1;\r\n    for (var i = 0; i < numMixers; i++) {\r\n        var mixer = mixerFactory(output[i], output[i + 1]);\r\n        if (ease) {\r\n            var easingFunction = Array.isArray(ease) ? ease[i] : ease;\r\n            mixer = pipe(easingFunction, mixer);\r\n        }\r\n        mixers.push(mixer);\r\n    }\r\n    return mixers;\r\n}\r\nfunction fastInterpolate(_a, _b) {\r\n    var from = _a[0], to = _a[1];\r\n    var mixer = _b[0];\r\n    return function (v) { return mixer(progress(from, to, v)); };\r\n}\r\nfunction slowInterpolate(input, mixers) {\r\n    var inputLength = input.length;\r\n    var lastInputIndex = inputLength - 1;\r\n    return function (v) {\r\n        var mixerIndex = 0;\r\n        var foundMixerIndex = false;\r\n        if (v <= input[0]) {\r\n            foundMixerIndex = true;\r\n        }\r\n        else if (v >= input[lastInputIndex]) {\r\n            mixerIndex = lastInputIndex - 1;\r\n            foundMixerIndex = true;\r\n        }\r\n        if (!foundMixerIndex) {\r\n            var i = 1;\r\n            for (; i < inputLength; i++) {\r\n                if (input[i] > v || i === lastInputIndex) {\r\n                    break;\r\n                }\r\n            }\r\n            mixerIndex = i - 1;\r\n        }\r\n        var progressInRange = progress(input[mixerIndex], input[mixerIndex + 1], v);\r\n        return mixers[mixerIndex](progressInRange);\r\n    };\r\n}\r\nfunction interpolate(input, output, _a) {\r\n    var _b = _a === void 0 ? {} : _a, _c = _b.clamp, clamp = _c === void 0 ? true : _c, ease = _b.ease, mixer = _b.mixer;\r\n    var inputLength = input.length;\r\n    invariant(inputLength === output.length, 'Both input and output ranges must be the same length');\r\n    invariant(!ease || !Array.isArray(ease) || ease.length === inputLength - 1, 'Array of easing functions must be of length `input.length - 1`, as it applies to the transitions **between** the defined values.');\r\n    if (input[0] > input[inputLength - 1]) {\r\n        input = [].concat(input);\r\n        output = [].concat(output);\r\n        input.reverse();\r\n        output.reverse();\r\n    }\r\n    var mixers = createMixers(output, ease, mixer);\r\n    var interpolator = inputLength === 2\r\n        ? fastInterpolate(input, mixers)\r\n        : slowInterpolate(input, mixers);\r\n    return clamp\r\n        ? pipe(clamp$1(input[0], input[inputLength - 1]), interpolator)\r\n        : interpolator;\r\n}\n\nvar pointFromVector = (function (origin, angle, distance) {\r\n    angle = degreesToRadians(angle);\r\n    return {\r\n        x: distance * Math.cos(angle) + origin.x,\r\n        y: distance * Math.sin(angle) + origin.y\r\n    };\r\n});\n\nvar toDecimal = (function (num, precision) {\r\n    if (precision === void 0) { precision = 2; }\r\n    precision = Math.pow(10, precision);\r\n    return Math.round(num * precision) / precision;\r\n});\n\nvar smoothFrame = (function (prevValue, nextValue, duration, smoothing) {\r\n    if (smoothing === void 0) { smoothing = 0; }\r\n    return toDecimal(prevValue +\r\n        (duration * (nextValue - prevValue)) / Math.max(smoothing, duration));\r\n});\n\nvar smooth = (function (strength) {\r\n    if (strength === void 0) { strength = 50; }\r\n    var previousValue = 0;\r\n    var lastUpdated = 0;\r\n    return function (v) {\r\n        var currentFramestamp = getFrameData().timestamp;\r\n        var timeDelta = currentFramestamp !== lastUpdated ? currentFramestamp - lastUpdated : 0;\r\n        var newValue = timeDelta\r\n            ? smoothFrame(previousValue, v, timeDelta, strength)\r\n            : previousValue;\r\n        lastUpdated = currentFramestamp;\r\n        previousValue = newValue;\r\n        return newValue;\r\n    };\r\n});\n\nvar snap = (function (points) {\r\n    if (typeof points === 'number') {\r\n        return function (v) { return Math.round(v / points) * points; };\r\n    }\r\n    else {\r\n        var i_1 = 0;\r\n        var numPoints_1 = points.length;\r\n        return function (v) {\r\n            var lastDistance = Math.abs(points[0] - v);\r\n            for (i_1 = 1; i_1 < numPoints_1; i_1++) {\r\n                var point = points[i_1];\r\n                var distance = Math.abs(point - v);\r\n                if (distance === 0)\r\n                    return point;\r\n                if (distance > lastDistance)\r\n                    return points[i_1 - 1];\r\n                if (i_1 === numPoints_1 - 1)\r\n                    return point;\r\n                lastDistance = distance;\r\n            }\r\n        };\r\n    }\r\n});\n\nvar identity = function (v) { return v; };\r\nvar springForce = function (alterDisplacement) {\r\n    if (alterDisplacement === void 0) { alterDisplacement = identity; }\r\n    return curryRange(function (constant, origin, v) {\r\n        var displacement = origin - v;\r\n        var springModifiedDisplacement = -(0 - constant + 1) * (0 - alterDisplacement(Math.abs(displacement)));\r\n        return displacement <= 0\r\n            ? origin + springModifiedDisplacement\r\n            : origin - springModifiedDisplacement;\r\n    });\r\n};\r\nvar springForceLinear = springForce();\r\nvar springForceExpo = springForce(Math.sqrt);\n\nvar velocityPerFrame = (function (xps, frameDuration) {\r\n    return isNum(xps) ? xps / (1000 / frameDuration) : 0;\r\n});\n\nvar velocityPerSecond = (function (velocity, frameDuration) {\r\n    return frameDuration ? velocity * (1000 / frameDuration) : 0;\r\n});\n\nvar wrap = function (min, max, v) {\r\n    var rangeSize = max - min;\r\n    return ((((v - min) % rangeSize) + rangeSize) % rangeSize) + min;\r\n};\r\nvar wrap$1 = curryRange(wrap);\n\nvar clampProgress = clamp$1(0, 1);\r\nvar steps = (function (steps, direction) {\r\n    if (direction === void 0) { direction = 'end'; }\r\n    return function (progress) {\r\n        progress =\r\n            direction === 'end' ? Math.min(progress, 0.999) : Math.max(progress, 0.001);\r\n        var expanded = progress * steps;\r\n        var rounded = direction === 'end' ? Math.floor(expanded) : Math.ceil(expanded);\r\n        return clampProgress(rounded / steps);\r\n    };\r\n});\n\nexport { angle, applyOffset, clamp$1 as clamp, conditional, degreesToRadians, distance, interpolate, isPoint, isPoint3D, mix, mixArray, mixColor, mixComplex, mixObject, pipe, pointFromVector, progress, radiansToDegrees, smooth, smoothFrame, snap, springForce, springForceExpo, springForceLinear, steps, toDecimal, velocityPerFrame, velocityPerSecond, wrap$1 as wrap };\n"]},"metadata":{},"sourceType":"module"}