{"ast":null,"code":"import { __assign, __spreadArrays, __rest, __extends } from 'tslib';\nimport { useRef, memo, useEffect, createContext, useContext, useMemo, forwardRef, createElement, Fragment, useCallback, useState, Component, useLayoutEffect, cloneElement, Children, isValidElement } from 'react';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { velocityPerSecond, distance, mix, interpolate, wrap } from '@popmotion/popcorn';\nimport styler, { createStylerFactory, buildStyleProperty, isTransformProp, transformProps, buildSVGAttrs } from 'stylefire';\nimport { invariant, warning } from 'hey-listen';\nimport { color, complex, number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { action, delay, tween, spring, keyframes as keyframes$1, inertia } from 'popmotion';\nimport * as easingLookup from '@popmotion/easing';\nimport { cubicBezier, linear } from '@popmotion/easing';\n\nvar isFloat = function (value) {\n  return !isNaN(parseFloat(value));\n};\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\n\n\nvar MotionValue = function () {\n  /**\r\n   * @param init - The initiating value\r\n   * @param config - Optional configuration options\r\n   *\r\n   * -  `transformer`: A function to transform incoming values with.\r\n   *\r\n   * @internal\r\n   */\n  function MotionValue(init, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        transformer = _b.transformer,\n        parent = _b.parent;\n    /**\r\n     * Duration, in milliseconds, since last updating frame.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.timeDelta = 0;\n    /**\r\n     * Timestamp of the last time this `MotionValue` was updated.\r\n     *\r\n     * @internal\r\n     */\n\n    this.lastUpdated = 0;\n    /**\r\n     * Tracks whether this value can output a velocity. Currently this is only true\r\n     * if the value is numerical, but we might be able to widen the scope here and support\r\n     * other value types.\r\n     *\r\n     * @internal\r\n     */\n\n    this.canTrackVelocity = false;\n\n    this.updateAndNotify = function (v, render) {\n      if (render === void 0) {\n        render = true;\n      }\n\n      _this.prev = _this.current;\n      _this.current = _this.transformer ? _this.transformer(v) : v;\n\n      if (_this.updateSubscribers && _this.prev !== _this.current) {\n        _this.updateSubscribers.forEach(_this.notifySubscriber);\n      }\n\n      if (_this.children) {\n        _this.children.forEach(_this.setChild);\n      }\n\n      if (render && _this.renderSubscribers) {\n        _this.renderSubscribers.forEach(_this.notifySubscriber);\n      } // Update timestamp\n\n\n      var _a = getFrameData(),\n          delta = _a.delta,\n          timestamp = _a.timestamp;\n\n      if (_this.lastUpdated !== timestamp) {\n        _this.timeDelta = delta;\n        _this.lastUpdated = timestamp;\n        sync.postRender(_this.scheduleVelocityCheck);\n      }\n    };\n    /**\r\n     * Notify a subscriber with the latest value.\r\n     *\r\n     * This is an instanced and bound function to prevent generating a new\r\n     * function once per frame.\r\n     *\r\n     * @param subscriber - The subscriber to notify.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.notifySubscriber = function (subscriber) {\n      subscriber(_this.current);\n    };\n    /**\r\n     * Schedule a velocity check for the next frame.\r\n     *\r\n     * This is an instanced and bound function to prevent generating a new\r\n     * function once per frame.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.scheduleVelocityCheck = function () {\n      return sync.postRender(_this.velocityCheck);\n    };\n    /**\r\n     * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n     * This ensures velocity calculations return `0`.\r\n     *\r\n     * This is an instanced and bound function to prevent generating a new\r\n     * function once per frame.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.velocityCheck = function (_a) {\n      var timestamp = _a.timestamp;\n\n      if (timestamp !== _this.lastUpdated) {\n        _this.prev = _this.current;\n      }\n    };\n    /**\r\n     * Updates child `MotionValue`.\r\n     *\r\n     * @param child - Child `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\n\n\n    this.setChild = function (child) {\n      return child.set(_this.current);\n    };\n\n    this.parent = parent;\n    this.transformer = transformer;\n    this.set(init, false);\n    this.canTrackVelocity = isFloat(this.current);\n  }\n  /**\r\n   * Creates a new `MotionValue` that's subscribed to the output of this one.\r\n   *\r\n   * @param config - Optional configuration options\r\n   *\r\n   * -  `transformer`: A function to transform incoming values with.\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.addChild = function (config) {\n    if (config === void 0) {\n      config = {};\n    }\n\n    var child = new MotionValue(this.current, __assign({\n      parent: this\n    }, config));\n    if (!this.children) this.children = new Set();\n    this.children.add(child);\n    return child;\n  };\n  /**\r\n   * Stops a `MotionValue` from being subscribed to this one.\r\n   *\r\n   * @param child - The subscribed `MotionValue`\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.removeChild = function (child) {\n    if (!this.children) {\n      return;\n    }\n\n    this.children.delete(child);\n  };\n  /**\r\n   * Subscribes a subscriber function to a subscription list.\r\n   *\r\n   * @param subscriptions - A `Set` of subscribers.\r\n   * @param subscription - A subscriber function.\r\n   */\n\n\n  MotionValue.prototype.subscribeTo = function (subscriptions, subscription) {\n    var _this = this;\n\n    var updateSubscriber = function () {\n      return subscription(_this.current);\n    };\n\n    subscriptions.add(updateSubscriber);\n    return function () {\n      return subscriptions.delete(updateSubscriber);\n    };\n  };\n  /**\r\n   * Adds a function that will be notified when the `MotionValue` is updated.\r\n   *\r\n   * It returns a function that, when called, will cancel the subscription.\r\n   *\r\n   * When calling `onChange` inside a React component, it should be wrapped with the\r\n   * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n   * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n   *\r\n   * @library\r\n   *\r\n   * ```jsx\r\n   * function MyComponent() {\r\n   *   const x = useMotionValue(0)\r\n   *   const y = useMotionValue(0)\r\n   *   const opacity = useMotionValue(1)\r\n   *\r\n   *   useEffect(() => {\r\n   *     function updateOpacity() {\r\n   *       const maxXY = Math.max(x.get(), y.get())\r\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n   *       opacity.set(newOpacity)\r\n   *     }\r\n   *\r\n   *     const unsubscribeX = x.onChange(updateOpacity)\r\n   *     const unsubscribeY = y.onChange(updateOpacity)\r\n   *\r\n   *     return () => {\r\n   *       unsubscribeX()\r\n   *       unsubscribeY()\r\n   *     }\r\n   *   }, [])\r\n   *\r\n   *   return <Frame x={x} />\r\n   * }\r\n   * ```\r\n   *\r\n   * @motion\r\n   *\r\n   * ```jsx\r\n   * export const MyComponent = () => {\r\n   *   const x = useMotionValue(0)\r\n   *   const y = useMotionValue(0)\r\n   *   const opacity = useMotionValue(1)\r\n   *\r\n   *   useEffect(() => {\r\n   *     function updateOpacity() {\r\n   *       const maxXY = Math.max(x.get(), y.get())\r\n   *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n   *       opacity.set(newOpacity)\r\n   *     }\r\n   *\r\n   *     const unsubscribeX = x.onChange(updateOpacity)\r\n   *     const unsubscribeY = y.onChange(updateOpacity)\r\n   *\r\n   *     return () => {\r\n   *       unsubscribeX()\r\n   *       unsubscribeY()\r\n   *     }\r\n   *   }, [])\r\n   *\r\n   *   return <motion.div style={{ x }} />\r\n   * }\r\n   * ```\r\n   *\r\n   * @internalremarks\r\n   *\r\n   * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\r\n   *\r\n   * ```jsx\r\n   * useOnChange(x, () => {})\r\n   * ```\r\n   *\r\n   * @param subscriber - A function that receives the latest value.\r\n   * @returns A function that, when called, will cancel this subscription.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.onChange = function (subscription) {\n    if (!this.updateSubscribers) this.updateSubscribers = new Set();\n    return this.subscribeTo(this.updateSubscribers, subscription);\n  };\n  /**\r\n   * Adds a function that will be notified when the `MotionValue` requests a render.\r\n   *\r\n   * @param subscriber - A function that's provided the latest value.\r\n   * @returns A function that, when called, will cancel this subscription.\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.onRenderRequest = function (subscription) {\n    if (!this.renderSubscribers) this.renderSubscribers = new Set(); // Render immediately\n\n    this.notifySubscriber(subscription);\n    return this.subscribeTo(this.renderSubscribers, subscription);\n  };\n  /**\r\n   * Attaches a passive effect to the `MotionValue`.\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.attach = function (passiveEffect) {\n    this.passiveEffect = passiveEffect;\n  };\n  /**\r\n   * Sets the state of the `MotionValue`.\r\n   *\r\n   * @remarks\r\n   *\r\n   * ```jsx\r\n   * const x = useMotionValue(0)\r\n   * x.set(10)\r\n   * ```\r\n   *\r\n   * @param latest - Latest value to set.\r\n   * @param render - Whether to notify render subscribers. Defaults to `true`\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.set = function (v, render) {\n    if (render === void 0) {\n      render = true;\n    }\n\n    if (!render || !this.passiveEffect) {\n      this.updateAndNotify(v, render);\n    } else {\n      this.passiveEffect(v, this.updateAndNotify);\n    }\n  };\n  /**\r\n   * Returns the latest state of `MotionValue`\r\n   *\r\n   * @returns - The latest state of `MotionValue`\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.get = function () {\n    return this.current;\n  };\n  /**\r\n   * Returns the latest velocity of `MotionValue`\r\n   *\r\n   * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.getVelocity = function () {\n    // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\n    return this.canTrackVelocity ? // These casts could be avoided if parseFloat would be typed better\n    velocityPerSecond(parseFloat(this.current) - parseFloat(this.prev), this.timeDelta) : 0;\n  };\n  /**\r\n   * Registers a new animation to control this `MotionValue`. Only one\r\n   * animation can drive a `MotionValue` at one time.\r\n   *\r\n   * ```jsx\r\n   * value.start()\r\n   * ```\r\n   *\r\n   * @param animation - A function that starts the provided animation\r\n   *\r\n   * @internal\r\n   */\n\n\n  MotionValue.prototype.start = function (animation) {\n    var _this = this;\n\n    this.stop();\n    return new Promise(function (resolve) {\n      _this.stopAnimation = animation(resolve);\n    }).then(function () {\n      return _this.clearAnimation();\n    });\n  };\n  /**\r\n   * Stop the currently active animation.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.stop = function () {\n    if (this.stopAnimation) this.stopAnimation();\n    this.clearAnimation();\n  };\n  /**\r\n   * Returns `true` if this value is currently animating.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.isAnimating = function () {\n    return !!this.stopAnimation;\n  };\n\n  MotionValue.prototype.clearAnimation = function () {\n    this.stopAnimation = null;\n  };\n  /**\r\n   * Destroy and clean up subscribers to this `MotionValue`.\r\n   *\r\n   * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n   * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n   * created a `MotionValue` via the `motionValue` function.\r\n   *\r\n   * @public\r\n   */\n\n\n  MotionValue.prototype.destroy = function () {\n    this.updateSubscribers && this.updateSubscribers.clear();\n    this.renderSubscribers && this.renderSubscribers.clear();\n    this.parent && this.parent.removeChild(this);\n    this.stop();\n  };\n\n  return MotionValue;\n}();\n/**\r\n * @internal\r\n */\n\n\nfunction motionValue(init, opts) {\n  return new MotionValue(init, opts);\n}\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\n\n\nfunction useConstant(init) {\n  var ref = useRef(null);\n\n  if (ref.current === null) {\n    ref.current = init();\n  }\n\n  return ref.current;\n}\n\nvar isMotionValue = function (value) {\n  return value instanceof MotionValue;\n}; // Creating a styler factory for the `onUpdate` prop allows all values\n// to fire and the `onUpdate` prop will only fire once per frame\n\n\nvar updateStyler = createStylerFactory({\n  onRead: function () {\n    return null;\n  },\n  onRender: function (state, _a) {\n    var onUpdate = _a.onUpdate;\n    return onUpdate(state);\n  }\n});\n\nvar MotionValuesMap = function () {\n  function MotionValuesMap() {\n    this.hasMounted = false;\n    this.values = new Map();\n    this.unsubscribers = new Map();\n  }\n\n  MotionValuesMap.prototype.has = function (key) {\n    return this.values.has(key);\n  };\n\n  MotionValuesMap.prototype.set = function (key, value) {\n    this.values.set(key, value);\n\n    if (this.hasMounted) {\n      this.bindValueToOutput(key, value);\n    }\n  };\n\n  MotionValuesMap.prototype.get = function (key, defaultValue) {\n    var value = this.values.get(key);\n\n    if (value === undefined && defaultValue !== undefined) {\n      value = new MotionValue(defaultValue);\n      this.set(key, value);\n    }\n\n    return value;\n  };\n\n  MotionValuesMap.prototype.forEach = function (callback) {\n    return this.values.forEach(callback);\n  };\n\n  MotionValuesMap.prototype.bindValueToOutput = function (key, value) {\n    var _this = this;\n\n    var onRender = function (v) {\n      return _this.output && _this.output(key, v);\n    };\n\n    var unsubscribeOnRender = value.onRenderRequest(onRender);\n\n    var onChange = function (v) {\n      _this.onUpdate && _this.onUpdate.set(key, v);\n    };\n\n    var unsubscribeOnChange = value.onChange(onChange);\n\n    if (this.unsubscribers.has(key)) {\n      this.unsubscribers.get(key)();\n    }\n\n    this.unsubscribers.set(key, function () {\n      unsubscribeOnRender();\n      unsubscribeOnChange();\n    });\n  };\n\n  MotionValuesMap.prototype.setOnUpdate = function (onUpdate) {\n    this.onUpdate = undefined;\n\n    if (onUpdate) {\n      this.onUpdate = updateStyler({\n        onUpdate: onUpdate\n      });\n    }\n  };\n\n  MotionValuesMap.prototype.setTransformTemplate = function (transformTemplate) {\n    if (this.transformTemplate !== transformTemplate) {\n      this.transformTemplate = transformTemplate;\n      this.updateTransformTemplate();\n    }\n  };\n\n  MotionValuesMap.prototype.getTransformTemplate = function () {\n    return this.transformTemplate;\n  };\n\n  MotionValuesMap.prototype.updateTransformTemplate = function () {\n    if (this.output) {\n      this.output(\"transform\", this.transformTemplate);\n    }\n  };\n\n  MotionValuesMap.prototype.mount = function (output) {\n    var _this = this;\n\n    this.hasMounted = true;\n    if (output) this.output = output;\n    this.values.forEach(function (value, key) {\n      return _this.bindValueToOutput(key, value);\n    });\n    this.updateTransformTemplate();\n  };\n\n  MotionValuesMap.prototype.unmount = function () {\n    var _this = this;\n\n    this.values.forEach(function (_value, key) {\n      var unsubscribe = _this.unsubscribers.get(key);\n\n      unsubscribe && unsubscribe();\n    });\n  };\n\n  return MotionValuesMap;\n}();\n\nvar specialMotionValueProps = new Set([\"dragOriginX\", \"dragOriginY\"]);\n\nvar useMotionValues = function (props) {\n  var motionValues = useConstant(function () {\n    var map = new MotionValuesMap();\n    /**\r\n     * Loop through every prop and add any detected `MotionValue`s. This is SVG-specific\r\n     * code that should be extracted, perhaps considered hollistically with `useMotionStyles`.\r\n     *\r\n     * <motion.circle cx={motionValue(0)} />\r\n     */\n\n    for (var key in props) {\n      if (isMotionValue(props[key]) && !specialMotionValueProps.has(key)) {\n        map.set(key, props[key]);\n      }\n    }\n\n    return map;\n  });\n  motionValues.setOnUpdate(props.onUpdate);\n  motionValues.setTransformTemplate(props.transformTemplate);\n  return motionValues;\n};\n\nvar session = null;\nvar syncRenderSession = {\n  isOpen: function () {\n    return session !== null;\n  },\n  open: function () {\n    invariant(!session, \"Sync render session already open\");\n    session = [];\n  },\n  flush: function () {\n    invariant(session !== null, \"No sync render session found\");\n    session && session.forEach(function (styler) {\n      return styler.render();\n    });\n    session = null;\n  },\n  push: function (styler) {\n    invariant(session !== null, \"No sync render session found\");\n    session && session.push(styler);\n  }\n};\n/**\r\n * `useEffect` gets resolved bottom-up. We defer some optional functionality to child\r\n * components, so to ensure everything runs correctly we export the ref-binding logic\r\n * to a new component rather than in `useMotionValues`.\r\n */\n\nvar MountComponent = function (_a) {\n  var ref = _a.innerRef,\n      values = _a.values,\n      isStatic = _a.isStatic;\n  useEffect(function () {\n    invariant(ref.current instanceof Element, \"No `ref` found. Ensure components created with `motion.custom` forward refs using `React.forwardRef`\");\n    var domStyler = styler(ref.current, {\n      preparseOutput: false,\n      enableHardwareAcceleration: !isStatic\n    });\n    values.mount(function (key, value) {\n      domStyler.set(key, value);\n\n      if (syncRenderSession.isOpen()) {\n        syncRenderSession.push(domStyler);\n      }\n    });\n    return function () {\n      return values.unmount();\n    };\n  }, []);\n  return null;\n};\n\nvar Mount = memo(MountComponent);\n\nvar createValueResolver = function (resolver) {\n  return function (values) {\n    var resolvedValues = {};\n    values.forEach(function (value, key) {\n      return resolvedValues[key] = resolver(value);\n    });\n    return resolvedValues;\n  };\n};\n\nvar resolveCurrent = createValueResolver(function (value) {\n  return value.get();\n});\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\n\nvar isTransformOriginProp = function (key) {\n  return transformOriginProps.has(key);\n};\n\nvar buildStyleAttr = function (values, styleProp, isStatic) {\n  var motionValueStyles = resolveCurrent(values);\n  var transformTemplate = values.getTransformTemplate();\n\n  if (transformTemplate) {\n    // If `transform` has been manually set as a string, pass that through the template\n    // otherwise pass it forward to Stylefire's style property builder\n    motionValueStyles.transform = styleProp.transform ? transformTemplate({}, styleProp.transform) : transformTemplate;\n  }\n\n  return buildStyleProperty(__assign(__assign({}, styleProp), motionValueStyles), !isStatic);\n};\n\nvar useMotionStyles = function (values, styleProp, isStatic, transformValues) {\n  if (styleProp === void 0) {\n    styleProp = {};\n  }\n\n  var style = {};\n  var prevMotionStyles = useRef({}).current;\n\n  for (var key in styleProp) {\n    var thisStyle = styleProp[key];\n\n    if (isMotionValue(thisStyle)) {\n      // If this is a motion value, add it to our MotionValuesMap\n      values.set(key, thisStyle);\n    } else if (!isStatic && (isTransformProp(key) || isTransformOriginProp(key))) {\n      // Or if it's a transform prop, create a motion value (or update an existing one)\n      // to ensure Stylefire can reconcile all the transform values together.\n      // A further iteration on this would be to create a single styler per component that gets\n      // used in the DOM renderer's buildStyleAttr *and* animations, then we would only\n      // have to convert animating values to `MotionValues` (we could probably remove this entire function).\n      // The only architectural consideration is to allow Stylefire to have elements mounted after\n      // a styler is created.\n      if (!values.has(key)) {\n        // If it doesn't exist as a motion value, create it\n        values.set(key, motionValue(thisStyle));\n      } else {\n        // Otherwise only update it if it's changed from a previous render\n        if (thisStyle !== prevMotionStyles[key]) {\n          var value = values.get(key);\n          value.set(thisStyle);\n        }\n      }\n\n      prevMotionStyles[key] = thisStyle;\n    } else {\n      style[key] = thisStyle;\n    }\n  }\n\n  return transformValues ? transformValues(style) : style;\n};\n\nvar isKeyframesTarget = function (v) {\n  return Array.isArray(v);\n};\n\nvar isCustomValue = function (v) {\n  return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\n};\n\nvar resolveFinalValueInKeyframes = function (v) {\n  // TODO maybe throw if v.length - 1 is placeholder token?\n  return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\n};\n\nvar auto = {\n  test: function (v) {\n    return v === \"auto\";\n  },\n  parse: function (v) {\n    return v;\n  }\n};\nvar dimensionTypes = [number, px, percent, degrees, vw, vh, auto];\n\nvar valueTypes = __spreadArrays(dimensionTypes, [color, complex]);\n\nvar testValueType = function (v) {\n  return function (type) {\n    return type.test(v);\n  };\n};\n\nvar getDimensionValueType = function (v) {\n  return dimensionTypes.find(testValueType(v));\n};\n\nvar getValueType = function (v) {\n  return valueTypes.find(testValueType(v));\n};\n\nvar underDampedSpring = function () {\n  return {\n    type: \"spring\",\n    stiffness: 500,\n    damping: 25,\n    restDelta: 0.5,\n    restSpeed: 10\n  };\n};\n\nvar overDampedSpring = function (to) {\n  return {\n    type: \"spring\",\n    stiffness: 700,\n    damping: to === 0 ? 100 : 35\n  };\n};\n\nvar linearTween = function () {\n  return {\n    ease: \"linear\",\n    duration: 0.3\n  };\n};\n\nvar keyframes = function (values) {\n  return {\n    type: \"keyframes\",\n    duration: 0.8,\n    values: values\n  };\n};\n\nvar defaultTransitions = {\n  x: underDampedSpring,\n  y: underDampedSpring,\n  z: underDampedSpring,\n  rotate: underDampedSpring,\n  rotateX: underDampedSpring,\n  rotateY: underDampedSpring,\n  rotateZ: underDampedSpring,\n  scaleX: overDampedSpring,\n  scaleY: overDampedSpring,\n  scale: overDampedSpring,\n  opacity: linearTween,\n  backgroundColor: linearTween,\n  color: linearTween,\n  default: overDampedSpring\n};\n\nvar getDefaultTransition = function (valueKey, to) {\n  var transitionFactory;\n\n  if (isKeyframesTarget(to)) {\n    transitionFactory = keyframes;\n  } else {\n    transitionFactory = defaultTransitions[valueKey] || defaultTransitions.default;\n  }\n\n  return __assign({\n    to: to\n  }, transitionFactory(to));\n};\n/**\r\n * A Popmotion action that accepts a single `to` prop. When it starts, it immediately\r\n * updates with `to` and then completes. By using this we can compose instant transitions\r\n * in with the same logic that applies `delay` or returns a `Promise` etc.\r\n *\r\n * Accepting `duration` is a little bit of a hack that simply defers the completetion of\r\n * the animation until after the duration finishes. This is for situations when you're **only**\r\n * animating non-animatable values and then setting something on `transitionEnd`. Really\r\n * you want this to fire after the \"animation\" finishes, rather than instantly.\r\n *\r\n * ```\r\n * animate={{\r\n *   display: 'block',\r\n *   transitionEnd: { display: 'none' }\r\n * }}\r\n * ```\r\n */\n\n\nvar just = function (_a) {\n  var to = _a.to,\n      duration = _a.duration;\n  return action(function (_a) {\n    var update = _a.update,\n        complete = _a.complete;\n    update(to);\n    duration ? delay(duration).start({\n      complete: complete\n    }) : complete();\n  });\n};\n\nvar easingDefinitionToFunction = function (definition) {\n  if (Array.isArray(definition)) {\n    // If cubic bezier definition, create bezier curve\n    invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\n    var x1 = definition[0],\n        y1 = definition[1],\n        x2 = definition[2],\n        y2 = definition[3];\n    return cubicBezier(x1, y1, x2, y2);\n  } else if (typeof definition === \"string\") {\n    // Else lookup from table\n    invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\n    return easingLookup[definition];\n  }\n\n  return definition;\n};\n\nvar isEasingArray = function (ease) {\n  return Array.isArray(ease) && typeof ease[0] !== \"number\";\n};\n\nvar isDurationAnimation = function (v) {\n  return v.hasOwnProperty(\"duration\") || v.hasOwnProperty(\"repeatDelay\");\n};\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\n\n\nvar isAnimatable = function (key, value) {\n  // If the list of keys tat might be non-animatable grows, replace with Set\n  if (key === \"zIndex\") return false; // If it's a number or a keyframes array, we can animate it. We might at some point\n  // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\n  // but for now lets leave it like this for performance reasons\n\n  if (typeof value === \"number\" || Array.isArray(value)) return true;\n\n  if (typeof value === \"string\" && // It's animatable if we have a string\n  complex.test(value) && // And it contains numbers and/or colors\n  !value.startsWith(\"url(\") // Unless it starts with \"url(\"\n  ) {\n    return true;\n  }\n\n  return false;\n};\n/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\n\n\nvar secondsToMilliseconds = function (seconds) {\n  return seconds * 1000;\n};\n\nvar transitions = {\n  tween: tween,\n  spring: spring,\n  keyframes: keyframes$1,\n  inertia: inertia,\n  just: just\n};\nvar transitionOptionParser = {\n  tween: function (opts) {\n    if (opts.ease) {\n      var ease = isEasingArray(opts.ease) ? opts.ease[0] : opts.ease;\n      opts.ease = easingDefinitionToFunction(ease);\n    }\n\n    return opts;\n  },\n  keyframes: function (_a) {\n    var from = _a.from,\n        to = _a.to,\n        velocity = _a.velocity,\n        opts = __rest(_a, [\"from\", \"to\", \"velocity\"]);\n\n    if (opts.values && opts.values[0] === null) {\n      var values = __spreadArrays(opts.values);\n\n      values[0] = from;\n      opts.values = values;\n    }\n\n    if (opts.ease) {\n      opts.easings = isEasingArray(opts.ease) ? opts.ease.map(easingDefinitionToFunction) : easingDefinitionToFunction(opts.ease);\n    }\n\n    opts.ease = linear;\n    return opts;\n  }\n};\n\nvar isTransitionDefined = function (_a) {\n  var when = _a.when,\n      delay = _a.delay,\n      delayChildren = _a.delayChildren,\n      staggerChildren = _a.staggerChildren,\n      staggerDirection = _a.staggerDirection,\n      transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\"]);\n\n  return Object.keys(transition).length;\n};\n\nvar getTransitionDefinition = function (key, to, transitionDefinition) {\n  var delay = transitionDefinition ? transitionDefinition.delay : 0; // If no object, return default transition\n  // A better way to handle this would be to deconstruct out all the shared Orchestration props\n  // and see if there's any props remaining\n\n  if (transitionDefinition === undefined || !isTransitionDefined(transitionDefinition)) {\n    return __assign({\n      delay: delay\n    }, getDefaultTransition(key, to));\n  }\n\n  var valueTransitionDefinition = transitionDefinition[key] || transitionDefinition.default || transitionDefinition;\n\n  if (valueTransitionDefinition.type === false) {\n    return {\n      delay: valueTransitionDefinition.hasOwnProperty(\"delay\") ? valueTransitionDefinition.delay : delay,\n      to: isKeyframesTarget(to) ? to[to.length - 1] : to,\n      type: \"just\"\n    };\n  } else if (isKeyframesTarget(to)) {\n    return __assign(__assign({\n      values: to,\n      duration: 0.8,\n      delay: delay,\n      ease: \"linear\"\n    }, valueTransitionDefinition), {\n      // This animation must be keyframes if we're animating through an array\n      type: \"keyframes\"\n    });\n  } else {\n    return __assign({\n      type: \"tween\",\n      to: to,\n      delay: delay\n    }, valueTransitionDefinition);\n  }\n};\n\nvar preprocessOptions = function (type, opts) {\n  return transitionOptionParser[type] ? transitionOptionParser[type](opts) : opts;\n};\n\nvar getAnimation = function (key, value, target, transition) {\n  var origin = value.get();\n  var isOriginAnimatable = isAnimatable(key, origin);\n  var isTargetAnimatable = isAnimatable(key, target); // TODO we could probably improve this check to ensure both values are of the same type -\n  // for instance 100 to #fff. This might live better in Popmotion.\n\n  warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \" + target + \". \\\"\" + origin + \"\\\" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\"); // Parse the `transition` prop and return options for the Popmotion animation\n\n  var _a = getTransitionDefinition(key, target, transition),\n      _b = _a.type,\n      type = _b === void 0 ? \"tween\" : _b,\n      transitionDefinition = __rest(_a, [\"type\"]); // If this is an animatable pair of values, return an animation, otherwise use `just`\n\n\n  var actionFactory = isOriginAnimatable && isTargetAnimatable ? transitions[type] : just;\n  var opts = preprocessOptions(type, __assign({\n    from: origin,\n    velocity: value.getVelocity()\n  }, transitionDefinition)); // Convert duration from Framer Motion's seconds into Popmotion's milliseconds\n\n  if (isDurationAnimation(opts)) {\n    if (opts.duration) {\n      opts.duration = secondsToMilliseconds(opts.duration);\n    }\n\n    if (opts.repeatDelay) {\n      opts.repeatDelay = secondsToMilliseconds(opts.repeatDelay);\n    }\n  }\n\n  return [actionFactory, opts];\n};\n/**\r\n * Start animation on a value. This function completely encapsulates Popmotion-specific logic.\r\n *\r\n * @internal\r\n */\n\n\nfunction startAnimation(key, value, target, _a) {\n  var _b = _a.delay,\n      delay$1 = _b === void 0 ? 0 : _b,\n      transition = __rest(_a, [\"delay\"]);\n\n  return value.start(function (complete) {\n    var activeAnimation;\n\n    var _a = getAnimation(key, value, target, transition),\n        animationFactory = _a[0],\n        _b = _a[1],\n        valueDelay = _b.delay,\n        options = __rest(_b, [\"delay\"]);\n\n    if (valueDelay !== undefined) {\n      delay$1 = valueDelay;\n    }\n\n    var animate = function () {\n      var animation = animationFactory(options); // Bind animation opts to animation\n\n      activeAnimation = animation.start({\n        update: function (v) {\n          return value.set(v);\n        },\n        complete: complete\n      });\n    }; // If we're delaying this animation, only resolve it **after** the delay to\n    // ensure the value's resolve velocity is up-to-date.\n\n\n    if (delay$1) {\n      activeAnimation = delay(secondsToMilliseconds(delay$1)).start({\n        complete: animate\n      });\n    } else {\n      animate();\n    }\n\n    return function () {\n      if (activeAnimation) activeAnimation.stop();\n    };\n  });\n}\n/**\r\n * Get the current value of every `MotionValue`\r\n * @param values -\r\n */\n\n\nvar getCurrent = function (values) {\n  var current = {};\n  values.forEach(function (value, key) {\n    return current[key] = value.get();\n  });\n  return current;\n};\n/**\r\n * Get the current velocity of every `MotionValue`\r\n * @param values -\r\n */\n\n\nvar getVelocity = function (values) {\n  var velocity = {};\n  values.forEach(function (value, key) {\n    return velocity[key] = value.getVelocity();\n  });\n  return velocity;\n};\n/**\r\n * Check if value is a function that returns a `Target`. A generic typeof === 'function'\r\n * check, just helps with typing.\r\n * @param p -\r\n */\n\n\nvar isTargetResolver = function (p) {\n  return typeof p === \"function\";\n};\n/**\r\n * Check if value is a list of variant labels\r\n * @param v -\r\n */\n\n\nvar isVariantLabels = function (v) {\n  return Array.isArray(v);\n};\n/**\r\n * Check if value is a numerical string, ie \"100\" or \"100px\"\r\n */\n\n\nvar isNumericalString = function (v) {\n  return /^\\d*\\.?\\d+$/.test(v);\n};\n/**\r\n * Control animations for a single component\r\n *\r\n * @internal\r\n */\n\n\nvar ValueAnimationControls = function () {\n  function ValueAnimationControls(_a) {\n    var _this = this;\n\n    var values = _a.values,\n        readValueFromSource = _a.readValueFromSource,\n        makeTargetAnimatable = _a.makeTargetAnimatable;\n    /**\r\n     * A reference to the component's latest props. We could probably ditch this in\r\n     * favour to a reference to the `custom` prop now we don't send all props through\r\n     * to target resolvers.\r\n     */\n\n    this.props = {};\n    /**\r\n     * The component's variants, as provided by `variants`\r\n     */\n\n    this.variants = {};\n    /**\r\n     * A set of values that we animate back to when a value is cleared of all overrides.\r\n     */\n\n    this.baseTarget = {};\n    /**\r\n     * A series of target overrides that we can animate to/from when overrides are set/cleared.\r\n     */\n\n    this.overrides = [];\n    /**\r\n     * A series of target overrides as they were originally resolved.\r\n     */\n\n    this.resolvedOverrides = [];\n    /**\r\n     * A Set of currently active override indexes\r\n     */\n\n    this.activeOverrides = new Set();\n    /**\r\n     * A Set of value keys that are currently animating.\r\n     */\n\n    this.isAnimating = new Set();\n    /**\r\n     * Check if the associated `MotionValueMap` has a key with the provided string.\r\n     * Pre-bound to the class so we can provide directly to the `filter` in `checkForNewValues`.\r\n     */\n\n    this.hasValue = function (key) {\n      return !_this.values.has(key);\n    };\n\n    this.values = values;\n    this.readValueFromSource = readValueFromSource;\n    this.makeTargetAnimatable = makeTargetAnimatable;\n    this.values.forEach(function (value, key) {\n      return _this.baseTarget[key] = value.get();\n    });\n  }\n  /**\r\n   * Set the reference to the component's props.\r\n   * @param props -\r\n   */\n\n\n  ValueAnimationControls.prototype.setProps = function (props) {\n    this.props = props;\n  };\n  /**\r\n   * Set the reference to the component's variants\r\n   * @param variants -\r\n   */\n\n\n  ValueAnimationControls.prototype.setVariants = function (variants) {\n    if (variants) this.variants = variants;\n  };\n  /**\r\n   * Set the component's default transition\r\n   * @param transition -\r\n   */\n\n\n  ValueAnimationControls.prototype.setDefaultTransition = function (transition) {\n    if (transition) this.defaultTransition = transition;\n  };\n  /**\r\n   * Set motion values without animation.\r\n   *\r\n   * @param definition -\r\n   * @param isActive -\r\n   */\n\n\n  ValueAnimationControls.prototype.setValues = function (definition, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.isActive,\n        isActive = _c === void 0 ? new Set() : _c,\n        priority = _b.priority;\n\n    var _d = this.resolveVariant(definition),\n        target = _d.target,\n        transitionEnd = _d.transitionEnd;\n\n    target = this.transformValues(__assign(__assign({}, target), transitionEnd));\n    return Object.keys(target).forEach(function (key) {\n      if (isActive.has(key)) return;\n      isActive.add(key);\n\n      if (target) {\n        var targetValue = resolveFinalValueInKeyframes(target[key]);\n\n        if (_this.values.has(key)) {\n          var value = _this.values.get(key);\n\n          value && value.set(targetValue);\n        } else {\n          _this.values.set(key, motionValue(targetValue));\n        }\n\n        if (!priority) _this.baseTarget[key] = targetValue;\n      }\n    });\n  };\n  /**\r\n   * Allows `transformValues` to be set by a component that allows us to\r\n   * transform the values in a given `Target`. This allows Framer Library\r\n   * to extend Framer Motion to animate `Color` variables etc. Currently we have\r\n   * to manually support these extended types here in Framer Motion.\r\n   *\r\n   * @param values -\r\n   */\n\n\n  ValueAnimationControls.prototype.transformValues = function (values) {\n    var transformValues = this.props.transformValues;\n    return transformValues ? transformValues(values) : values;\n  };\n  /**\r\n   * Check a `Target` for new values we haven't animated yet, and add them\r\n   * to the `MotionValueMap`.\r\n   *\r\n   * Currently there's functionality here that is DOM-specific, we should allow\r\n   * this functionality to be injected by the factory that creates DOM-specific\r\n   * components.\r\n   *\r\n   * @param target -\r\n   */\n\n\n  ValueAnimationControls.prototype.checkForNewValues = function (target) {\n    var newValueKeys = Object.keys(target).filter(this.hasValue);\n    var numNewValues = newValueKeys.length;\n    if (!numNewValues) return;\n\n    for (var i = 0; i < numNewValues; i++) {\n      var key = newValueKeys[i];\n      var targetValue = target[key];\n      var value = null; // If this is a keyframes value, we can attempt to use the first value in the\n      // array as that's going to be the first value of the animation anyway\n\n      if (Array.isArray(targetValue)) {\n        value = targetValue[0];\n      } // If it isn't a keyframes or the first keyframes value was set as `null`, read the\n      // value from the DOM. It might be worth investigating whether to check props (for SVG)\n      // or props.style (for HTML) if the value exists there before attempting to read.\n\n\n      if (value === null) {\n        value = this.readValueFromSource(key);\n        invariant(value !== null, \"No initial value for \\\"\" + key + \"\\\" can be inferred. Ensure an initial value for \\\"\" + key + \"\\\" is defined on the component.\");\n      }\n\n      if (typeof value === \"string\" && isNumericalString(value)) {\n        // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\n        value = parseFloat(value);\n      } else if (!getValueType(value) && complex.test(targetValue)) {\n        // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\n        value = complex.getAnimatableNone(targetValue);\n      }\n\n      this.values.set(key, motionValue(value));\n      this.baseTarget[key] = value;\n    }\n  };\n  /**\r\n   * Resolve a variant from its label or resolver into an actual `Target` we can animate to.\r\n   * @param variant -\r\n   */\n\n\n  ValueAnimationControls.prototype.resolveVariant = function (variant) {\n    if (!variant) {\n      return {\n        target: undefined,\n        transition: undefined,\n        transitionEnd: undefined\n      };\n    }\n\n    if (isTargetResolver(variant)) {\n      // resolve current and velocity\n      variant = variant(this.props.custom, getCurrent(this.values), getVelocity(this.values));\n    }\n\n    var _a = variant.transition,\n        transition = _a === void 0 ? this.defaultTransition : _a,\n        transitionEnd = variant.transitionEnd,\n        target = __rest(variant, [\"transition\", \"transitionEnd\"]);\n\n    return {\n      transition: transition,\n      transitionEnd: transitionEnd,\n      target: target\n    };\n  };\n  /**\r\n   * Get the highest active override priority index\r\n   */\n\n\n  ValueAnimationControls.prototype.getHighestPriority = function () {\n    if (!this.activeOverrides.size) return 0;\n    return Math.max.apply(Math, Array.from(this.activeOverrides));\n  };\n  /**\r\n   * Set an override. We add this layer of indirection so if, for instance, a tap gesture\r\n   * starts and overrides a hover gesture, when we clear the tap gesture and fallback to the\r\n   * hover gesture, if that hover gesture has changed in the meantime we can go to that rather\r\n   * than the one that was resolved when the hover gesture animation started.\r\n   *\r\n   * @param definition -\r\n   * @param overrideIndex -\r\n   */\n\n\n  ValueAnimationControls.prototype.setOverride = function (definition, overrideIndex) {\n    this.overrides[overrideIndex] = definition;\n\n    if (this.children) {\n      this.children.forEach(function (child) {\n        return child.setOverride(definition, overrideIndex);\n      });\n    }\n  };\n  /**\r\n   * Start an override animation.\r\n   * @param overrideIndex -\r\n   */\n\n\n  ValueAnimationControls.prototype.startOverride = function (overrideIndex) {\n    var override = this.overrides[overrideIndex];\n\n    if (override) {\n      return this.start(override, {\n        priority: overrideIndex\n      });\n    }\n  };\n  /**\r\n   * Clear an override. We check every value we animated to in this override to see if\r\n   * its present on any lower-priority overrides. If not, we animate it back to its base target.\r\n   * @param overrideIndex -\r\n   */\n\n\n  ValueAnimationControls.prototype.clearOverride = function (overrideIndex) {\n    var _this = this;\n\n    if (this.children) {\n      this.children.forEach(function (child) {\n        return child.clearOverride(overrideIndex);\n      });\n    }\n\n    var override = this.overrides[overrideIndex];\n    if (!override) return;\n    this.activeOverrides.delete(overrideIndex);\n    var highest = this.getHighestPriority();\n    this.resetIsAnimating();\n\n    if (highest) {\n      var highestOverride = this.overrides[highest];\n      highestOverride && this.startOverride(highest);\n    } // Figure out which remaining values were affected by the override and animate those\n\n\n    var overrideTarget = this.resolvedOverrides[overrideIndex];\n    if (!overrideTarget) return;\n    var remainingValues = {};\n\n    for (var key in this.baseTarget) {\n      if (overrideTarget[key] !== undefined) {\n        remainingValues[key] = this.baseTarget[key];\n      }\n    }\n\n    this.onStart();\n    this.animate(remainingValues).then(function () {\n      return _this.onComplete();\n    });\n  };\n  /**\r\n   * Apply a target/variant without any animation\r\n   */\n\n\n  ValueAnimationControls.prototype.apply = function (definition) {\n    if (Array.isArray(definition)) {\n      return this.applyVariantLabels(definition);\n    } else if (typeof definition === \"string\") {\n      return this.applyVariantLabels([definition]);\n    } else {\n      this.setValues(definition);\n    }\n  };\n  /**\r\n   * Apply variant labels without animation\r\n   */\n\n\n  ValueAnimationControls.prototype.applyVariantLabels = function (variantLabelList) {\n    var _this = this;\n\n    var isActive = new Set();\n\n    var reversedList = __spreadArrays(variantLabelList).reverse();\n\n    reversedList.forEach(function (key) {\n      var _a = _this.resolveVariant(_this.variants[key]),\n          target = _a.target,\n          transitionEnd = _a.transitionEnd;\n\n      if (transitionEnd) {\n        _this.setValues(transitionEnd, {\n          isActive: isActive\n        });\n      }\n\n      if (target) {\n        _this.setValues(target, {\n          isActive: isActive\n        });\n      }\n\n      if (_this.children && _this.children.size) {\n        _this.children.forEach(function (child) {\n          return child.applyVariantLabels(variantLabelList);\n        });\n      }\n    });\n  };\n\n  ValueAnimationControls.prototype.start = function (definition, opts) {\n    var _this = this;\n\n    if (opts === void 0) {\n      opts = {};\n    }\n\n    if (opts.priority) {\n      this.activeOverrides.add(opts.priority);\n    }\n\n    this.resetIsAnimating(opts.priority);\n    var animation;\n\n    if (isVariantLabels(definition)) {\n      animation = this.animateVariantLabels(definition, opts);\n    } else if (typeof definition === \"string\") {\n      animation = this.animateVariant(definition, opts);\n    } else {\n      animation = this.animate(definition, opts);\n    }\n\n    this.onStart();\n    return animation.then(function () {\n      return _this.onComplete();\n    });\n  };\n\n  ValueAnimationControls.prototype.animate = function (animationDefinition, _a) {\n    var _this = this;\n\n    var _b = _a === void 0 ? {} : _a,\n        _c = _b.delay,\n        delay = _c === void 0 ? 0 : _c,\n        _d = _b.priority,\n        priority = _d === void 0 ? 0 : _d,\n        transitionOverride = _b.transitionOverride;\n\n    var _e = this.resolveVariant(animationDefinition),\n        target = _e.target,\n        transition = _e.transition,\n        transitionEnd = _e.transitionEnd;\n\n    if (transitionOverride) {\n      transition = transitionOverride;\n    }\n\n    if (!target) return Promise.resolve();\n    target = this.transformValues(target);\n\n    if (transitionEnd) {\n      transitionEnd = this.transformValues(transitionEnd);\n    }\n\n    this.checkForNewValues(target);\n\n    if (this.makeTargetAnimatable) {\n      var animatable = this.makeTargetAnimatable(target, transitionEnd);\n      target = animatable.target;\n      transitionEnd = animatable.transitionEnd;\n    }\n\n    if (priority) {\n      this.resolvedOverrides[priority] = target;\n    }\n\n    this.checkForNewValues(target);\n    var animations = [];\n\n    for (var key in target) {\n      var value = this.values.get(key);\n      if (!value || !target || target[key] === undefined) continue;\n      var valueTarget = target[key];\n\n      if (!priority) {\n        this.baseTarget[key] = resolveFinalValueInKeyframes(valueTarget);\n      }\n\n      if (this.isAnimating.has(key)) continue;\n      this.isAnimating.add(key);\n      animations.push(startAnimation(key, value, valueTarget, __assign({\n        delay: delay\n      }, transition)));\n    }\n\n    var allAnimations = Promise.all(animations);\n    return transitionEnd ? allAnimations.then(function () {\n      _this.setValues(transitionEnd, {\n        priority: priority\n      });\n    }) : allAnimations;\n  };\n\n  ValueAnimationControls.prototype.animateVariantLabels = function (variantLabels, opts) {\n    var _this = this;\n\n    var animations = __spreadArrays(variantLabels).reverse().map(function (label) {\n      return _this.animateVariant(label, opts);\n    });\n\n    return Promise.all(animations);\n  };\n\n  ValueAnimationControls.prototype.animateVariant = function (variantLabel, opts) {\n    var _this = this;\n\n    var when = false;\n    var delayChildren = 0;\n    var staggerChildren = 0;\n    var staggerDirection = 1;\n    var priority = opts && opts.priority || 0;\n    var variant = this.variants[variantLabel];\n    var getAnimations = variant ? function () {\n      return _this.animate(variant, opts);\n    } : function () {\n      return Promise.resolve();\n    };\n    var getChildrenAnimations = this.children ? function () {\n      return _this.animateChildren(variantLabel, delayChildren, staggerChildren, staggerDirection, priority);\n    } : function () {\n      return Promise.resolve();\n    };\n\n    if (variant && this.children) {\n      var transition = this.resolveVariant(variant).transition;\n\n      if (transition) {\n        when = transition.when || when;\n        delayChildren = transition.delayChildren || delayChildren;\n        staggerChildren = transition.staggerChildren || staggerChildren;\n        staggerDirection = transition.staggerDirection || staggerDirection;\n      }\n    }\n\n    if (when) {\n      var _a = when === \"beforeChildren\" ? [getAnimations, getChildrenAnimations] : [getChildrenAnimations, getAnimations],\n          first = _a[0],\n          last = _a[1];\n\n      return first().then(last);\n    } else {\n      return Promise.all([getAnimations(), getChildrenAnimations()]);\n    }\n  };\n\n  ValueAnimationControls.prototype.animateChildren = function (variantLabel, delayChildren, staggerChildren, staggerDirection, priority) {\n    if (delayChildren === void 0) {\n      delayChildren = 0;\n    }\n\n    if (staggerChildren === void 0) {\n      staggerChildren = 0;\n    }\n\n    if (staggerDirection === void 0) {\n      staggerDirection = 1;\n    }\n\n    if (priority === void 0) {\n      priority = 0;\n    }\n\n    if (!this.children) {\n      return Promise.resolve();\n    }\n\n    var animations = [];\n    var maxStaggerDuration = (this.children.size - 1) * staggerChildren;\n    var generateStaggerDuration = staggerDirection === 1 ? function (i) {\n      return i * staggerChildren;\n    } : function (i) {\n      return maxStaggerDuration - i * staggerChildren;\n    };\n    Array.from(this.children).forEach(function (childControls, i) {\n      var animation = childControls.animateVariant(variantLabel, {\n        priority: priority,\n        delay: delayChildren + generateStaggerDuration(i)\n      });\n      animations.push(animation);\n    });\n    return Promise.all(animations);\n  };\n\n  ValueAnimationControls.prototype.onStart = function () {\n    var onAnimationStart = this.props.onAnimationStart;\n    onAnimationStart && onAnimationStart();\n  };\n\n  ValueAnimationControls.prototype.onComplete = function () {\n    var onAnimationComplete = this.props.onAnimationComplete;\n    onAnimationComplete && onAnimationComplete();\n  };\n\n  ValueAnimationControls.prototype.checkOverrideIsAnimating = function (priority) {\n    var numOverrides = this.overrides.length;\n\n    for (var i = priority + 1; i < numOverrides; i++) {\n      var resolvedOverride = this.resolvedOverrides[i];\n\n      if (resolvedOverride) {\n        for (var key in resolvedOverride) {\n          this.isAnimating.add(key);\n        }\n      }\n    }\n  };\n\n  ValueAnimationControls.prototype.resetIsAnimating = function (priority) {\n    if (priority === void 0) {\n      priority = 0;\n    }\n\n    this.isAnimating.clear(); // If this isn't the highest priority gesture, block the animation\n    // of anything that's currently being animated\n\n    if (priority < this.getHighestPriority()) {\n      this.checkOverrideIsAnimating(priority);\n    }\n\n    if (this.children) {\n      this.children.forEach(function (child) {\n        return child.resetIsAnimating(priority);\n      });\n    }\n  };\n\n  ValueAnimationControls.prototype.stop = function () {\n    this.values.forEach(function (value) {\n      return value.stop();\n    });\n  };\n  /**\r\n   * Add the controls of a child component.\r\n   * @param controls -\r\n   */\n\n\n  ValueAnimationControls.prototype.addChild = function (controls) {\n    if (!this.children) {\n      this.children = new Set();\n    }\n\n    this.children.add(controls); // We set child overrides when `setOverride` is called, but also have to do it here\n    // as the first time `setOverride` is called all the children might not have been added yet.\n\n    this.overrides.forEach(function (override, i) {\n      override && controls.setOverride(override, i);\n    });\n  };\n\n  ValueAnimationControls.prototype.removeChild = function (controls) {\n    if (!this.children) {\n      return;\n    }\n\n    this.children.delete(controls);\n  };\n\n  ValueAnimationControls.prototype.resetChildren = function () {\n    if (this.children) this.children.clear();\n  };\n\n  return ValueAnimationControls;\n}();\n/**\r\n * Use callback either only on the initial render or on all renders. In concurrent mode\r\n * the \"initial\" render might run multiple times\r\n *\r\n * @param callback - Callback to run\r\n * @param isInitialOnly - Set to `true` to only run on initial render, or `false` for all renders. Defaults to `false`.\r\n *\r\n * @public\r\n */\n\n\nfunction useInitialOrEveryRender(callback, isInitialOnly) {\n  if (isInitialOnly === void 0) {\n    isInitialOnly = false;\n  }\n\n  var isInitialRender = useRef(true);\n\n  if (!isInitialOnly || isInitialOnly && isInitialRender.current) {\n    callback();\n  }\n\n  isInitialRender.current = false;\n}\n/**\r\n * Control animations on one or more components.\r\n *\r\n * @public\r\n */\n\n\nvar AnimationControls = function () {\n  function AnimationControls() {\n    /**\r\n     * Track whether the host component has mounted.\r\n     *\r\n     * @internal\r\n     */\n    this.hasMounted = false;\n    /**\r\n     * Pending animations that are started before a component is mounted.\r\n     *\r\n     * @internal\r\n     */\n\n    this.pendingAnimations = [];\n    /**\r\n     * A collection of linked component animation controls.\r\n     *\r\n     * @internal\r\n     */\n\n    this.componentControls = new Set();\n  }\n  /**\r\n   * Set variants on this and all child components.\r\n   *\r\n   * @param variants - The variants to set\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.setVariants = function (variants) {\n    this.variants = variants;\n    this.componentControls.forEach(function (controls) {\n      return controls.setVariants(variants);\n    });\n  };\n  /**\r\n   * Set a default transition on this and all child components\r\n   *\r\n   * @param transition - The default transition to set\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.setDefaultTransition = function (transition) {\n    this.defaultTransition = transition;\n    this.componentControls.forEach(function (controls) {\n      return controls.setDefaultTransition(transition);\n    });\n  };\n  /**\r\n   * Subscribes a component's animation controls to this.\r\n   *\r\n   * @param controls - The controls to subscribe\r\n   * @returns An unsubscribe function.\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.subscribe = function (controls) {\n    var _this = this;\n\n    this.componentControls.add(controls);\n    if (this.variants) controls.setVariants(this.variants);\n    if (this.defaultTransition) controls.setDefaultTransition(this.defaultTransition);\n    return function () {\n      return _this.componentControls.delete(controls);\n    };\n  };\n  /**\r\n   * Starts an animation on all linked components.\r\n   *\r\n   * @remarks\r\n   *\r\n   * ```jsx\r\n   * controls.start(\"variantLabel\")\r\n   * controls.start({\r\n   *   x: 0,\r\n   *   transition: { duration: 1 }\r\n   * })\r\n   * ```\r\n   *\r\n   * @param definition - Properties or variant label to animate to\r\n   * @param transition - Optional `transtion` to apply to a variant\r\n   * @returns - A `Promise` that resolves when all animations have completed.\r\n   *\r\n   * @public\r\n   */\n\n\n  AnimationControls.prototype.start = function (definition, transitionOverride) {\n    var _this = this;\n\n    if (this.hasMounted) {\n      var animations_1 = [];\n      this.componentControls.forEach(function (controls) {\n        var animation = controls.start(definition, {\n          transitionOverride: transitionOverride\n        });\n        animations_1.push(animation);\n      });\n      return Promise.all(animations_1);\n    } else {\n      return new Promise(function (resolve) {\n        _this.pendingAnimations.push({\n          animation: [definition, transitionOverride],\n          resolve: resolve\n        });\n      });\n    }\n  };\n  /**\r\n   * Instantly set to a set of properties or a variant.\r\n   *\r\n   * ```jsx\r\n   * // With properties\r\n   * controls.set({ opacity: 0 })\r\n   *\r\n   * // With variants\r\n   * controls.set(\"hidden\")\r\n   * ```\r\n   *\r\n   * @internalremarks\r\n   * We could perform a similar trick to `.start` where this can be called before mount\r\n   * and we maintain a list of of pending actions that get applied on mount. But the\r\n   * expectation of `set` is that it happens synchronously and this would be difficult\r\n   * to do before any children have even attached themselves. It's also poor practise\r\n   * and we should discourage render-synchronous `.start` calls rather than lean into this.\r\n   *\r\n   * @public\r\n   */\n\n\n  AnimationControls.prototype.set = function (definition) {\n    invariant(this.hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\n    return this.componentControls.forEach(function (controls) {\n      return controls.apply(definition);\n    });\n  };\n  /**\r\n   * Stops animations on all linked components.\r\n   *\r\n   * ```jsx\r\n   * controls.stop()\r\n   * ```\r\n   *\r\n   * @public\r\n   */\n\n\n  AnimationControls.prototype.stop = function () {\n    this.componentControls.forEach(function (controls) {\n      return controls.stop();\n    });\n  };\n  /**\r\n   * Initialises the animation controls.\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.mount = function () {\n    var _this = this;\n\n    this.hasMounted = true;\n    this.pendingAnimations.forEach(function (_a) {\n      var animation = _a.animation,\n          resolve = _a.resolve;\n      return _this.start.apply(_this, animation).then(resolve);\n    });\n  };\n  /**\r\n   * Stops all child animations when the host component unmounts.\r\n   *\r\n   * @internal\r\n   */\n\n\n  AnimationControls.prototype.unmount = function () {\n    this.hasMounted = false;\n    this.stop();\n  };\n\n  return AnimationControls;\n}();\n/**\r\n * @internal\r\n */\n\n\nvar animationControls = function () {\n  return new AnimationControls();\n};\n\nvar PresenceContext = createContext(null);\n/**\r\n * @internal\r\n */\n\nvar MotionContext = createContext({\n  static: false\n});\n\nvar isVariantLabel = function (v) {\n  return typeof v === \"string\" || Array.isArray(v);\n};\n\nvar isAnimationControls = function (v) {\n  return v instanceof AnimationControls;\n};\n/**\r\n * Set up the context for children motion components.\r\n *\r\n * We also use this opportunity to apply `initial` values\r\n */\n\n\nvar useMotionContext = function (parentContext, controls, values, isStatic, _a) {\n  if (isStatic === void 0) {\n    isStatic = false;\n  }\n\n  var initial = _a.initial,\n      animate = _a.animate,\n      variants = _a.variants,\n      whileTap = _a.whileTap,\n      whileHover = _a.whileHover;\n\n  var _b;\n\n  var presenceContext = useContext(PresenceContext); // Override initial with that from a parent context, if defined\n\n  if (((_b = presenceContext) === null || _b === void 0 ? void 0 : _b.initial) !== undefined) {\n    initial = presenceContext.initial;\n  }\n\n  var initialState;\n\n  if (initial === false && !isAnimationControls(animate)) {\n    initialState = animate;\n  } else if (typeof initial !== \"boolean\") {\n    initialState = initial;\n  } // Track mounted status so children can detect whether they were present during their\n  // parent's first render\n\n\n  var hasMounted = useRef(false); // We propagate this component's ValueAnimationControls *if* we're being provided variants,\n  // if we're being used to control variants, or if we're being passed animation controls.\n  // Otherwise this component should be \"invisible\" to variant propagation. This is a slight concession\n  // to Framer X where every `Frame` is a `motion` component and it might be if we change that in the future\n  // that this restriction is removed.\n\n  var shouldPropagateControls = variants || isVariantLabel(animate) || isVariantLabel(whileTap) || isVariantLabel(whileHover) || isAnimationControls(animate); // If this component's `initial` prop is a variant label, propagate it. Otherwise pass the parent's.\n\n  var targetInitial = isVariantLabel(initialState) ? initialState : parentContext.initial; // If this is a variant tree we need to propagate the `animate` prop in case new children are added after\n  // the tree initially animates.\n\n  var targetAnimate = isVariantLabel(animate) ? animate : parentContext.animate; // Only allow `initial` to trigger context re-renders if this is a `static` component (ie we're on the Framer canvas)\n  // or in another non-animation/interaction environment.\n\n  var initialDependency = isStatic ? targetInitial : null; // Only allow `animate` to trigger context re-renders if it's a variant label. If this is an array of\n  // variant labels there's probably an optimisation to deep-compare but it might be an over-optimisation.\n  // We want to do this as we rely on React's component rendering order each render cycle to determine\n  // the new order of any child components for the `staggerChildren` functionality.\n\n  var animateDependency = shouldPropagateControls && isVariantLabel(targetAnimate) ? targetAnimate : null; // The context to provide to the child. We `useMemo` because although `controls` and `initial` are\n  // unlikely to change, by making the context an object it'll be considered a new value every render.\n  // So all child motion components will re-render as a result.\n\n  var context = useMemo(function () {\n    return {\n      controls: shouldPropagateControls ? controls : parentContext.controls,\n      initial: targetInitial,\n      animate: targetAnimate,\n      values: values,\n      hasMounted: hasMounted,\n      isReducedMotion: parentContext.isReducedMotion\n    };\n  }, [initialDependency, animateDependency, parentContext.isReducedMotion]); // Update the `static` property every render. This is unlikely to change but also essentially free.\n\n  context.static = isStatic; // Set initial state. If this is a static component (ie in Framer canvas), respond to updates\n  // in `initial`.\n\n  useInitialOrEveryRender(function () {\n    var initialToApply = initialState || parentContext.initial;\n    initialToApply && controls.apply(initialToApply);\n  }, !isStatic);\n  useEffect(function () {\n    hasMounted.current = true;\n  }, []);\n  return context;\n};\n/**\r\n * Creates an imperative set of controls to trigger animations.\r\n *\r\n * This allows a consolidated, uniform API for animations, to be triggered by other APIs like the `animate` prop, or the gesture handlers.\r\n *\r\n * @param values\r\n * @param props\r\n * @param ref\r\n * @param subscribeToParentControls\r\n *\r\n * @internal\r\n */\n\n\nfunction useValueAnimationControls(config, props, subscribeToParentControls) {\n  var variants = props.variants,\n      transition = props.transition;\n  var parentControls = useContext(MotionContext).controls;\n  var presenceContext = useContext(PresenceContext);\n  var controls = useConstant(function () {\n    return new ValueAnimationControls(config);\n  }); // Reset and resubscribe children every render to ensure stagger order is correct\n\n  if (!presenceContext || presenceContext.isPresent) {\n    controls.resetChildren();\n    controls.setProps(props);\n    controls.setVariants(variants);\n    controls.setDefaultTransition(transition);\n  } // We have to subscribe to the parent controls within a useEffect rather than during render,\n  // as\n\n\n  useEffect(function () {\n    if (subscribeToParentControls && parentControls) {\n      parentControls.addChild(controls);\n    }\n  });\n  useEffect(function () {\n    return function () {\n      // Remove reference to onAnimationComplete from controls. All the MotionValues\n      // are unsubscribed from this component separately. We let animations run out\n      // as they might be animating other components.\n      var onAnimationComplete = props.onAnimationComplete,\n          unmountProps = __rest(props, [\"onAnimationComplete\"]);\n\n      controls.setProps(unmountProps);\n      parentControls && parentControls.removeChild(controls);\n    };\n  }, []);\n  return controls;\n}\n\nvar checkShouldInheritVariant = function (_a) {\n  var animate = _a.animate,\n      variants = _a.variants,\n      _b = _a.inherit,\n      inherit = _b === void 0 ? true : _b;\n  return inherit && !!variants && (!animate || animate instanceof AnimationControls);\n};\n/**\r\n * Uses the ref that is passed in, or creates a new one\r\n * @param external - External ref\r\n * @internal\r\n */\n\n\nfunction useExternalRef(externalRef) {\n  // We're conditionally calling `useRef` here which is sort of naughty as hooks\n  // shouldn't be called conditionally. However, Framer Motion will break if this\n  // condition changes anyway. It might be possible to use an invariant here to\n  // make it explicit, but I expect changing `ref` is not normal behaviour.\n  var ref = !externalRef || typeof externalRef === \"function\" ? useRef(null) : externalRef; // Handle `ref` functions. Again, calling the hook conditionally is kind of naughty\n  // but `ref` types changing between renders would break Motion anyway. If we receive\n  // bug reports about this, we should track the provided ref and throw an invariant\n  // rather than move the conditional to inside the useEffect as this will be fired\n  // for every Frame component within Framer.\n\n  if (externalRef && typeof externalRef === \"function\") {\n    useEffect(function () {\n      externalRef(ref.current);\n      return function () {\n        return externalRef(null);\n      };\n    }, []);\n  }\n\n  return ref;\n}\n/**\r\n * @internal\r\n */\n\n\nvar createMotionComponent = function (_a) {\n  var getValueControlsConfig = _a.getValueControlsConfig,\n      loadFunctionalityComponents = _a.loadFunctionalityComponents,\n      renderComponent = _a.renderComponent;\n\n  function MotionComponent(props, externalRef) {\n    var ref = useExternalRef(externalRef);\n    var parentContext = useContext(MotionContext);\n    var isStatic = parentContext.static || props.static || false;\n    var values = useMotionValues(props);\n    var style = useMotionStyles(values, props.style, isStatic, props.transformValues);\n    var shouldInheritVariant = checkShouldInheritVariant(props);\n    var controlsConfig = useConstant(function () {\n      return getValueControlsConfig(ref, values);\n    });\n    var controls = useValueAnimationControls(controlsConfig, props, shouldInheritVariant);\n    var context = useMotionContext(parentContext, controls, values, isStatic, props);\n    var functionality = isStatic ? null : loadFunctionalityComponents(ref, values, props, parentContext, controls, shouldInheritVariant);\n    var renderedComponent = renderComponent(ref, style, values, props, isStatic);\n    return createElement(Fragment, null, createElement(MotionContext.Provider, {\n      value: context\n    }, renderedComponent), createElement(Fragment, null, createElement(Mount, {\n      innerRef: ref,\n      values: values,\n      isStatic: isStatic\n    }), functionality));\n  }\n\n  return forwardRef(MotionComponent);\n};\n/**\r\n * @internal\r\n */\n\n\nvar htmlElements = [\"a\", \"abbr\", \"address\", \"area\", \"article\", \"aside\", \"audio\", \"b\", \"base\", \"bdi\", \"bdo\", \"big\", \"blockquote\", \"body\", \"br\", \"button\", \"canvas\", \"caption\", \"cite\", \"code\", \"col\", \"colgroup\", \"data\", \"datalist\", \"dd\", \"del\", \"details\", \"dfn\", \"dialog\", \"div\", \"dl\", \"dt\", \"em\", \"embed\", \"fieldset\", \"figcaption\", \"figure\", \"footer\", \"form\", \"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\", \"head\", \"header\", \"hgroup\", \"hr\", \"html\", \"i\", \"iframe\", \"img\", \"input\", \"ins\", \"kbd\", \"keygen\", \"label\", \"legend\", \"li\", \"link\", \"main\", \"map\", \"mark\", \"menu\", \"menuitem\", \"meta\", \"meter\", \"nav\", \"noscript\", \"object\", \"ol\", \"optgroup\", \"option\", \"output\", \"p\", \"param\", \"picture\", \"pre\", \"progress\", \"q\", \"rp\", \"rt\", \"ruby\", \"s\", \"samp\", \"script\", \"section\", \"select\", \"small\", \"source\", \"span\", \"strong\", \"style\", \"sub\", \"summary\", \"sup\", \"table\", \"tbody\", \"td\", \"textarea\", \"tfoot\", \"th\", \"thead\", \"time\", \"title\", \"tr\", \"track\", \"u\", \"ul\", \"var\", \"video\", \"wbr\", \"webview\"];\n/**\r\n * @internal\r\n */\n\nvar svgElements = [\"animate\", \"circle\", \"clipPath\", \"defs\", \"desc\", \"ellipse\", \"feBlend\", \"feColorMatrix\", \"feComponentTransfer\", \"feComposite\", \"feConvolveMatrix\", \"feDiffuseLighting\", \"feDisplacementMap\", \"feDistantLight\", \"feDropShadow\", \"feFlood\", \"feFuncA\", \"feFuncB\", \"feFuncG\", \"feFuncR\", \"feGaussianBlur\", \"feImage\", \"feMerge\", \"feMergeNode\", \"feMorphology\", \"feOffset\", \"fePointLight\", \"feSpecularLighting\", \"feSpotLight\", \"feTile\", \"feTurbulence\", \"filter\", \"foreignObject\", \"g\", \"image\", \"line\", \"linearGradient\", \"marker\", \"mask\", \"metadata\", \"path\", \"pattern\", \"polygon\", \"polyline\", \"radialGradient\", \"rect\", \"stop\", \"svg\", \"switch\", \"symbol\", \"text\", \"textPath\", \"tspan\", \"use\", \"view\"];\n/**\r\n * @internal\r\n */\n\nvar MotionPluginContext = createContext({\n  transformPagePoint: function (p) {\n    return p;\n  }\n});\n/**\r\n * @remarks For now I think this should remain a private API for our own use\r\n * until we can figure out a nicer way of allowing people to add these\r\n *\r\n * @internal\r\n */\n\nfunction MotionPlugins(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  var pluginContext = useContext(MotionPluginContext);\n  var value = useRef(__assign({}, pluginContext)).current; // Mutative to prevent triggering rerenders in all listening\n  // components every time this component renders\n\n  for (var key in props) {\n    value[key] = props[key];\n  }\n\n  return createElement(MotionPluginContext.Provider, {\n    value: value\n  }, children);\n}\n\nfunction useUnmountEffect(callback) {\n  return useEffect(function () {\n    return function () {\n      return callback();\n    };\n  }, []);\n}\n\nfunction addDomEvent(target, eventName, handler, options) {\n  if (!handler) return;\n  target.addEventListener(eventName, handler, options);\n  return function () {\n    return target.removeEventListener(eventName, handler, options);\n  };\n}\n/**\r\n * Attaches an event listener directly to the provided DOM element.\r\n *\r\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\r\n * event handlers.\r\n *\r\n * ```jsx\r\n * const ref = useRef(null)\r\n *\r\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\r\n *\r\n * return <div ref={ref} />\r\n * ```\r\n *\r\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\r\n * @param eventName - Name of the event you want listen for.\r\n * @param handler - Function to fire when receiving the event.\r\n * @param options - Options to pass to `Event.addEventListener`.\r\n *\r\n * @public\r\n */\n\n\nfunction useDomEvent(ref, eventName, handler, options) {\n  useEffect(function () {\n    var element = ref.current;\n\n    if (handler && element) {\n      return addDomEvent(element, eventName, handler, options);\n    }\n  }, [ref, eventName, handler, options]);\n}\n\nfunction isMouseEvent(event) {\n  // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\n  if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\n    return !!(event.pointerType === \"mouse\");\n  }\n\n  return event instanceof MouseEvent;\n}\n\nfunction isTouchEvent(event) {\n  var hasTouches = !!event.touches;\n  return hasTouches;\n}\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\n\n\nfunction filterPrimaryPointer(eventHandler) {\n  if (!eventHandler) return undefined;\n  return function (event) {\n    var isMouseEvent = event instanceof MouseEvent;\n    var isPrimaryPointer = !isMouseEvent || isMouseEvent && event.button === 0;\n\n    if (isPrimaryPointer) {\n      eventHandler(event);\n    }\n  };\n}\n\nvar defaultPagePoint = {\n  pageX: 0,\n  pageY: 0\n};\n\nfunction pointFromTouch(e) {\n  var primaryTouch = e.touches[0] || e.changedTouches[0];\n\n  var _a = primaryTouch || defaultPagePoint,\n      pageX = _a.pageX,\n      pageY = _a.pageY;\n\n  return {\n    x: pageX,\n    y: pageY\n  };\n}\n\nfunction pointFromMouse(_a) {\n  var _b = _a.pageX,\n      pageX = _b === void 0 ? 0 : _b,\n      _c = _a.pageY,\n      pageY = _c === void 0 ? 0 : _c;\n  return {\n    x: pageX,\n    y: pageY\n  };\n}\n\nfunction extractEventInfo(event) {\n  return {\n    point: isTouchEvent(event) ? pointFromTouch(event) : pointFromMouse(event)\n  };\n}\n\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\n  if (shouldFilterPrimaryPointer === void 0) {\n    shouldFilterPrimaryPointer = false;\n  }\n\n  if (!handler) return;\n\n  var listener = function (event) {\n    return handler(event, extractEventInfo(event));\n  };\n\n  return shouldFilterPrimaryPointer ? filterPrimaryPointer(listener) : listener;\n};\n\nvar isBrowser = typeof window !== \"undefined\"; // We check for event support via functions in case they've been mocked by a testing suite.\n\nvar supportsPointerEvents = function () {\n  return isBrowser && window.onpointerdown === null;\n};\n\nvar supportsTouchEvents = function () {\n  return isBrowser && window.ontouchstart === null;\n};\n\nvar supportsMouseEvents = function () {\n  return isBrowser && window.onmousedown === null;\n};\n\nvar mouseEventNames = {\n  pointerdown: \"mousedown\",\n  pointermove: \"mousemove\",\n  pointerup: \"mouseup\",\n  pointercancel: \"mousecancel\",\n  pointerover: \"mouseover\",\n  pointerout: \"mouseout\",\n  pointerenter: \"mouseenter\",\n  pointerleave: \"mouseleave\"\n};\nvar touchEventNames = {\n  pointerdown: \"touchstart\",\n  pointermove: \"touchmove\",\n  pointerup: \"touchend\",\n  pointercancel: \"touchcancel\"\n};\n\nfunction getPointerEventName(name) {\n  if (supportsPointerEvents()) {\n    return name;\n  } else if (supportsTouchEvents()) {\n    return touchEventNames[name];\n  } else if (supportsMouseEvents()) {\n    return mouseEventNames[name];\n  }\n\n  return name;\n}\n\nfunction addPointerEvent(target, eventName, handler, options) {\n  return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n\nfunction usePointerEvent(ref, eventName, handler, options) {\n  return useDomEvent(ref, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\n}\n/** @public */\n\n\nvar Point;\n\n(function (Point) {\n  /** @beta */\n  Point.subtract = function (a, b) {\n    return {\n      x: a.x - b.x,\n      y: a.y - b.y\n    };\n  };\n  /** @beta */\n\n\n  Point.relativeTo = function (idOrElem) {\n    var elem;\n\n    var getElem = function () {\n      // Caching element here could be leaky because of React lifecycle\n      if (elem !== undefined) return elem;\n\n      if (typeof idOrElem === \"string\") {\n        elem = document.getElementById(idOrElem);\n      } else {\n        elem = idOrElem;\n      }\n\n      return elem;\n    };\n\n    return function (_a) {\n      var x = _a.x,\n          y = _a.y;\n      var localElem = getElem();\n      if (!localElem) return undefined;\n      var rect = localElem.getBoundingClientRect();\n      return {\n        x: x - rect.left - window.scrollX,\n        y: y - rect.top - window.scrollY\n      };\n    };\n  };\n})(Point || (Point = {}));\n\nvar isViewportScrollBlocked = false;\nvar isBrowser$1 = typeof window !== \"undefined\";\n\nif (isBrowser$1) {\n  document.addEventListener(\"touchmove\", function (event) {\n    if (isViewportScrollBlocked) {\n      event.preventDefault();\n    }\n  }, {\n    passive: false\n  });\n}\n\nvar blockViewportScroll = function () {\n  return isViewportScrollBlocked = true;\n};\n\nvar unblockViewportScroll = function () {\n  return isViewportScrollBlocked = false;\n};\n/**\r\n * @internal\r\n */\n\n\nvar PanSession = function () {\n  function PanSession(event, handlers, _a) {\n    var _this = this;\n\n    var transformPagePoint = (_a === void 0 ? {} : _a).transformPagePoint;\n    /**\r\n     * @internal\r\n     */\n\n    this.startEvent = null;\n    /**\r\n     * @internal\r\n     */\n\n    this.lastMoveEvent = null;\n    /**\r\n     * @internal\r\n     */\n\n    this.lastMoveEventInfo = null;\n    /**\r\n     * @internal\r\n     */\n\n    this.handlers = {};\n\n    this.updatePoint = function () {\n      if (!(_this.lastMoveEvent && _this.lastMoveEventInfo)) return;\n      var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\n      var isPanStarted = _this.startEvent !== null; // Only start panning if the offset is larger than 3 pixels. If we make it\n      // any larger than this we'll want to reset the pointer history\n      // on the first update to avoid visual snapping to the cursoe.\n\n      var isDistancePastThreshold = distance(info.offset, {\n        x: 0,\n        y: 0\n      }) >= 3;\n      if (!isPanStarted && !isDistancePastThreshold) return;\n      var point = info.point;\n      var timestamp = getFrameData().timestamp;\n\n      _this.history.push(__assign(__assign({}, point), {\n        timestamp: timestamp\n      }));\n\n      var _a = _this.handlers,\n          onStart = _a.onStart,\n          onMove = _a.onMove;\n\n      if (!isPanStarted) {\n        onStart && onStart(_this.lastMoveEvent, info);\n        _this.startEvent = _this.lastMoveEvent;\n      }\n\n      onMove && onMove(_this.lastMoveEvent, info);\n    }; // If we have more than one touch, don't start detecting this gesture\n\n\n    if (isTouchEvent(event) && event.touches.length > 1) return;\n    this.handlers = handlers;\n    this.transformPagePoint = transformPagePoint;\n    var info = extractEventInfo(event);\n    var initialInfo = transformPoint(info, this.transformPagePoint);\n    var point = initialInfo.point;\n    var timestamp = getFrameData().timestamp;\n    this.history = [__assign(__assign({}, point), {\n      timestamp: timestamp\n    })];\n    var onSessionStart = handlers.onSessionStart;\n    onSessionStart && onSessionStart(event, getPanInfo(initialInfo, this.history));\n    var removeOnPointerMove = addPointerEvent(window, \"pointermove\", function (event, info) {\n      return _this.handlePointerMove(event, info);\n    });\n    var removeOnPointerUp = addPointerEvent(window, \"pointerup\", function (event, info) {\n      return _this.handlePointerUp(event, info);\n    });\n\n    this.removeListeners = function () {\n      removeOnPointerMove && removeOnPointerMove();\n      removeOnPointerUp && removeOnPointerUp();\n    };\n  }\n\n  PanSession.prototype.handlePointerMove = function (event, info) {\n    this.lastMoveEvent = event;\n    this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint); // Because Safari doesn't trigger mouseup events when it's above a `<select>`\n\n    if (isMouseEvent(event) && event.buttons === 0) {\n      this.handlePointerUp(event, info);\n      return;\n    } // Throttle mouse move event to once per frame\n\n\n    sync.update(this.updatePoint, true);\n  };\n\n  PanSession.prototype.handlePointerUp = function (event, info) {\n    this.end();\n    var onEnd = this.handlers.onEnd;\n    if (!onEnd) return;\n    var panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\n    onEnd && onEnd(event, panInfo);\n  };\n\n  PanSession.prototype.updateHandlers = function (handlers) {\n    this.handlers = handlers;\n  };\n\n  PanSession.prototype.end = function () {\n    this.removeListeners && this.removeListeners();\n    cancelSync.update(this.updatePoint);\n    unblockViewportScroll();\n  };\n\n  return PanSession;\n}();\n\nfunction transformPoint(info, transformPagePoint) {\n  return transformPagePoint ? {\n    point: transformPagePoint(info.point)\n  } : info;\n}\n\nfunction getPanInfo(_a, history) {\n  var point = _a.point;\n  return {\n    point: point,\n    delta: Point.subtract(point, lastDevicePoint(history)),\n    offset: Point.subtract(point, startDevicePoint(history)),\n    velocity: getVelocity$1(history, 0.1)\n  };\n}\n\nfunction startDevicePoint(history) {\n  return history[0];\n}\n\nfunction lastDevicePoint(history) {\n  return history[history.length - 1];\n}\n\nfunction getVelocity$1(history, timeDelta) {\n  if (history.length < 2) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var i = history.length - 1;\n  var timestampedPoint = null;\n  var lastPoint = lastDevicePoint(history);\n\n  while (i >= 0) {\n    timestampedPoint = history[i];\n\n    if (lastPoint.timestamp - timestampedPoint.timestamp > secondsToMilliseconds(timeDelta)) {\n      break;\n    }\n\n    i--;\n  }\n\n  if (!timestampedPoint) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\n\n  if (time === 0) {\n    return {\n      x: 0,\n      y: 0\n    };\n  }\n\n  var currentVelocity = {\n    x: (lastPoint.x - timestampedPoint.x) / time,\n    y: (lastPoint.y - timestampedPoint.y) / time\n  };\n\n  if (currentVelocity.x === Infinity) {\n    currentVelocity.x = 0;\n  }\n\n  if (currentVelocity.y === Infinity) {\n    currentVelocity.y = 0;\n  }\n\n  return currentVelocity;\n}\n/**\r\n *\r\n * @param handlers -\r\n * @param ref -\r\n *\r\n * @internalremarks\r\n * Currently this sets new pan gesture functions every render. The memo route has been explored\r\n * in the past but ultimately we're still creating new functions every render. An optimisation\r\n * to explore is creating the pan gestures and loading them into a `ref`.\r\n *\r\n * @internal\r\n */\n\n\nfunction usePanGesture(_a, ref) {\n  var onPan = _a.onPan,\n      onPanStart = _a.onPanStart,\n      onPanEnd = _a.onPanEnd,\n      onPanSessionStart = _a.onPanSessionStart;\n  var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\n  var panSession = useRef(null);\n  var transformPagePoint = useContext(MotionPluginContext).transformPagePoint;\n  var handlers = {\n    onSessionStart: onPanSessionStart,\n    onStart: onPanStart,\n    onMove: onPan,\n    onEnd: function (event, info) {\n      panSession.current = null;\n      onPanEnd && onPanEnd(event, info);\n    }\n  };\n  useEffect(function () {\n    if (panSession.current !== null) {\n      panSession.current.updateHandlers(handlers);\n    }\n  });\n\n  function onPointerDown(event) {\n    panSession.current = new PanSession(event, handlers, {\n      transformPagePoint: transformPagePoint\n    });\n  }\n\n  usePointerEvent(ref, \"pointerdown\", hasPanEvents && onPointerDown);\n  useUnmountEffect(function () {\n    return panSession.current && panSession.current.end();\n  });\n}\n/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\n\n\nvar isNodeOrChild = function (parent, child) {\n  if (!child) {\n    return false;\n  } else if (parent === child) {\n    return true;\n  } else {\n    return isNodeOrChild(parent, child.parentElement);\n  }\n};\n\nvar order = [\"whileHover\", \"whileTap\", \"whileDrag\"];\n\nvar getGesturePriority = function (gesture) {\n  return order.indexOf(gesture) + 1;\n};\n\nfunction createLock(name) {\n  var lock = null;\n  return function () {\n    var openLock = function () {\n      lock = null;\n    };\n\n    if (lock === null) {\n      lock = name;\n      return openLock;\n    }\n\n    return false;\n  };\n}\n\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\nvar globalVerticalLock = createLock(\"dragVertical\");\n\nfunction getGlobalLock(drag) {\n  var lock = false;\n\n  if (drag === \"y\") {\n    lock = globalVerticalLock();\n  } else if (drag === \"x\") {\n    lock = globalHorizontalLock();\n  } else {\n    var openHorizontal_1 = globalHorizontalLock();\n    var openVertical_1 = globalVerticalLock();\n\n    if (openHorizontal_1 && openVertical_1) {\n      lock = function () {\n        openHorizontal_1();\n        openVertical_1();\n      };\n    } else {\n      // Release the locks because we don't use them\n      if (openHorizontal_1) openHorizontal_1();\n      if (openVertical_1) openVertical_1();\n    }\n  }\n\n  return lock;\n}\n\nvar tapGesturePriority = getGesturePriority(\"whileTap\");\n/**\r\n * @param handlers -\r\n * @internal\r\n */\n\nfunction useTapGesture(_a, ref) {\n  var onTap = _a.onTap,\n      onTapStart = _a.onTapStart,\n      onTapCancel = _a.onTapCancel,\n      whileTap = _a.whileTap,\n      controls = _a.controls;\n  var hasTapListeners = onTap || onTapStart || onTapCancel || whileTap;\n  var isTapping = useRef(false);\n  var cancelPointerEventListener = useRef(null);\n\n  function removePointerUp() {\n    cancelPointerEventListener.current && cancelPointerEventListener.current();\n    cancelPointerEventListener.current = null;\n  }\n\n  if (whileTap && controls) {\n    controls.setOverride(whileTap, tapGesturePriority);\n  } // We load this event handler into a ref so we can later refer to\n  // onPointerUp.current which will always have reference to the latest props\n\n\n  var onPointerUp = useRef(null);\n\n  onPointerUp.current = function (event, info) {\n    var element = ref.current;\n    removePointerUp();\n    if (!isTapping.current || !element) return;\n    isTapping.current = false;\n\n    if (controls && whileTap) {\n      controls.clearOverride(tapGesturePriority);\n    } // Check the gesture lock - if we get it, it means no drag gesture is active\n    // and we can safely fire the tap gesture.\n\n\n    var openGestureLock = getGlobalLock(true);\n    if (!openGestureLock) return;\n    openGestureLock();\n\n    if (!isNodeOrChild(element, event.target)) {\n      onTapCancel && onTapCancel(event, info);\n    } else {\n      onTap && onTap(event, info);\n    }\n  };\n\n  function onPointerDown(event, info) {\n    removePointerUp();\n    cancelPointerEventListener.current = addPointerEvent(window, \"pointerup\", function (event, info) {\n      return onPointerUp.current(event, info);\n    });\n    var element = ref.current;\n    if (!element || isTapping.current) return;\n    isTapping.current = true;\n    onTapStart && onTapStart(event, info);\n\n    if (controls && whileTap) {\n      controls.startOverride(tapGesturePriority);\n    }\n  }\n\n  usePointerEvent(ref, \"pointerdown\", hasTapListeners ? onPointerDown : undefined);\n  useUnmountEffect(removePointerUp);\n}\n\nvar hoverPriority = getGesturePriority(\"whileHover\");\n\nvar filterTouch = function (listener) {\n  return function (event, info) {\n    if (isMouseEvent(event)) listener(event, info);\n  };\n};\n/**\r\n *\r\n * @param props\r\n * @param ref\r\n * @internal\r\n */\n\n\nfunction useHoverGesture(_a, ref) {\n  var whileHover = _a.whileHover,\n      onHoverStart = _a.onHoverStart,\n      onHoverEnd = _a.onHoverEnd,\n      controls = _a.controls;\n\n  if (whileHover && controls) {\n    controls.setOverride(whileHover, hoverPriority);\n  }\n\n  usePointerEvent(ref, \"pointerenter\", filterTouch(function (event, info) {\n    if (onHoverStart) onHoverStart(event, info);\n\n    if (whileHover && controls) {\n      controls.startOverride(hoverPriority);\n    }\n  }));\n  usePointerEvent(ref, \"pointerleave\", filterTouch(function (event, info) {\n    if (onHoverEnd) onHoverEnd(event, info);\n\n    if (whileHover && controls) {\n      controls.clearOverride(hoverPriority);\n    }\n  }));\n}\n/**\r\n * Add pan and tap gesture recognition to an element.\r\n *\r\n * @param props - Gesture event handlers\r\n * @param ref - React `ref` containing a DOM `Element`\r\n * @public\r\n */\n\n\nfunction useGestures(props, ref) {\n  usePanGesture(props, ref);\n  useTapGesture(props, ref);\n  useHoverGesture(props, ref);\n}\n\nvar makeRenderlessComponent = function (hook) {\n  return function (props) {\n    hook(props);\n    return null;\n  };\n};\n\nvar gestureProps = [\"onPan\", \"onPanStart\", \"onPanEnd\", \"onPanSessionStart\", \"onTap\", \"onTapStart\", \"onTapCancel\", \"whileTap\", \"whileHover\", \"onHoverStart\", \"onHoverEnd\"];\nvar Gestures = {\n  key: \"gestures\",\n  shouldRender: function (props) {\n    return gestureProps.some(function (key) {\n      return props.hasOwnProperty(key);\n    });\n  },\n  Component: makeRenderlessComponent(function (_a) {\n    var innerRef = _a.innerRef,\n        props = __rest(_a, [\"innerRef\"]);\n\n    useGestures(props, innerRef);\n  })\n};\n\nvar isRefObject = function (ref) {\n  return typeof ref === \"object\" && ref.hasOwnProperty(\"current\");\n};\n\nvar noop = function (v) {\n  return v;\n};\n\nvar ComponentDragControls = function () {\n  function ComponentDragControls(_a) {\n    var ref = _a.ref,\n        values = _a.values,\n        controls = _a.controls;\n    /**\r\n     * Track whether we're currently dragging.\r\n     *\r\n     * @internal\r\n     */\n\n    this.isDragging = false;\n    /**\r\n     * The current direction of drag, or `null` if both.\r\n     *\r\n     * @internal\r\n     */\n\n    this.currentDirection = null;\n    /**\r\n     * The permitted t/r/b/l boundaries of travel, in pixels.\r\n     *\r\n     * @internal\r\n     */\n\n    this.constraints = false;\n    /**\r\n     * A reference to the host component's latest props.\r\n     *\r\n     * @internal\r\n     */\n\n    this.props = {\n      transformPagePoint: noop\n    };\n    /**\r\n     * References to the MotionValues used for tracking the current dragged point.\r\n     *\r\n     * @internal\r\n     */\n\n    this.point = {};\n    /**\r\n     * The origin point for the current drag gesture.\r\n     *\r\n     * @internal\r\n     */\n\n    this.origin = {\n      x: motionValue(0),\n      y: motionValue(0)\n    }; // This is a reference to the global drag gesture lock, ensuring only one component\n    // can \"capture\" the drag of one or both axes.\n    // TODO: Look into moving this into pansession?\n\n    this.openGlobalLock = null;\n    /**\r\n     * @internal\r\n     */\n\n    this.panSession = null;\n    /**\r\n     * A reference to the previous constraints bounding box\r\n     *\r\n     * @internal\r\n     */\n\n    this.prevConstraintsBox = {\n      width: 0,\n      height: 0,\n      x: 0,\n      y: 0\n    };\n    this.ref = ref;\n    this.values = values;\n    this.controls = controls;\n  }\n  /**\r\n   * Start dragging the host component.\r\n   *\r\n   * @param event - The originating pointer event.\r\n   * @param options -\r\n   *\r\n   * @public\r\n   */\n\n\n  ComponentDragControls.prototype.start = function (originEvent, _a) {\n    var _this = this;\n\n    var _b = (_a === void 0 ? {} : _a).snapToCursor,\n        snapToCursor = _b === void 0 ? false : _b;\n    snapToCursor && this.snapToCursor(originEvent);\n\n    var onSessionStart = function () {\n      // Initiate viewport scroll blocking on touch start. This is a very aggressive approach\n      // which has come out of the difficulty in us being able to do this once a scroll gesture\n      // has initiated in mobile browsers. This means if there's a horizontally-scrolling carousel\n      // on a page we can't let a user scroll the page itself from it. Ideally what we'd do is\n      // trigger this once we've got a scroll direction determined. This approach sort-of worked\n      // but if the component was dragged too far in a single frame page scrolling would initiate.\n      blockViewportScroll(); // Stop any animations on both axis values immediately. This allows the user to throw and catch\n      // the component.\n\n      bothAxis(function (axis) {\n        var axisPoint = _this.point[axis];\n        axisPoint && axisPoint.stop();\n      });\n    };\n\n    var onStart = function (event, info) {\n      // If constraints are an element, resolve them again in case they've updated.\n      if (_this.constraintsNeedResolution) {\n        var _a = _this.props,\n            dragConstraints = _a.dragConstraints,\n            transformPagePoint_1 = _a.transformPagePoint;\n        _this.constraints = calculateConstraintsFromDom(dragConstraints, _this.ref, _this.point, transformPagePoint_1);\n\n        _this.applyConstraintsToPoint();\n      } // Set point origin and stop any existing animations.\n\n\n      bothAxis(function (axis) {\n        var axisPoint = _this.point[axis];\n        if (!axisPoint) return;\n\n        _this.origin[axis].set(axisPoint.get());\n      }); // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\n\n      var _b = _this.props,\n          drag = _b.drag,\n          dragPropagation = _b.dragPropagation;\n\n      if (drag && !dragPropagation) {\n        if (_this.openGlobalLock) _this.openGlobalLock();\n        _this.openGlobalLock = getGlobalLock(drag);\n        if (!_this.openGlobalLock) return;\n      }\n\n      _this.isDragging = true;\n      _this.currentDirection = null;\n      var onDragStart = _this.props.onDragStart;\n      onDragStart && onDragStart(event, convertPanToDrag(info, _this.point));\n    };\n\n    var onMove = function (event, info) {\n      var _a = _this.props,\n          dragPropagation = _a.dragPropagation,\n          dragDirectionLock = _a.dragDirectionLock; // If we didn't successfully receive the gesture lock, early return.\n\n      if (!dragPropagation && !_this.openGlobalLock) return;\n      var offset = info.offset; // Attempt to detect drag direction if directionLock is true\n\n      if (dragDirectionLock && _this.currentDirection === null) {\n        _this.currentDirection = getCurrentDirection(offset); // If we've successfully set a direction, notify listener\n\n        if (_this.currentDirection !== null) {\n          var onDirectionLock = _this.props.onDirectionLock;\n          onDirectionLock && onDirectionLock(_this.currentDirection);\n        }\n\n        return;\n      }\n\n      _this.updatePoint(\"x\", offset);\n\n      _this.updatePoint(\"y\", offset);\n\n      var onDrag = _this.props.onDrag;\n      onDrag && onDrag(event, convertPanToDrag(info, _this.point));\n    };\n\n    var onEnd = function (event, info) {\n      _this.stop(event, info);\n    };\n\n    var transformPagePoint = this.props.transformPagePoint;\n    this.panSession = new PanSession(originEvent, {\n      onSessionStart: onSessionStart,\n      onStart: onStart,\n      onMove: onMove,\n      onEnd: onEnd\n    }, {\n      transformPagePoint: transformPagePoint\n    });\n  };\n\n  ComponentDragControls.prototype.cancelDrag = function () {\n    unblockViewportScroll();\n    this.isDragging = false;\n    this.panSession && this.panSession.end();\n    this.panSession = null;\n\n    if (!this.props.dragPropagation && this.openGlobalLock) {\n      this.openGlobalLock();\n      this.openGlobalLock = null;\n    }\n  };\n\n  ComponentDragControls.prototype.stop = function (event, info) {\n    var _a;\n\n    (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\n    this.panSession = null;\n    var isDragging = this.isDragging;\n    this.cancelDrag();\n    if (!isDragging) return;\n    var _b = this.props,\n        dragMomentum = _b.dragMomentum,\n        dragElastic = _b.dragElastic,\n        onDragEnd = _b.onDragEnd;\n\n    if (dragMomentum || dragElastic) {\n      var velocity = info.velocity;\n      this.animateDragEnd(velocity);\n    } else {\n      this.recordBoxInfo(this.constraints);\n    }\n\n    onDragEnd && onDragEnd(event, convertPanToDrag(info, this.point));\n  };\n\n  ComponentDragControls.prototype.recordBoxInfo = function (constraints) {\n    if (constraints) {\n      var right = constraints.right,\n          left = constraints.left,\n          bottom = constraints.bottom,\n          top_1 = constraints.top;\n      this.prevConstraintsBox.width = (right || 0) - (left || 0);\n      this.prevConstraintsBox.height = (bottom || 0) - (top_1 || 0);\n    }\n\n    if (this.point.x) this.prevConstraintsBox.x = this.point.x.get();\n    if (this.point.y) this.prevConstraintsBox.y = this.point.y.get();\n  };\n\n  ComponentDragControls.prototype.snapToCursor = function (event) {\n    var _this = this;\n\n    var transformPagePoint = this.props.transformPagePoint;\n    var point = extractEventInfo(event).point;\n    var boundingBox = getBoundingBox(this.ref, transformPagePoint);\n    var center = {\n      x: boundingBox.width / 2 + boundingBox.left + window.scrollX,\n      y: boundingBox.height / 2 + boundingBox.top + window.scrollY\n    };\n    var offset = {\n      x: point.x - center.x,\n      y: point.y - center.y\n    };\n    bothAxis(function (axis) {\n      var point = _this.point[axis];\n      if (!point) return;\n\n      _this.origin[axis].set(point.get());\n    });\n    this.updatePoint(\"x\", offset);\n    this.updatePoint(\"y\", offset);\n  };\n\n  ComponentDragControls.prototype.setPoint = function (axis, value) {\n    this.point[axis] = value;\n  };\n\n  ComponentDragControls.prototype.updatePoint = function (axis, offset) {\n    var _a = this.props,\n        drag = _a.drag,\n        dragElastic = _a.dragElastic;\n    var axisPoint = this.point[axis]; // If we're not dragging this axis, do an early return.\n\n    if (!shouldDrag(axis, drag, this.currentDirection) || !axisPoint) return;\n    var current = applyConstraints(axis, this.origin[axis].get() + offset[axis], this.constraints, dragElastic);\n    axisPoint.set(current);\n  };\n\n  ComponentDragControls.prototype.updateProps = function (_a) {\n    var _this = this;\n\n    var _b = _a.drag,\n        drag = _b === void 0 ? false : _b,\n        _c = _a.dragDirectionLock,\n        dragDirectionLock = _c === void 0 ? false : _c,\n        _d = _a.dragPropagation,\n        dragPropagation = _d === void 0 ? false : _d,\n        _e = _a.dragConstraints,\n        dragConstraints = _e === void 0 ? false : _e,\n        _f = _a.dragElastic,\n        dragElastic = _f === void 0 ? true : _f,\n        _g = _a.dragMomentum,\n        dragMomentum = _g === void 0 ? true : _g,\n        remainingProps = __rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\n\n    this.props = __assign({\n      drag: drag,\n      dragDirectionLock: dragDirectionLock,\n      dragPropagation: dragPropagation,\n      dragConstraints: dragConstraints,\n      dragElastic: dragElastic,\n      dragMomentum: dragMomentum\n    }, remainingProps);\n    var _dragValueX = remainingProps._dragValueX,\n        _dragValueY = remainingProps._dragValueY,\n        dragOriginX = remainingProps.dragOriginX,\n        dragOriginY = remainingProps.dragOriginY;\n    if (dragOriginX) this.origin.x = dragOriginX;\n    if (dragOriginY) this.origin.y = dragOriginY; // Get the `MotionValue` for both draggable axes, or create them if they don't already\n    // exist on this component.\n\n    bothAxis(function (axis) {\n      if (!shouldDrag(axis, drag, _this.currentDirection)) return;\n      var defaultValue = axis === \"x\" ? _dragValueX : _dragValueY;\n\n      _this.setPoint(axis, defaultValue || _this.values.get(axis, 0));\n    }); // If `dragConstraints` is a React `ref`, we should resolve the constraints once the\n    // component has rendered.\n\n    this.constraintsNeedResolution = isRefObject(dragConstraints);\n    this.constraints = this.constraintsNeedResolution ? this.constraints || false : dragConstraints;\n  };\n\n  ComponentDragControls.prototype.applyConstraintsToPoint = function (constraints) {\n    var _this = this;\n\n    if (constraints === void 0) {\n      constraints = this.constraints;\n    }\n\n    return bothAxis(function (axis) {\n      var axisPoint = _this.point[axis];\n      axisPoint && !axisPoint.isAnimating() && applyConstraints(axis, axisPoint, constraints, 0);\n    });\n  };\n\n  ComponentDragControls.prototype.animateDragEnd = function (velocity) {\n    var _this = this;\n\n    var _a = this.props,\n        drag = _a.drag,\n        dragMomentum = _a.dragMomentum,\n        dragElastic = _a.dragElastic,\n        dragTransition = _a.dragTransition,\n        _dragValueX = _a._dragValueX,\n        _dragValueY = _a._dragValueY,\n        _dragTransitionControls = _a._dragTransitionControls;\n    var momentumAnimations = bothAxis(function (axis) {\n      var _a;\n\n      if (!shouldDrag(axis, drag, _this.currentDirection)) {\n        return;\n      }\n\n      var transition = _this.constraints ? getConstraints(axis, _this.constraints) : {};\n      /**\r\n       * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n       * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n       * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n       * using the value of `dragElastic`.\r\n       */\n\n      var bounceStiffness = dragElastic ? 200 : 1000000;\n      var bounceDamping = dragElastic ? 40 : 10000000;\n      var animationControls = _dragTransitionControls || _this.controls;\n\n      var inertia = __assign(__assign({\n        type: \"inertia\",\n        velocity: dragMomentum ? velocity[axis] : 0,\n        bounceStiffness: bounceStiffness,\n        bounceDamping: bounceDamping,\n        timeConstant: 750,\n        restDelta: 1\n      }, dragTransition), transition);\n\n      var externalAxisMotionValue = axis === \"x\" ? _dragValueX : _dragValueY; // If we're not animating on an externally-provided `MotionValue` we can use the\n      // component's animation controls which will handle interactions with whileHover (etc),\n      // otherwise we just have to animate the `MotionValue` itself.\n\n      return externalAxisMotionValue ? startAnimation(axis, externalAxisMotionValue, 0, inertia) : animationControls.start((_a = {}, _a[axis] = 0, _a.transition = inertia, _a));\n    }); // Run all animations and then resolve the new drag constraints.\n\n    return Promise.all(momentumAnimations).then(function () {\n      _this.recordBoxInfo(_this.constraints);\n\n      _this.scalePoint();\n\n      var onDragTransitionEnd = _this.props.onDragTransitionEnd;\n      onDragTransitionEnd && onDragTransitionEnd();\n    });\n  };\n\n  ComponentDragControls.prototype.scalePoint = function () {\n    var _this = this;\n\n    var _a = this.props,\n        dragConstraints = _a.dragConstraints,\n        transformPagePoint = _a.transformPagePoint;\n    if (!isRefObject(dragConstraints)) return;\n    var constraintsBox = getBoundingBox(dragConstraints, transformPagePoint);\n    var draggableBox = getBoundingBox(this.ref, transformPagePoint); // Scale a point relative to the transformation of a constraints-providing element.\n\n    var scaleAxisPoint = function (axis, dimension) {\n      var pointToScale = _this.point[axis];\n      if (!pointToScale) return; // Stop any current animations as they bug out if you resize during one\n\n      if (pointToScale.isAnimating()) {\n        pointToScale.stop();\n\n        _this.recordBoxInfo();\n\n        return;\n      } // If the previous dimension was `0` (default), set `scale` to `1` to prevent\n      // divide by zero errors.\n\n\n      var scale = _this.prevConstraintsBox[dimension] ? (constraintsBox[dimension] - draggableBox[dimension]) / _this.prevConstraintsBox[dimension] : 1;\n      pointToScale.set(_this.prevConstraintsBox[axis] * scale);\n    };\n\n    scaleAxisPoint(\"x\", \"width\");\n    scaleAxisPoint(\"y\", \"height\");\n  };\n\n  ComponentDragControls.prototype.mount = function (element) {\n    var _this = this;\n\n    var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\n      var _a = _this.props,\n          drag = _a.drag,\n          _b = _a.dragListener,\n          dragListener = _b === void 0 ? true : _b;\n      drag && dragListener && _this.start(event);\n    });\n    var stopResizeListener = addDomEvent(window, \"resize\", function () {\n      return _this.scalePoint();\n    });\n\n    if (this.constraintsNeedResolution) {\n      var _a = this.props,\n          dragConstraints = _a.dragConstraints,\n          transformPagePoint = _a.transformPagePoint;\n      var constraints = calculateConstraintsFromDom(dragConstraints, this.ref, this.point, transformPagePoint);\n      this.applyConstraintsToPoint(constraints);\n      this.recordBoxInfo(constraints);\n    } else if (!this.isDragging && this.constraints) {\n      this.applyConstraintsToPoint();\n    }\n\n    return function () {\n      stopPointerListener && stopPointerListener();\n      stopResizeListener && stopResizeListener();\n\n      _this.cancelDrag();\n    };\n  };\n\n  return ComponentDragControls;\n}(); // Call a handler once for each axis\n\n\nfunction bothAxis(handler) {\n  return [handler(\"x\"), handler(\"y\")];\n}\n\nfunction convertPanToDrag(info, point) {\n  return __assign(__assign({}, info), {\n    point: {\n      x: point.x ? point.x.get() : 0,\n      y: point.y ? point.y.get() : 0\n    }\n  });\n}\n\nfunction getConstraints(axis, _a) {\n  var top = _a.top,\n      right = _a.right,\n      bottom = _a.bottom,\n      left = _a.left;\n\n  if (axis === \"x\") {\n    return {\n      min: left,\n      max: right\n    };\n  } else {\n    return {\n      min: top,\n      max: bottom\n    };\n  }\n}\n\nfunction shouldDrag(direction, drag, currentDirection) {\n  return (drag === true || drag === direction) && (currentDirection === null || currentDirection === direction);\n}\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\n\n\nfunction getCurrentDirection(offset, lockThreshold) {\n  if (lockThreshold === void 0) {\n    lockThreshold = 10;\n  }\n\n  var direction = null;\n\n  if (Math.abs(offset.y) > lockThreshold) {\n    direction = \"y\";\n  } else if (Math.abs(offset.x) > lockThreshold) {\n    direction = \"x\";\n  }\n\n  return direction;\n}\n/**\r\n * Takes a parent Element and a draggable Element and returns pixel-based drag constraints.\r\n *\r\n * @param constraintsRef\r\n * @param draggableRef\r\n */\n\n\nfunction calculateConstraintsFromDom(constraintsRef, draggableRef, point, transformPagePoint) {\n  invariant(constraintsRef.current !== null && draggableRef.current !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\n  var parentBoundingBox = getBoundingBox(constraintsRef, transformPagePoint);\n  var draggableBoundingBox = getBoundingBox(draggableRef, transformPagePoint);\n  var left = parentBoundingBox.left - draggableBoundingBox.left + getCurrentOffset(point.x);\n  var top = parentBoundingBox.top - draggableBoundingBox.top + getCurrentOffset(point.y);\n  var right = parentBoundingBox.width - draggableBoundingBox.width + left;\n  var bottom = parentBoundingBox.height - draggableBoundingBox.height + top;\n  return {\n    top: top,\n    left: left,\n    right: right,\n    bottom: bottom\n  };\n}\n\nfunction getBoundingBox(ref, transformPagePoint) {\n  var rect = ref.current.getBoundingClientRect();\n\n  var _a = transformPagePoint({\n    x: rect.left,\n    y: rect.top\n  }),\n      left = _a.x,\n      top = _a.y;\n\n  var _b = transformPagePoint({\n    x: rect.width,\n    y: rect.height\n  }),\n      width = _b.x,\n      height = _b.y;\n\n  return {\n    left: left,\n    top: top,\n    width: width,\n    height: height\n  };\n}\n\nfunction getCurrentOffset(point) {\n  return point ? point.get() : 0;\n}\n\nfunction applyConstraints(axis, value, constraints, dragElastic) {\n  var constrainedValue = value instanceof MotionValue ? value.get() : value;\n\n  if (!constraints) {\n    return constrainedValue;\n  }\n\n  var _a = getConstraints(axis, constraints),\n      min = _a.min,\n      max = _a.max;\n\n  if (min !== undefined && constrainedValue < min) {\n    constrainedValue = dragElastic ? applyOverdrag(min, constrainedValue, dragElastic) : Math.max(min, constrainedValue);\n  } else if (max !== undefined && constrainedValue > max) {\n    constrainedValue = dragElastic ? applyOverdrag(max, constrainedValue, dragElastic) : Math.min(max, constrainedValue);\n  }\n\n  if (value instanceof MotionValue) {\n    value.set(constrainedValue);\n  }\n\n  return constrainedValue;\n}\n\nfunction applyOverdrag(origin, current, dragElastic) {\n  var dragFactor = typeof dragElastic === \"number\" ? dragElastic : 0.35;\n  return mix(origin, current, dragFactor);\n}\n/**\r\n * A hook that allows an element to be dragged.\r\n *\r\n * @param param\r\n * @param ref\r\n * @param values\r\n * @param controls\r\n *\r\n * @internal\r\n */\n\n\nfunction useDrag(props, ref, values, controls) {\n  var groupDragControls = props.dragControls;\n  var transformPagePoint = useContext(MotionPluginContext).transformPagePoint;\n  var dragControls = useConstant(function () {\n    return new ComponentDragControls({\n      ref: ref,\n      values: values,\n      controls: controls\n    });\n  });\n  dragControls.updateProps(__assign(__assign({}, props), {\n    transformPagePoint: transformPagePoint\n  }));\n  useEffect(function () {\n    return groupDragControls && groupDragControls.subscribe(dragControls);\n  }, [dragControls]);\n  useEffect(function () {\n    return dragControls.mount(ref.current);\n  }, []);\n}\n\nvar Drag = {\n  key: \"drag\",\n  shouldRender: function (props) {\n    return !!props.drag;\n  },\n  Component: makeRenderlessComponent(function (_a) {\n    var innerRef = _a.innerRef,\n        values = _a.values,\n        controls = _a.controls,\n        props = __rest(_a, [\"innerRef\", \"values\", \"controls\"]);\n\n    return useDrag(props, innerRef, values, controls);\n  })\n};\n\nfunction isCSSVariable(value) {\n  return typeof value === \"string\" && value.startsWith(\"var(--\");\n}\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\n\n\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\n\nfunction parseCSSVariable(current) {\n  var match = cssVariableRegex.exec(current);\n  if (!match) return [,];\n  var token = match[1],\n      fallback = match[2];\n  return [token, fallback];\n}\n\nvar maxDepth = 4;\n\nfunction getVariableValue(current, element, depth) {\n  if (depth === void 0) {\n    depth = 1;\n  }\n\n  invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\n\n  var _a = parseCSSVariable(current),\n      token = _a[0],\n      fallback = _a[1]; // No CSS variable detected\n\n\n  if (!token) return; // Attempt to read this CSS variable off the element\n\n  var resolved = window.getComputedStyle(element).getPropertyValue(token);\n\n  if (resolved) {\n    return resolved;\n  } else if (isCSSVariable(fallback)) {\n    // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\n    return getVariableValue(fallback, element, depth + 1);\n  } else {\n    return fallback;\n  }\n}\n/**\r\n * Resolve CSS variables from\r\n *\r\n * @internal\r\n */\n\n\nfunction resolveCSSVariables(values, ref, _a, transitionEnd) {\n  var target = __rest(_a, []);\n\n  var element = ref.current;\n  if (!(element instanceof HTMLElement)) return {\n    target: target,\n    transitionEnd: transitionEnd\n  }; // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\n  // only if they change but I think this reads clearer and this isn't a performance-critical path.\n\n  if (transitionEnd) {\n    transitionEnd = __assign({}, transitionEnd);\n  } // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\n\n\n  values.forEach(function (value) {\n    var current = value.get();\n    if (!isCSSVariable(current)) return;\n    var resolved = getVariableValue(current, element);\n    if (resolved) value.set(resolved);\n  }); // Cycle through every target property and resolve CSS variables. Currently\n  // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\n\n  for (var key in target) {\n    var current = target[key];\n    if (!isCSSVariable(current)) continue;\n    var resolved = getVariableValue(current, element);\n    if (!resolved) continue; // Clone target if it hasn't already been\n\n    target[key] = resolved; // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\n    // CSS variable. This will ensure that after the animation the component will reflect\n    // changes in the value of the CSS variable.\n\n    if (transitionEnd && transitionEnd[key] === undefined) {\n      transitionEnd[key] = current;\n    }\n  }\n\n  return {\n    target: target,\n    transitionEnd: transitionEnd\n  };\n}\n\nvar positionalKeys = new Set([\"width\", \"height\", \"top\", \"left\", \"right\", \"bottom\", \"x\", \"y\"]);\n\nvar isPositionalKey = function (key) {\n  return positionalKeys.has(key);\n};\n\nvar hasPositionalKey = function (target) {\n  return Object.keys(target).some(isPositionalKey);\n};\n\nvar setAndResetVelocity = function (value, to) {\n  // Looks odd but setting it twice doesn't render, it'll just\n  // set both prev and current to the latest value\n  value.set(to, false);\n  value.set(to);\n};\n\nvar isNumOrPxType = function (v) {\n  return v === number || v === px;\n};\n\nvar BoundingBoxDimension;\n\n(function (BoundingBoxDimension) {\n  BoundingBoxDimension[\"width\"] = \"width\";\n  BoundingBoxDimension[\"height\"] = \"height\";\n  BoundingBoxDimension[\"left\"] = \"left\";\n  BoundingBoxDimension[\"right\"] = \"right\";\n  BoundingBoxDimension[\"top\"] = \"top\";\n  BoundingBoxDimension[\"bottom\"] = \"bottom\";\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\n\nvar getPosFromMatrix = function (matrix, pos) {\n  return parseFloat(matrix.split(\", \")[pos]);\n};\n\nvar getTranslateFromMatrix = function (pos2, pos3) {\n  return function (_bbox, _a) {\n    var transform = _a.transform;\n    if (transform === \"none\" || !transform) return 0;\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\n\n    if (matrix3d) {\n      return getPosFromMatrix(matrix3d[1], pos3);\n    } else {\n      var matrix = transform.match(/^matrix\\((.+)\\)$/);\n\n      if (matrix) {\n        return getPosFromMatrix(matrix[1], pos2);\n      } else {\n        return 0;\n      }\n    }\n  };\n};\n\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) {\n  return !transformKeys.has(key);\n});\n\nfunction removeNonTranslationalTransform(values, elementStyler) {\n  var removedTransforms = [];\n  nonTranslationalTransformKeys.forEach(function (key) {\n    var value = values.get(key);\n\n    if (value !== undefined) {\n      removedTransforms.push([key, value.get()]);\n      value.set(key.startsWith(\"scale\") ? 1 : 0);\n    }\n  }); // Apply changes to element before measurement\n\n  if (removedTransforms.length) elementStyler.render();\n  return removedTransforms;\n}\n\nvar positionalValues = {\n  // Dimensions\n  width: function (_a) {\n    var width = _a.width;\n    return width;\n  },\n  height: function (_a) {\n    var height = _a.height;\n    return height;\n  },\n  top: function (_bbox, _a) {\n    var top = _a.top;\n    return parseFloat(top);\n  },\n  left: function (_bbox, _a) {\n    var left = _a.left;\n    return parseFloat(left);\n  },\n  bottom: function (_a, _b) {\n    var height = _a.height;\n    var top = _b.top;\n    return parseFloat(top) + height;\n  },\n  right: function (_a, _b) {\n    var width = _a.width;\n    var left = _b.left;\n    return parseFloat(left) + width;\n  },\n  // Transform\n  x: getTranslateFromMatrix(4, 13),\n  y: getTranslateFromMatrix(5, 14)\n};\n\nvar convertChangedValueTypes = function (target, values, element, elementStyler, changedKeys) {\n  var originBbox = element.getBoundingClientRect();\n  var elementComputedStyle = getComputedStyle(element);\n  var display = elementComputedStyle.display,\n      top = elementComputedStyle.top,\n      left = elementComputedStyle.left,\n      bottom = elementComputedStyle.bottom,\n      right = elementComputedStyle.right,\n      transform = elementComputedStyle.transform;\n  var originComputedStyle = {\n    top: top,\n    left: left,\n    bottom: bottom,\n    right: right,\n    transform: transform\n  }; // If the element is currently set to display: \"none\", make it visible before\n  // measuring the target bounding box\n\n  if (display === \"none\") {\n    elementStyler.set(\"display\", target.display || \"block\");\n  } // Apply the latest values (as set in checkAndConvertChangedValueTypes)\n\n\n  elementStyler.render();\n  var targetBbox = element.getBoundingClientRect();\n  changedKeys.forEach(function (key) {\n    // Restore styles to their **calculated computed style**, not their actual\n    // originally set style. This allows us to animate between equivalent pixel units.\n    var value = values.get(key);\n    setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\n    target[key] = positionalValues[key](targetBbox, elementComputedStyle);\n  });\n  return target;\n};\n\nvar checkAndConvertChangedValueTypes = function (values, ref, target, transitionEnd) {\n  if (transitionEnd === void 0) {\n    transitionEnd = {};\n  }\n\n  target = __assign({}, target);\n  transitionEnd = __assign({}, transitionEnd);\n  var element = ref.current;\n  var elementStyler = styler(element);\n  var targetPositionalKeys = Object.keys(target).filter(isPositionalKey); // We want to remove any transform values that could affect the element's bounding box before\n  // it's measured. We'll reapply these later.\n\n  var removedTransformValues = [];\n  var hasAttemptedToRemoveTransformValues = false;\n  var changedValueTypeKeys = targetPositionalKeys.reduce(function (acc, key) {\n    var value = values.get(key);\n    if (!value) return acc;\n    var from = value.get();\n    var to = target[key];\n    var fromType = getDimensionValueType(from);\n    var toType; // TODO: The current implementation of this basically throws an error\n    // if you try and do value conversion via keyframes. There's probably\n    // a way of doing this but the performance implications would need greater scrutiny,\n    // as it'd be doing multiple resize-remeasure operations.\n\n    if (isKeyframesTarget(to)) {\n      var numKeyframes = to.length;\n\n      for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\n        if (!toType) {\n          toType = getDimensionValueType(to[i]);\n          invariant(toType === fromType || isNumOrPxType(fromType) && isNumOrPxType(toType), \"Keyframes must be of the same dimension as the current value\");\n        } else {\n          invariant(getDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\n        }\n      }\n    } else {\n      toType = getDimensionValueType(to);\n    }\n\n    if (fromType !== toType) {\n      // If they're both just number or px, convert them both to numbers rather than\n      // relying on resize/remeasure to convert (which is wasteful in this situation)\n      if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\n        var current = value.get();\n\n        if (typeof current === \"string\") {\n          value.set(parseFloat(current));\n        }\n\n        if (typeof to === \"string\") {\n          target[key] = parseFloat(to);\n        } else if (Array.isArray(to) && toType === px) {\n          target[key] = to.map(parseFloat);\n        }\n      } else {\n        // If we're going to do value conversion via DOM measurements, we first\n        // need to remove non-positional transform values that could affect the bbox measurements.\n        if (!hasAttemptedToRemoveTransformValues) {\n          removedTransformValues = removeNonTranslationalTransform(values, elementStyler);\n          hasAttemptedToRemoveTransformValues = true;\n        }\n\n        acc.push(key);\n        transitionEnd[key] = transitionEnd[key] !== undefined ? transitionEnd[key] : target[key];\n        setAndResetVelocity(value, to);\n      }\n    }\n\n    return acc;\n  }, []);\n\n  if (changedValueTypeKeys.length) {\n    var convertedTarget = convertChangedValueTypes(target, values, element, elementStyler, changedValueTypeKeys); // If we removed transform values, reapply them before the next render\n\n    if (removedTransformValues.length) {\n      removedTransformValues.forEach(function (_a) {\n        var key = _a[0],\n            value = _a[1];\n        values.get(key).set(value);\n      });\n    } // Reapply original values\n\n\n    elementStyler.render();\n    return {\n      target: convertedTarget,\n      transitionEnd: transitionEnd\n    };\n  } else {\n    return {\n      target: target,\n      transitionEnd: transitionEnd\n    };\n  }\n};\n/**\r\n * Convert value types for x/y/width/height/top/left/bottom/right\r\n *\r\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\r\n *\r\n * @param values\r\n * @param ref\r\n * @param target\r\n * @param transitionEnd\r\n * @internal\r\n */\n\n\nfunction unitConversion(values, ref, target, transitionEnd) {\n  return hasPositionalKey(target) ? checkAndConvertChangedValueTypes(values, ref, target, transitionEnd) : {\n    target: target,\n    transitionEnd: transitionEnd\n  };\n}\n\nvar parseDomVariant = function (values, ref) {\n  return function (target, transitionEnd) {\n    var resolved = resolveCSSVariables(values, ref, target, transitionEnd);\n    target = resolved.target;\n    transitionEnd = resolved.transitionEnd;\n    return unitConversion(values, ref, target, transitionEnd);\n  };\n};\n\nfunction useForceUpdate() {\n  var _a = useState(0),\n      forcedRenderCount = _a[0],\n      setForcedRenderCount = _a[1];\n\n  return useCallback(function () {\n    return setForcedRenderCount(forcedRenderCount + 1);\n  }, [forcedRenderCount]);\n}\n\nvar SyncLayoutContext = createContext(null);\n/**\r\n * When layout changes happen asynchronously to their instigating render (ie when exiting\r\n * children of `AnimatePresence` are removed), `SyncLayout` can wrap parent and sibling\r\n * components that need to animate as a result of this layout change.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = ({ isVisible }) => {\r\n *   return (\r\n *     <SyncLayout>\r\n *       <AnimatePresence>\r\n *         {isVisible && (\r\n *           <motion.div exit={{ opacity: 0 }} />\r\n *         )}\r\n *       </AnimatePresence>\r\n *       <motion.div positionTransition />\r\n *     </SyncLayout>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * The way this component works is by memoising a function and passing it down via context.\r\n * The function, when called, updates the local state, which is used to invalidate the\r\n * memoisation cache. A new function is called, performing a synced re-render of components\r\n * that are using the SyncLayoutContext.\r\n *\r\n * @internal\r\n */\n\nvar UnstableSyncLayout = function (_a) {\n  var children = _a.children;\n  var forceUpdate = useForceUpdate();\n  return createElement(SyncLayoutContext.Provider, {\n    value: forceUpdate\n  }, children);\n};\n\nvar _a;\n\nvar StepName;\n\n(function (StepName) {\n  StepName[\"Prepare\"] = \"prepare\";\n  StepName[\"Read\"] = \"read\";\n  StepName[\"Render\"] = \"render\";\n})(StepName || (StepName = {}));\n\nvar stepOrder = [StepName.Prepare, StepName.Read, StepName.Render];\nvar jobs = stepOrder.reduce(function (acc, key) {\n  acc[key] = [];\n  return acc;\n}, {});\nvar jobsNeedProcessing = false;\n\nfunction flushCallbackList(list) {\n  var numJobs = list.length;\n\n  for (var i = 0; i < numJobs; i++) {\n    list[i]();\n  }\n\n  list.length = 0;\n}\n\nfunction flushAllJobs() {\n  if (!jobsNeedProcessing) return;\n  flushCallbackList(jobs.prepare);\n  flushCallbackList(jobs.read);\n  flushCallbackList(jobs.render);\n  jobsNeedProcessing = false;\n} // Note: The approach of schedulng jobs during the render step is incompatible with concurrent mode\n// where multiple renders might happen without a DOM update. This would result in unneccessary batched\n// jobs. But this was already a problem with our previous approach to positionTransition.\n// Hopefully the React team offer a getSnapshotBeforeUpdate-esque hook and we can move to that.\n\n\nvar createUseSyncEffect = function (stepName) {\n  return function (callback) {\n    if (!callback) return;\n    jobsNeedProcessing = true;\n    jobs[stepName].push(callback);\n  };\n};\n\nvar layoutSync = (_a = {}, _a[StepName.Prepare] = createUseSyncEffect(StepName.Prepare), _a[StepName.Read] = createUseSyncEffect(StepName.Read), _a[StepName.Render] = createUseSyncEffect(StepName.Render), _a.flush = flushAllJobs, _a);\n\nfunction isHTMLElement(element) {\n  return element instanceof HTMLElement;\n}\n\nvar defaultLayoutTransition = {\n  duration: 0.8,\n  ease: [0.45, 0.05, 0.19, 1.0]\n};\nvar defaultPositionTransition = underDampedSpring();\n\nfunction getDefaultLayoutTransition(isPositionOnly) {\n  return isPositionOnly ? defaultPositionTransition : defaultLayoutTransition;\n}\n\nfunction isResolver(transition) {\n  return typeof transition === \"function\";\n}\n\nvar axisLabels = {\n  x: {\n    id: \"x\",\n    size: \"width\",\n    min: \"left\",\n    max: \"right\",\n    origin: \"originX\"\n  },\n  y: {\n    id: \"y\",\n    size: \"height\",\n    min: \"top\",\n    max: \"bottom\",\n    origin: \"originY\"\n  }\n};\n\nfunction centerOf(min, max) {\n  return (min + max) / 2;\n}\n\nfunction calcAxisDelta(prev, next, names) {\n  var _a;\n\n  var sizeDelta = prev[names.size] - next[names.size];\n  var origin = 0.5; // If the element has changed size we want to check whether either side is in\n  // the same position before/after the layout transition. If so, we can anchor\n  // the element to that position and only animate its size.\n\n  if (sizeDelta) {\n    if (prev[names.min] === next[names.min]) {\n      origin = 0;\n    } else if (prev[names.max] === next[names.max]) {\n      origin = 1;\n    }\n  }\n\n  var delta = (_a = {}, _a[names.size] = sizeDelta, _a[names.origin] = origin, _a[names.id] = // Only measure a position delta if we haven't anchored to one side\n  origin === 0.5 ? centerOf(prev[names.min], prev[names.max]) - centerOf(next[names.min], next[names.max]) : 0, _a);\n  return delta;\n}\n\nfunction calcDelta(prev, next) {\n  var delta = __assign(__assign({}, calcAxisDelta(prev, next, axisLabels.x)), calcAxisDelta(prev, next, axisLabels.y));\n\n  return delta;\n}\n\nvar offset = {\n  getLayout: function (_a) {\n    var offset = _a.offset;\n    return offset;\n  },\n  measure: function (element) {\n    var offsetLeft = element.offsetLeft,\n        offsetTop = element.offsetTop,\n        offsetWidth = element.offsetWidth,\n        offsetHeight = element.offsetHeight;\n    return {\n      left: offsetLeft,\n      top: offsetTop,\n      right: offsetLeft + offsetWidth,\n      bottom: offsetTop + offsetHeight,\n      width: offsetWidth,\n      height: offsetHeight\n    };\n  }\n};\nvar boundingBox = {\n  getLayout: function (_a) {\n    var boundingBox = _a.boundingBox;\n    return boundingBox;\n  },\n  measure: function (element) {\n    var _a = element.getBoundingClientRect(),\n        left = _a.left,\n        top = _a.top,\n        width = _a.width,\n        height = _a.height,\n        right = _a.right,\n        bottom = _a.bottom;\n\n    return {\n      left: left,\n      top: top,\n      width: width,\n      height: height,\n      right: right,\n      bottom: bottom\n    };\n  }\n};\n\nfunction readPositionStyle(element) {\n  return window.getComputedStyle(element).position;\n}\n\nfunction getLayoutType(prev, next, isPositionOnly) {\n  return isPositionOnly && prev === next ? offset : boundingBox;\n}\n\nfunction isSizeKey(key) {\n  return key === \"width\" || key === \"height\";\n}\n\nfunction getTransition(_a) {\n  var layoutTransition = _a.layoutTransition,\n      positionTransition = _a.positionTransition;\n  return layoutTransition || positionTransition;\n}\n\nvar LayoutAnimation = function (_super) {\n  __extends(LayoutAnimation, _super);\n\n  function LayoutAnimation() {\n    return _super !== null && _super.apply(this, arguments) || this;\n  } // Measure the current state of the DOM before it's updated, and schedule checks to see\n  // if it's changed as a result of a React render.\n\n\n  LayoutAnimation.prototype.getSnapshotBeforeUpdate = function () {\n    var _a = this.props,\n        innerRef = _a.innerRef,\n        positionTransition = _a.positionTransition,\n        values = _a.values,\n        controls = _a.controls;\n    var element = innerRef.current;\n    if (!isHTMLElement(element)) return;\n    var layoutTransition = getTransition(this.props);\n    var isPositionOnly = !!positionTransition;\n    var positionStyle = readPositionStyle(element);\n    var prev = {\n      offset: offset.measure(element),\n      boundingBox: boundingBox.measure(element)\n    };\n    var transform;\n    var next;\n    var compare; // We split the unsetting, read and reapplication of the `transform` style prop into\n    // different steps via useSyncEffect. Multiple components might all be doing the same\n    // thing and by splitting these jobs and flushing them in batches we prevent layout thrashing.\n\n    layoutSync.prepare(function () {\n      // Unset the transform of all layoutTransition components so we can accurately measure\n      // the target bounding box\n      transform = element.style.transform;\n      element.style.transform = \"\";\n    });\n    layoutSync.read(function () {\n      // Read the target VisualInfo of all layoutTransition components\n      next = {\n        offset: offset.measure(element),\n        boundingBox: boundingBox.measure(element)\n      };\n      var nextPosition = readPositionStyle(element);\n      compare = getLayoutType(positionStyle, nextPosition, isPositionOnly);\n    });\n    layoutSync.render(function () {\n      // Reverse the layout delta of all newly laid-out layoutTransition components into their\n      // prev visual state and then animate them into their new one using transforms.\n      var prevLayout = compare.getLayout(prev);\n      var nextLayout = compare.getLayout(next);\n      var delta = calcDelta(prevLayout, nextLayout);\n      var hasAnyChanged = delta.x || delta.y || delta.width || delta.height;\n\n      if (!hasAnyChanged) {\n        // If layout hasn't changed, reapply the transform and get out of here.\n        transform && (element.style.transform = transform);\n        return;\n      }\n\n      styler(element).set({\n        originX: delta.originX,\n        originY: delta.originY\n      });\n      syncRenderSession.open();\n      var target = {};\n      var transition = {};\n      var transitionDefinition = isResolver(layoutTransition) ? layoutTransition({\n        delta: delta\n      }) : layoutTransition;\n\n      function makeTransition(layoutKey, transformKey, targetValue, visualOrigin) {\n        // If this dimension hasn't changed, early return\n        var deltaKey = isSizeKey(layoutKey) ? layoutKey : transformKey;\n        if (!delta[deltaKey]) return;\n        var baseTransition = typeof transitionDefinition === \"boolean\" ? __assign({}, getDefaultLayoutTransition(isPositionOnly)) : transitionDefinition;\n        var value = values.get(transformKey, targetValue);\n        var velocity = value.getVelocity();\n        transition[transformKey] = baseTransition[transformKey] ? __assign({}, baseTransition[transformKey]) : __assign({}, baseTransition);\n\n        if (transition[transformKey].velocity === undefined) {\n          transition[transformKey].velocity = velocity || 0;\n        } // The target value of all transforms is the default value of that prop (ie x = 0, scaleX = 1)\n        // This is because we're inverting the layout change with `transform` and then animating to `transform: none`\n\n\n        target[transformKey] = targetValue;\n        var offsetToApply = !isSizeKey(layoutKey) && compare === offset ? value.get() : 0;\n        value.set(visualOrigin + offsetToApply);\n      }\n\n      makeTransition(\"left\", \"x\", 0, delta.x);\n      makeTransition(\"top\", \"y\", 0, delta.y);\n\n      if (!isPositionOnly) {\n        makeTransition(\"width\", \"scaleX\", 1, prev.boundingBox.width / next.boundingBox.width);\n        makeTransition(\"height\", \"scaleY\", 1, prev.boundingBox.height / next.boundingBox.height);\n      }\n\n      target.transition = transition; // Only start the transition if `transitionDefinition` isn't `false`. Otherwise we want\n      // to leave the values in their newly-inverted state and let the user cope with the rest.\n\n      transitionDefinition && controls.start(target); // Force a render to ensure there's no visual flickering\n\n      syncRenderSession.flush();\n    });\n    return null;\n  };\n\n  LayoutAnimation.prototype.componentDidUpdate = function () {\n    layoutSync.flush();\n  };\n\n  LayoutAnimation.prototype.render = function () {\n    return null;\n  };\n\n  LayoutAnimation.contextType = SyncLayoutContext;\n  return LayoutAnimation;\n}(Component);\n\nvar Layout = {\n  key: \"layout\",\n  shouldRender: function (_a) {\n    var positionTransition = _a.positionTransition,\n        layoutTransition = _a.layoutTransition;\n    invariant(!(positionTransition && layoutTransition), \"Don't set both positionTransition and layoutTransition on the same component\");\n    return typeof window !== \"undefined\" && !!(positionTransition || layoutTransition);\n  },\n  Component: LayoutAnimation\n};\n/**\r\n * A list of all valid MotionProps\r\n *\r\n * @internalremarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\n\nvar validMotionProps = new Set([\"initial\", \"animate\", \"exit\", \"style\", \"variants\", \"transition\", \"transformTemplate\", \"transformValues\", \"custom\", \"inherit\", \"static\", \"positionTransition\", \"layoutTransition\", \"onAnimationStart\", \"onAnimationComplete\", \"onUpdate\", \"onDragStart\", \"onDrag\", \"onDragEnd\", \"onDirectionLock\", \"onDragTransitionEnd\", \"drag\", \"dragControls\", \"dragListener\", \"dragConstraints\", \"dragDirectionLock\", \"dragElastic\", \"dragMomentum\", \"dragPropagation\", \"dragTransition\", \"_dragValueX\", \"_dragValueY\", \"_dragTransitionControls\", \"dragOriginX\", \"dragOriginY\", \"onPan\", \"onPanStart\", \"onPanEnd\", \"onPanSessionStart\", \"onTap\", \"onTapStart\", \"onTapCancel\", \"whileHover\", \"whileTap\", \"onHoverEnd\", \"onHoverStart\"]);\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\n\nfunction isValidMotionProp(key) {\n  return validMotionProps.has(key);\n}\n\nvar AnimatePropType;\n\n(function (AnimatePropType) {\n  AnimatePropType[\"Target\"] = \"Target\";\n  AnimatePropType[\"VariantLabel\"] = \"VariantLabel\";\n  AnimatePropType[\"AnimationSubscription\"] = \"AnimationSubscription\";\n})(AnimatePropType || (AnimatePropType = {}));\n\nfunction shallowCompare(next, prev) {\n  if (prev === null) return false;\n  var prevLength = prev.length;\n  if (prevLength !== next.length) return false;\n\n  for (var i = 0; i < prevLength; i++) {\n    if (prev[i] !== next[i]) return false;\n  }\n\n  return true;\n}\n\nvar hasUpdated = function (prev, next) {\n  return next !== undefined && (Array.isArray(prev) && Array.isArray(next) ? !shallowCompare(next, prev) : prev !== next);\n};\n\nfunction targetWithoutTransition(_a, mergeTransitionEnd) {\n  if (mergeTransitionEnd === void 0) {\n    mergeTransitionEnd = false;\n  }\n\n  var transition = _a.transition,\n      transitionEnd = _a.transitionEnd,\n      target = __rest(_a, [\"transition\", \"transitionEnd\"]);\n\n  return mergeTransitionEnd ? __assign(__assign({}, target), transitionEnd) : target;\n}\n/**\r\n * Handle the `animate` prop when its an object of values, ie:\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ opacity: 1 }} />\r\n * ```\r\n *\r\n * @internalremarks\r\n * It might be worth consolidating this with `use-variants`\r\n *\r\n * ```jsx\r\n * <motion.div animate=\"visible\" />\r\n * ```\r\n *\r\n * @param target\r\n * @param controls\r\n * @param values\r\n * @param transition\r\n *\r\n * @internal\r\n */\n\n\nfunction useAnimateProp(targetAndTransition, controls, values, defaultTransition) {\n  var isInitialRender = useRef(true);\n  var prevValues = useRef(null);\n\n  if (!prevValues.current) {\n    prevValues.current = targetWithoutTransition(targetAndTransition, true);\n  }\n\n  useEffect(function () {\n    var targetToAnimate = {}; // These are the values we're actually animating\n\n    var animatingTarget = targetWithoutTransition(targetAndTransition); // This is the target as it'll be once transitionEnd values are applied\n\n    var finalTarget = targetWithoutTransition(targetAndTransition, true); // Detect which values have changed between renders\n\n    for (var key in animatingTarget) {\n      // This value should animate on mount if this value doesn't already exist (wasn't\n      // defined in `style` or `initial`) or if it does exist and it's already changed.\n      var shouldAnimateOnMount = isInitialRender.current && (!values.has(key) || values.get(key).get() !== finalTarget[key]); // If this value has updated between renders or it's we're animating this value on mount,\n      // add it to the animate target.\n\n      var isValidValue = finalTarget[key] !== null;\n      var valueHasUpdated = hasUpdated(prevValues.current[key], finalTarget[key]);\n\n      if (isValidValue && (valueHasUpdated || shouldAnimateOnMount)) {\n        targetToAnimate[key] = animatingTarget[key];\n      }\n    }\n\n    isInitialRender.current = false;\n    prevValues.current = __assign(__assign({}, prevValues.current), finalTarget);\n\n    if (Object.keys(targetToAnimate).length) {\n      controls.start(__assign(__assign({}, targetToAnimate), {\n        transition: targetAndTransition.transition || defaultTransition,\n        transitionEnd: targetAndTransition.transitionEnd\n      }));\n    }\n  }, [targetAndTransition]);\n}\n\nvar labelsToArray = function (label) {\n  if (!label) {\n    return [];\n  }\n\n  if (Array.isArray(label)) {\n    return label;\n  }\n\n  return [label];\n};\n\nvar resolveVariantLabels = function (variant) {\n  var unresolvedVariant = variant instanceof MotionValue ? variant.get() : variant;\n  return Array.from(new Set(labelsToArray(unresolvedVariant)));\n};\n/**\r\n * Hooks in React sometimes accept a dependency array as their final argument. (ie useEffect/useMemo)\r\n * When values in this array change, React re-runs the dependency. However if the array\r\n * contains a variable number of items, React throws an error.\r\n */\n\n\nvar asDependencyList = function (list) {\n  return [list.join(\",\")];\n};\n\nvar hasVariantChanged = function (oldVariant, newVariant) {\n  return oldVariant.join(\",\") !== newVariant.join(\",\");\n};\n/**\r\n * Handle variants and the `animate` prop when its set as variant labels.\r\n *\r\n * @param initial - Initial variant(s)\r\n * @param animate - Variant(s) to animate to\r\n * @param inherit - `true` is inheriting animations from parent\r\n * @param controls - Animation controls\r\n *\r\n * @internal\r\n */\n\n\nfunction useVariants(initial, animate, inherit, controls) {\n  var targetVariants = resolveVariantLabels(animate);\n  var context = useContext(MotionContext);\n  var parentAlreadyMounted = context.hasMounted && context.hasMounted.current;\n  var hasMounted = useRef(false);\n  useEffect(function () {\n    var shouldAnimate = false;\n\n    if (inherit) {\n      // If we're inheriting variant changes and the parent has already\n      // mounted when this component loads, we need to manually trigger\n      // this animation.\n      shouldAnimate = !!parentAlreadyMounted;\n      targetVariants = resolveVariantLabels(context.animate);\n    } else {\n      shouldAnimate = hasMounted.current || hasVariantChanged(resolveVariantLabels(initial), targetVariants);\n    }\n\n    shouldAnimate && controls.start(targetVariants);\n    hasMounted.current = true;\n  }, asDependencyList(targetVariants));\n}\n/**\r\n * `useAnimationGroupSubscription` allows a component to subscribe to an\r\n * externally-created `AnimationControls`, created by the `useAnimation` hook.\r\n *\r\n * @param animation\r\n * @param controls\r\n *\r\n * @internal\r\n */\n\n\nfunction useAnimationGroupSubscription(animation, controls) {\n  var unsubscribe = useMemo(function () {\n    return animation.subscribe(controls);\n  }, [animation]);\n  useEffect(function () {\n    return function () {\n      unsubscribe && unsubscribe();\n    };\n  }, [unsubscribe]);\n}\n\nvar _a$1, _b;\n\nvar AnimatePropComponents = (_a$1 = {}, _a$1[AnimatePropType.Target] = makeRenderlessComponent(function (_a) {\n  var animate = _a.animate,\n      controls = _a.controls,\n      values = _a.values,\n      transition = _a.transition;\n  return useAnimateProp(animate, controls, values, transition);\n}), _a$1[AnimatePropType.VariantLabel] = makeRenderlessComponent(function (_a) {\n  var animate = _a.animate,\n      _b = _a.inherit,\n      inherit = _b === void 0 ? true : _b,\n      controls = _a.controls,\n      initial = _a.initial;\n  return useVariants(initial, animate, inherit, controls);\n}), _a$1[AnimatePropType.AnimationSubscription] = makeRenderlessComponent(function (_a) {\n  var animate = _a.animate,\n      controls = _a.controls;\n  return useAnimationGroupSubscription(animate, controls);\n}), _a$1);\n\nvar isVariantLabel$1 = function (prop) {\n  return Array.isArray(prop) || typeof prop === \"string\";\n};\n\nvar isAnimationSubscription = function (_a) {\n  var animate = _a.animate;\n  return animate instanceof AnimationControls;\n};\n\nvar animationProps = [\"initial\", \"animate\", \"whileTap\", \"whileHover\"];\nvar animatePropTypeTests = (_b = {}, _b[AnimatePropType.Target] = function (props) {\n  return props.animate !== undefined && !isVariantLabel$1(props.animate) && !isAnimationSubscription(props);\n}, _b[AnimatePropType.VariantLabel] = function (props) {\n  return props.variants !== undefined || animationProps.some(function (key) {\n    return typeof props[key] === \"string\";\n  });\n}, _b[AnimatePropType.AnimationSubscription] = isAnimationSubscription, _b);\n\nvar getAnimationComponent = function (props) {\n  var animatePropType = undefined;\n\n  for (var key in AnimatePropType) {\n    if (animatePropTypeTests[key](props)) {\n      animatePropType = key;\n    }\n  }\n\n  return animatePropType ? AnimatePropComponents[animatePropType] : undefined;\n};\n/**\r\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\r\n * to access information about whether it's still present in the React tree.\r\n *\r\n * ```jsx\r\n * import { usePresence } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const [isPresent, safeToRemove] = usePresence()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent setTimeout(safeToRemove, 1000)\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\r\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\r\n *\r\n * @public\r\n */\n\n\nfunction usePresence() {\n  var context = useContext(PresenceContext);\n  if (context === null) return [true];\n  var isPresent = context.isPresent,\n      onExitComplete = context.onExitComplete,\n      register = context.register;\n  useEffect(register, []);\n  return !isPresent && onExitComplete ? [false, onExitComplete] : [true];\n}\n\nvar Exit = {\n  key: \"exit\",\n  shouldRender: function (props) {\n    return !!props.exit && !checkShouldInheritVariant(props);\n  },\n  Component: makeRenderlessComponent(function (props) {\n    var _a;\n\n    var animate = props.animate,\n        controls = props.controls,\n        exit = props.exit;\n\n    var _b = usePresence(),\n        isPresent = _b[0],\n        onExitComplete = _b[1];\n\n    var presenceContext = useContext(PresenceContext);\n    var isPlayingExitAnimation = useRef(false);\n    var custom = ((_a = presenceContext) === null || _a === void 0 ? void 0 : _a.custom) !== undefined ? presenceContext.custom : props.custom;\n    useEffect(function () {\n      if (!isPresent) {\n        if (!isPlayingExitAnimation.current && exit) {\n          controls.setProps(__assign(__assign({}, props), {\n            custom: custom\n          }));\n          controls.start(exit).then(onExitComplete);\n        }\n\n        isPlayingExitAnimation.current = true;\n      } else if (isPlayingExitAnimation.current && animate && !(animate instanceof AnimationControls)) {\n        controls.start(animate);\n      }\n\n      if (isPresent) {\n        isPlayingExitAnimation.current = false;\n      }\n    }, [isPresent]);\n  })\n};\n\nvar isPropValid = function (key) {\n  return !isValidMotionProp(key);\n};\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\n\n\ntry {\n  var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\n\n  isPropValid = function (key) {\n    // Handle events explicitly as Emotion validates them all as true\n    if (key.startsWith(\"on\")) {\n      return !isValidMotionProp(key);\n    } else {\n      return emotionIsPropValid_1(key);\n    }\n  };\n} catch (_a) {// We don't need to actually do anything here - the fallback is the existing `isPropValid`.\n}\n\nfunction filterValidProps(props) {\n  var domProps = {};\n\n  for (var key in props) {\n    if (isPropValid(key)) {\n      domProps[key] = props[key];\n    }\n  }\n\n  return domProps;\n}\n\nvar buildHTMLProps = function (values, style, isStatic, isDrag) {\n  // The `any` isn't ideal but it is the type of createElement props argument\n  var props = {\n    style: buildStyleAttr(values, style, isStatic)\n  };\n\n  if (isDrag) {\n    // Disable text selection\n    props.style.userSelect = \"none\"; // Disable the ghost element when a user drags\n\n    props.draggable = false;\n  }\n\n  return props;\n};\n\nvar buildSVGProps = function (values, style) {\n  var motionValueStyles = resolveCurrent(values);\n  var props = buildSVGAttrs(motionValueStyles, undefined, undefined, undefined, undefined, false);\n  props.style = __assign(__assign({}, style), props.style);\n  return props;\n};\n\nvar functionalityComponents = [Layout, Drag, Gestures, Exit];\nvar numFunctionalityComponents = functionalityComponents.length;\n/**\r\n * Create a configuration for `motion` components that provides DOM-specific functionality.\r\n *\r\n * @internal\r\n */\n\nfunction createDomMotionConfig(Component) {\n  var isDOM = typeof Component === \"string\";\n  var isSVG = isDOM && svgElements.indexOf(Component) !== -1;\n  return {\n    renderComponent: function (ref, style, values, props, isStatic) {\n      var forwardedProps = isDOM ? filterValidProps(props) : props;\n      var staticVisualStyles = isSVG ? buildSVGProps(values, style) : buildHTMLProps(values, style, isStatic, !!props.drag);\n      return createElement(Component, __assign(__assign(__assign({}, forwardedProps), {\n        ref: ref\n      }), staticVisualStyles));\n    },\n\n    /**\r\n     * loadFunctionalityComponents gets used by the `motion` component\r\n     *\r\n     * Each functionality component gets provided the `ref`, animation controls and the `MotionValuesMap`\r\n     * generated for that component, as well as all the `props` passed to it by the user.\r\n     *\r\n     * The pattern used to determine whether to load and use each piece of functionality is\r\n     * consistent (should render? Then push component) and could be used to extend functionality.\r\n     *\r\n     * By exposing a mutable piece of memory via an API like `extendMotionComponent` we could\r\n     * allow users to add `FunctionalComponentDefinition`s. This would allow us to offer file size\r\n     * reductions by shipping an entry point that doesn't load gesture and drag functionality, and\r\n     * also offer a way for users to develop plugins/other functionality. Because these functionalities\r\n     * are loaded as components, we can look into using Suspense for this purpose.\r\n     *\r\n     * For user-defined functionality we'd need to allow\r\n     *  1) User-defined prop typing (extending `P`)\r\n     *  2) User-defined \"clean props\" function that removes their plugin's props before being passed to the DOM.\r\n     */\n    loadFunctionalityComponents: function (ref, values, props, context, controls, inherit) {\n      var activeComponents = []; // TODO: Consolidate Animation functionality loading strategy with other functionality components\n\n      var Animation = getAnimationComponent(props);\n\n      if (Animation) {\n        activeComponents.push(createElement(Animation, {\n          key: \"animation\",\n          initial: props.initial,\n          animate: props.animate,\n          variants: props.variants,\n          transition: props.transition,\n          controls: controls,\n          inherit: inherit,\n          values: values\n        }));\n      }\n\n      for (var i = 0; i < numFunctionalityComponents; i++) {\n        var _a = functionalityComponents[i],\n            shouldRender = _a.shouldRender,\n            key = _a.key,\n            Component_1 = _a.Component;\n\n        if (shouldRender(props, context)) {\n          activeComponents.push(createElement(Component_1, __assign({\n            key: key\n          }, props, {\n            parentContext: context,\n            values: values,\n            controls: controls,\n            innerRef: ref\n          })));\n        }\n      }\n\n      return activeComponents;\n    },\n    getValueControlsConfig: function (ref, values) {\n      return {\n        values: values,\n        readValueFromSource: function (key) {\n          return styler(ref.current).get(key);\n        },\n        // TODO: This is a good second source of plugins. This function contains the CSS variable\n        // and unit conversion support. These functions share a common signature. We could make another\n        // API for adding these.\n        makeTargetAnimatable: parseDomVariant(values, ref)\n      };\n    }\n  };\n}\n\nvar htmlMotionComponents = htmlElements.reduce(function (acc, Component) {\n  var config = createDomMotionConfig(Component); // Suppress \"Expression produces a union type that is too complex to represent\" error\n  // @ts-ignore\n\n  acc[Component] = createMotionComponent(config);\n  return acc;\n}, {});\nvar svgMotionComponents = svgElements.reduce(function (acc, Component) {\n  // Suppress \"Expression produces a union type that is too complex to represent\" error\n  // @ts-ignore\n  acc[Component] = createMotionComponent(createDomMotionConfig(Component));\n  return acc;\n}, {});\n/**\r\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\r\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\r\n *\r\n * @internalremarks\r\n *\r\n * I'd like to make it possible for these to be loaded \"on demand\" - to reduce bundle size by only\r\n * including HTML/SVG stylers, animation and/or gesture support when necessary.\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ x: 100 }} />\r\n *\r\n * <motion.p animate={{ height: 200 }} />\r\n *\r\n * <svg><motion.circle r={10} animate={{ r: 20 }} /></svg>\r\n * ```\r\n *\r\n * @public\r\n */\n\nvar motion = __assign(__assign({\n  /**\r\n   * Convert a custom React component into a `motion` component.\r\n   *\r\n   * It can also accept a string, to create [custom DOM elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements).\r\n   *\r\n   * ```jsx\r\n   * const Component = React.forwardRef((props: Props, ref) => {\r\n   *   return <div ref={ref} />\r\n   * })\r\n   *\r\n   * const MotionComponent = motion.custom<Props>(Component)\r\n   * ```\r\n   *\r\n   * @param Component -\r\n   */\n  custom: function custom(Component) {\n    return createMotionComponent(createDomMotionConfig(Component));\n  }\n}, htmlMotionComponents), svgMotionComponents);\n/**\r\n * Creates a `MotionValue` to track the state and velocity of a value.\r\n *\r\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * export function MyComponent() {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <Frame scale={scale} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <motion.div style={{ scale }} />\r\n * }\r\n * ```\r\n *\r\n * @param initial - The initial state.\r\n *\r\n * @public\r\n */\n\n\nfunction useMotionValue(initial) {\n  return useConstant(function () {\n    return motionValue(initial);\n  });\n}\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\n\n\nfunction unwrapMotionValue(value) {\n  var unwrappedValue = value instanceof MotionValue ? value.get() : value;\n  return isCustomValue(unwrappedValue) ? unwrappedValue.toValue() : unwrappedValue;\n}\n\nvar isCustomValueType = function (v) {\n  return typeof v === \"object\" && v.mix;\n};\n\nvar getMixer = function (v) {\n  return isCustomValueType(v) ? v.mix : undefined;\n};\n\nfunction transform() {\n  var args = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    args[_i] = arguments[_i];\n  }\n\n  var useImmediate = !Array.isArray(args[0]);\n  var argOffset = useImmediate ? 0 : -1;\n  var inputValue = args[0 + argOffset];\n  var inputRange = args[1 + argOffset];\n  var outputRange = args[2 + argOffset];\n  var options = args[3 + argOffset];\n  var interpolator = interpolate(inputRange, outputRange, __assign({\n    mixer: getMixer(outputRange[0])\n  }, options));\n  return useImmediate ? interpolator(inputValue) : interpolator;\n}\n\nvar isTransformer = function (v) {\n  return typeof v === \"function\";\n};\n\nvar noop$1 = function (v) {\n  return v;\n};\n\nfunction useTransform(parent, customTransform, to, options) {\n  var value = useRef(null);\n  var comparitor = [parent];\n  var transformer = noop$1;\n\n  if (isTransformer(customTransform)) {\n    transformer = customTransform;\n  } else if (Array.isArray(to)) {\n    var from = customTransform;\n    transformer = transform(from, to, options);\n    comparitor = [parent, from.join(\",\"), to.join(\",\")];\n  }\n\n  return useMemo(function () {\n    if (value.current) value.current.destroy();\n    value.current = parent.addChild({\n      transformer: transformer\n    });\n    return value.current;\n  }, comparitor);\n} // Keep things reasonable and avoid scale: Infinity. In practise we might need\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\n// to simply hide content at unreasonable scales.\n\n\nvar maxScale = 100000;\n\nvar invertScale = function (scale) {\n  return scale > 0.001 ? 1 / scale : maxScale;\n};\n/**\r\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\r\n * of their respective parent scales.\r\n *\r\n * This is useful for undoing the distortion of content when scaling a parent component.\r\n *\r\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\r\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\r\n * of those instead.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = () => {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <motion.div style={{ scaleX, scaleY }} />\r\n * }\r\n * ```\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * function MyComponent() {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction useInvertedScale(scale) {\n  var parentScaleX = useMotionValue(1);\n  var parentScaleY = useMotionValue(1);\n  var values = useContext(MotionContext).values;\n  invariant(!!(scale || values), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\n\n  if (scale) {\n    parentScaleX = scale.scaleX || parentScaleX;\n    parentScaleY = scale.scaleY || parentScaleY;\n  } else if (values) {\n    parentScaleX = values.get(\"scaleX\", 1);\n    parentScaleY = values.get(\"scaleY\", 1);\n  }\n\n  var scaleX = useTransform(parentScaleX, invertScale);\n  var scaleY = useTransform(parentScaleY, invertScale);\n  return {\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nfunction useOnChange(value, callback) {\n  useEffect(function () {\n    return isMotionValue(value) ? value.onChange(callback) : undefined;\n  }, [value]);\n}\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\n\n\nfunction useSpring(source, config) {\n  if (config === void 0) {\n    config = {};\n  }\n\n  var activeSpringAnimation = useRef(null);\n  var value = useMotionValue(isMotionValue(source) ? source.get() : source);\n  useMemo(function () {\n    return value.attach(function (v, set) {\n      if (activeSpringAnimation.current) {\n        activeSpringAnimation.current.stop();\n      }\n\n      activeSpringAnimation.current = spring(__assign({\n        from: value.get(),\n        to: v,\n        velocity: value.getVelocity()\n      }, config)).start(set);\n      return value.get();\n    });\n  }, Object.values(config));\n  useOnChange(source, function (v) {\n    return value.set(parseFloat(v));\n  });\n  return value;\n}\n\nfunction createScrollMotionValues() {\n  return {\n    scrollX: motionValue(0),\n    scrollY: motionValue(0),\n    scrollXProgress: motionValue(0),\n    scrollYProgress: motionValue(0)\n  };\n}\n\nfunction setProgress(offset, maxOffset, value) {\n  value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\n}\n\nfunction createScrollUpdater(values, getOffsets) {\n  var update = function () {\n    var _a = getOffsets(),\n        xOffset = _a.xOffset,\n        yOffset = _a.yOffset,\n        xMaxOffset = _a.xMaxOffset,\n        yMaxOffset = _a.yMaxOffset; // Set absolute positions\n\n\n    values.scrollX.set(xOffset);\n    values.scrollY.set(yOffset); // Set 0-1 progress\n\n    setProgress(xOffset, xMaxOffset, values.scrollXProgress);\n    setProgress(yOffset, yMaxOffset, values.scrollYProgress);\n  };\n\n  update();\n  return update;\n}\n\nvar isBrowser$2 = typeof window !== \"undefined\";\nvar useIsomorphicLayoutEffect = isBrowser$2 ? useLayoutEffect : useEffect;\n\nvar getElementScrollOffsets = function (element) {\n  return function () {\n    return {\n      xOffset: element.scrollLeft,\n      yOffset: element.scrollTop,\n      xMaxOffset: element.scrollWidth - element.offsetWidth,\n      yMaxOffset: element.scrollHeight - element.offsetHeight\n    };\n  };\n};\n/**\r\n * Returns MotionValues that update when the provided element scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useElementScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const ref = React.useRef()\r\n *   const { scrollYProgress } = useElementScroll(ref)\r\n *\r\n *   return (\r\n *     <Frame ref={ref}>\r\n *       <Frame scaleX={scrollYProgress} />\r\n *     </Frame>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const ref = useRef()\r\n *   const { scrollYProgress } = useElementScroll(ref)\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <motion.div style={{ scaleX: scrollYProgress }} />\r\n *     </div>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction useElementScroll(ref) {\n  var values = useConstant(createScrollMotionValues);\n  useIsomorphicLayoutEffect(function () {\n    var element = ref.current;\n    invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\n    if (!element) return;\n    var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\n    var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues, {\n      passive: true\n    });\n    var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\n    return function () {\n      scrollListener && scrollListener();\n      resizeListener && resizeListener();\n    };\n  }, []);\n  return values;\n}\n\nvar viewportScrollValues = createScrollMotionValues();\n\nfunction getViewportScrollOffsets() {\n  return {\n    xOffset: window.pageXOffset,\n    yOffset: window.pageYOffset,\n    xMaxOffset: document.body.clientWidth - window.innerWidth,\n    yMaxOffset: document.body.clientHeight - window.innerHeight\n  };\n}\n\nvar hasListeners = false;\n\nfunction addEventListeners() {\n  hasListeners = true;\n  if (typeof window === \"undefined\") return;\n  var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\n  addDomEvent(window, \"scroll\", updateScrollValues, {\n    passive: true\n  });\n  addDomEvent(window, \"resize\", updateScrollValues);\n}\n/**\r\n * Returns MotionValues that update when the viewport scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useViewportScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <Frame scaleX={scrollYProgress} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction useViewportScroll() {\n  useIsomorphicLayoutEffect(function () {\n    !hasListeners && addEventListeners();\n  }, []);\n  return viewportScrollValues;\n}\n/**\r\n * Creates `AnimationControls`, which can be used to manually start, stop\r\n * and sequence animations on one or more components.\r\n *\r\n * The returned `AnimationControls` should be passed to the `animate` property\r\n * of the components you want to animate.\r\n *\r\n * These components can then be animated with the `start` method.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { Frame, useAnimation } from 'framer'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <Frame animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { motion, useAnimation } from 'framer-motion'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <motion.div animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @returns Animation controller with `start` and `stop` methods\r\n *\r\n * @public\r\n */\n\n\nfunction useAnimation() {\n  var animationControls = useConstant(function () {\n    return new AnimationControls();\n  });\n  useEffect(function () {\n    animationControls.mount();\n    return function () {\n      return animationControls.unmount();\n    };\n  }, []);\n  return animationControls;\n}\n/**\r\n * Experimental API.\r\n *\r\n * Makes an animated version of `useState`.\r\n *\r\n * @remarks\r\n *\r\n * When the returned state setter is called, values will be animated to their new target.\r\n *\r\n * This allows the animation of arbitrary React components.\r\n *\r\n * **Note:** When animating DOM components, it's always preferable to use the `animate` prop, as Framer\r\n * will bypass React's rendering cycle with one optimised for 60fps motion. This Hook is specifically\r\n * for animating props on arbitrary React components, or for animating text content.\r\n *\r\n * ```jsx\r\n * const [state, setState] = useAnimatedState({ percentage: 0 })\r\n *\r\n * return (\r\n *   <Graph\r\n *     percentage={state.percentage}\r\n *     onTap={() => setState({ percentage: 50 })}\r\n *   />\r\n * )\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * TODO:\r\n * - Make hook accept a typed version of Target that accepts any value (not just DOM values)\r\n * - Allow hook to accept single values. ie useAnimatedState(0)\r\n * - Allow providing MotionValues via initialState.\r\n *\r\n * @beta\r\n */\n\n\nfunction useAnimatedState(initialState) {\n  var _a = useState(initialState),\n      animationState = _a[0],\n      onUpdate = _a[1];\n\n  var config = useConstant(function () {\n    return {\n      onUpdate: onUpdate\n    };\n  });\n  var values = useMotionValues(config);\n  var controls = useValueAnimationControls({\n    values: values,\n    readValueFromSource: function (key) {\n      return animationState[key];\n    }\n  }, {}, false);\n  var startAnimation = useConstant(function () {\n    return function (animationDefinition) {\n      return controls.start(animationDefinition);\n    };\n  });\n  useEffect(function () {\n    values.mount();\n    return function () {\n      return values.unmount();\n    };\n  }, []);\n  return [animationState, startAnimation];\n}\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { Frame, useCycle } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <Frame\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <motion.div\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\n\n\nfunction useCycle() {\n  var items = [];\n\n  for (var _i = 0; _i < arguments.length; _i++) {\n    items[_i] = arguments[_i];\n  } // TODO: After Framer X beta, remove this warning\n\n\n  warning(items.length > 1, \"useCycle syntax has changed. `useCycle([0, 1, 2])` becomes `useCycle(0, 1, 2)`\");\n  var index = useRef(0);\n\n  var _a = useState(items[index.current]),\n      item = _a[0],\n      setItem = _a[1];\n\n  return [item, function (next) {\n    index.current = typeof next !== \"number\" ? wrap(0, items.length, index.current + 1) : next;\n    setItem(items[index.current]);\n  }];\n}\n/**\r\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <Frame onTapStart={startDrag} />\r\n *     <Frame drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onMouseDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nvar DragControls = function () {\n  function DragControls() {\n    this.componentControls = new Set();\n  }\n  /**\r\n   * Subscribe a component's internal `ComponentDragControls` to the user-facing API.\r\n   *\r\n   * @internal\r\n   */\n\n\n  DragControls.prototype.subscribe = function (controls) {\n    var _this = this;\n\n    this.componentControls.add(controls);\n    return function () {\n      return _this.componentControls.delete(controls);\n    };\n  };\n  /**\r\n   * Start a drag gesture on every `motion` component that has this set of drag controls\r\n   * passed into it via the `dragControls` prop.\r\n   *\r\n   * ```jsx\r\n   * dragControls.start(e, {\r\n   *   snapToCursor: true\r\n   * })\r\n   * ```\r\n   *\r\n   * @param event - A mouse/touch/pointer event.\r\n   * @param options - Options\r\n   *\r\n   * @public\r\n   */\n\n\n  DragControls.prototype.start = function (event, options) {\n    this.componentControls.forEach(function (controls) {\n      controls.start(event.nativeEvent || event, options);\n    });\n  };\n\n  return DragControls;\n}();\n\nvar createDragControls = function () {\n  return new DragControls();\n};\n/**\r\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\r\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\r\n * might want to initiate that dragging from a different component than the draggable one.\r\n *\r\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\r\n * the draggable component's `dragControls` prop. It exposes a `start` method\r\n * that can start dragging from pointer events on other components.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <Frame onTapStart={startDrag} />\r\n *     <Frame drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onMouseDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\n\n\nfunction useDragControls() {\n  return useConstant(createDragControls);\n}\n\nvar PresenceChild = function (_a) {\n  var children = _a.children,\n      initial = _a.initial,\n      isPresent = _a.isPresent,\n      onExitComplete = _a.onExitComplete,\n      custom = _a.custom;\n  var numPresenceChildren = useRef(0);\n  var numExitComplete = useRef(0);\n  var context = {\n    initial: initial,\n    isPresent: isPresent,\n    custom: custom,\n    onExitComplete: function () {\n      numExitComplete.current++;\n      var allComplete = numExitComplete.current >= numPresenceChildren.current;\n      onExitComplete && allComplete && onExitComplete();\n    }\n  };\n  var register = useMemo(function () {\n    numExitComplete.current = 0;\n    return function () {\n      numPresenceChildren.current++;\n      return function () {\n        return numPresenceChildren.current--;\n      };\n    };\n  }, [isPresent]);\n  return createElement(PresenceContext.Provider, {\n    value: __assign(__assign({}, context), {\n      register: register\n    })\n  }, children);\n};\n\nfunction getChildKey(child) {\n  return child.key || \"\";\n}\n\nfunction updateChildLookup(children, allChildren) {\n  var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\n  children.forEach(function (child) {\n    var key = getChildKey(child);\n\n    if (process.env.NODE_ENV !== \"production\" && seenChildren) {\n      if (seenChildren.has(key)) {\n        console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\n      }\n\n      seenChildren.add(key);\n    }\n\n    allChildren.set(key, child);\n  });\n}\n\nfunction onlyElements(children) {\n  var filtered = []; // We use forEach here instead of map as map mutates the component key by preprending `.$`\n\n  Children.forEach(children, function (child) {\n    if (isValidElement(child)) filtered.push(child);\n  });\n  return filtered;\n}\n/**\r\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\r\n *\r\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\r\n *\r\n * @library\r\n *\r\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { Frame, AnimatePresence } from 'framer'\r\n *\r\n * // As items are added and removed from `items`\r\n * export function Items({ items }) {\r\n *   return (\r\n *     <AnimatePresence>\r\n *       {items.map(item => (\r\n *         <Frame\r\n *           key={item.id}\r\n *           initial={{ opacity: 0 }}\r\n *           animate={{ opacity: 1 }}\r\n *           exit={{ opacity: 0 }}\r\n *         />\r\n *       ))}\r\n *     </AnimatePresence>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * @motion\r\n *\r\n * Any `motion` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\r\n * once all `motion` components have finished animating out. Likewise, any components using\r\n * `usePresence` all need to call `safeToRemove`.\r\n *\r\n * @public\r\n */\n\n\nvar AnimatePresence = function (_a) {\n  var children = _a.children,\n      custom = _a.custom,\n      _b = _a.initial,\n      initial = _b === void 0 ? true : _b,\n      onExitComplete = _a.onExitComplete,\n      exitBeforeEnter = _a.exitBeforeEnter; // We want to force a re-render once all exiting animations have finished. We\n  // either use a local forceUpdate function, or one from a parent context if it exists.\n\n  var localForceUpdate = useForceUpdate();\n  var contextForceUpdate = useContext(SyncLayoutContext);\n  var forceUpdate = contextForceUpdate || localForceUpdate;\n  var isInitialRender = useRef(true); // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\n\n  var filteredChildren = onlyElements(children); // Keep a living record of the children we're actually rendering so we\n  // can diff to figure out which are entering and exiting\n\n  var presentChildren = useRef(filteredChildren); // A lookup table to quickly reference components by key\n\n  var allChildren = useRef(new Map()).current; // A living record of all currently exiting components.\n\n  var exiting = useRef(new Set()).current;\n  updateChildLookup(filteredChildren, allChildren); // If this is the initial component render, just deal with logic surrounding whether\n  // we play onMount animations or not.\n\n  if (isInitialRender.current) {\n    isInitialRender.current = false;\n    return createElement(Fragment, null, filteredChildren.map(function (child) {\n      return createElement(PresenceChild, {\n        key: getChildKey(child),\n        isPresent: true,\n        initial: initial ? undefined : false\n      }, child);\n    }));\n  } // If this is a subsequent render, deal with entering and exiting children\n\n\n  var childrenToRender = __spreadArrays(filteredChildren); // Diff the keys of the currently-present and target children to update our\n  // exiting list.\n\n\n  var presentKeys = presentChildren.current.map(getChildKey);\n  var targetKeys = filteredChildren.map(getChildKey); // Diff the present children with our target children and mark those that are exiting\n\n  var numPresent = presentKeys.length;\n\n  for (var i = 0; i < numPresent; i++) {\n    var key = presentKeys[i];\n\n    if (targetKeys.indexOf(key) === -1) {\n      exiting.add(key);\n    } else {\n      // In case this key has re-entered, remove from the exiting list\n      exiting.delete(key);\n    }\n  } // If we currently have exiting children, and we're deferring rendering incoming children\n  // until after all current children have exiting, empty the childrenToRender array\n\n\n  if (exitBeforeEnter && exiting.size) {\n    childrenToRender = [];\n  } // Loop through all currently exiting components and clone them to overwrite `animate`\n  // with any `exit` prop they might have defined.\n\n\n  exiting.forEach(function (key) {\n    // If this component is actually entering again, early return\n    if (targetKeys.indexOf(key) !== -1) return;\n    var child = allChildren.get(key);\n    if (!child) return;\n    var insertionIndex = presentKeys.indexOf(key);\n\n    var onExit = function () {\n      exiting.delete(key); // Remove this child from the present children\n\n      var removeIndex = presentChildren.current.findIndex(function (child) {\n        return child.key === key;\n      });\n      presentChildren.current.splice(removeIndex, 1); // Defer re-rendering until all exiting children have indeed left\n\n      if (!exiting.size) {\n        presentChildren.current = filteredChildren;\n        forceUpdate();\n        onExitComplete && onExitComplete();\n      }\n    };\n\n    childrenToRender.splice(insertionIndex, 0, createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: false,\n      onExitComplete: onExit,\n      custom: custom\n    }, child));\n  }); // Add `MotionContext` even to children that don't need it to ensure we're rendering\n  // the same tree between renders\n\n  childrenToRender = childrenToRender.map(function (child) {\n    var key = child.key;\n    return exiting.has(key) ? child : createElement(PresenceChild, {\n      key: getChildKey(child),\n      isPresent: true\n    }, child);\n  });\n  presentChildren.current = childrenToRender;\n\n  if (process.env.NODE_ENV !== \"production\" && exitBeforeEnter && childrenToRender.length > 1) {\n    console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\n  }\n\n  return createElement(Fragment, null, exiting.size ? childrenToRender : childrenToRender.map(function (child) {\n    return cloneElement(child);\n  }));\n}; // Does this device prefer reduced motion? Returns `null` server-side.\n\n\nvar prefersReducedMotion = motionValue(null);\n\nif (typeof window !== \"undefined\") {\n  if (window.matchMedia) {\n    var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\n\n    var setReducedMotionPreferences = function () {\n      return prefersReducedMotion.set(motionMediaQuery_1.matches);\n    };\n\n    motionMediaQuery_1.addListener(setReducedMotionPreferences);\n    setReducedMotionPreferences();\n  } else {\n    prefersReducedMotion.set(false);\n  }\n}\n\nfunction determineShouldReduceMotion(prefersReduced, isReducedMotion) {\n  return typeof isReducedMotion === \"boolean\" ? isReducedMotion : Boolean(prefersReduced);\n}\n/**\r\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\r\n *\r\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\r\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\r\n *\r\n * It will actively respond to changes and re-render your components with the latest setting.\r\n *\r\n * ```jsx\r\n * export function Sidebar({ isOpen }) {\r\n *   const shouldReduceMotion = useReducedMotion()\r\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\r\n *\r\n *   return (\r\n *     <motion.div animate={{\r\n *       opacity: isOpen ? 1 : 0,\r\n *       x: isOpen ? 0 : closedX\r\n *     }} />\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @return boolean\r\n *\r\n * @public\r\n */\n\n\nfunction useReducedMotion() {\n  var isReducedMotion = useContext(MotionContext).isReducedMotion;\n\n  var _a = useState(determineShouldReduceMotion(prefersReducedMotion.get(), isReducedMotion)),\n      shouldReduceMotion = _a[0],\n      setShouldReduceMotion = _a[1];\n\n  useEffect(function () {\n    return prefersReducedMotion.onChange(function (v) {\n      setShouldReduceMotion(determineShouldReduceMotion(v, isReducedMotion));\n    });\n  }, [setShouldReduceMotion, isReducedMotion]);\n  return shouldReduceMotion;\n}\n/**\r\n * Define accessibility options for a tree. Can be used to force the tree into Reduced Motion mode,\r\n * or disable device detection.\r\n *\r\n * @internal\r\n */\n\n\nfunction ReducedMotion(_a) {\n  var children = _a.children,\n      enabled = _a.enabled;\n  var context = useContext(MotionContext);\n  context = useMemo(function () {\n    return __assign(__assign({}, context), {\n      isReducedMotion: enabled\n    });\n  }, [enabled]);\n  return createElement(MotionContext.Provider, {\n    value: context\n  }, children);\n}\n\nexport { AnimatePresence, AnimationControls, DragControls, MotionContext, MotionPluginContext, MotionPlugins, MotionValue, Point, ReducedMotion, UnstableSyncLayout, animationControls, createMotionComponent, isValidMotionProp, motion, motionValue, transform, unwrapMotionValue, useAnimatedState, useAnimation, useCycle, useDomEvent, useDragControls, useElementScroll, useExternalRef, useGestures, useInvertedScale, useMotionValue, usePanGesture, usePresence, useReducedMotion, useSpring, useTapGesture, useTransform, useViewportScroll };","map":{"version":3,"sources":["/Users/yashowardhanshinde/Desktop/React/react-blog-template-master/node_modules/framer-motion/dist/framer-motion.es.js"],"names":["__assign","__spreadArrays","__rest","__extends","useRef","memo","useEffect","createContext","useContext","useMemo","forwardRef","createElement","Fragment","useCallback","useState","Component","useLayoutEffect","cloneElement","Children","isValidElement","sync","getFrameData","cancelSync","velocityPerSecond","distance","mix","interpolate","wrap","styler","createStylerFactory","buildStyleProperty","isTransformProp","transformProps","buildSVGAttrs","invariant","warning","color","complex","number","px","percent","degrees","vw","vh","action","delay","tween","spring","keyframes","keyframes$1","inertia","easingLookup","cubicBezier","linear","isFloat","value","isNaN","parseFloat","MotionValue","init","_a","_this","_b","transformer","parent","timeDelta","lastUpdated","canTrackVelocity","updateAndNotify","v","render","prev","current","updateSubscribers","forEach","notifySubscriber","children","setChild","renderSubscribers","delta","timestamp","postRender","scheduleVelocityCheck","subscriber","velocityCheck","child","set","prototype","addChild","config","Set","add","removeChild","delete","subscribeTo","subscriptions","subscription","updateSubscriber","onChange","onRenderRequest","attach","passiveEffect","get","getVelocity","start","animation","stop","Promise","resolve","stopAnimation","then","clearAnimation","isAnimating","destroy","clear","motionValue","opts","useConstant","ref","isMotionValue","updateStyler","onRead","onRender","state","onUpdate","MotionValuesMap","hasMounted","values","Map","unsubscribers","has","key","bindValueToOutput","defaultValue","undefined","callback","output","unsubscribeOnRender","unsubscribeOnChange","setOnUpdate","setTransformTemplate","transformTemplate","updateTransformTemplate","getTransformTemplate","mount","unmount","_value","unsubscribe","specialMotionValueProps","useMotionValues","props","motionValues","map","session","syncRenderSession","isOpen","open","flush","push","MountComponent","innerRef","isStatic","Element","domStyler","preparseOutput","enableHardwareAcceleration","Mount","createValueResolver","resolver","resolvedValues","resolveCurrent","transformOriginProps","isTransformOriginProp","buildStyleAttr","styleProp","motionValueStyles","transform","useMotionStyles","transformValues","style","prevMotionStyles","thisStyle","isKeyframesTarget","Array","isArray","isCustomValue","Boolean","toValue","resolveFinalValueInKeyframes","length","auto","test","parse","dimensionTypes","valueTypes","testValueType","type","getDimensionValueType","find","getValueType","underDampedSpring","stiffness","damping","restDelta","restSpeed","overDampedSpring","to","linearTween","ease","duration","defaultTransitions","x","y","z","rotate","rotateX","rotateY","rotateZ","scaleX","scaleY","scale","opacity","backgroundColor","default","getDefaultTransition","valueKey","transitionFactory","just","update","complete","easingDefinitionToFunction","definition","x1","y1","x2","y2","isEasingArray","isDurationAnimation","hasOwnProperty","isAnimatable","startsWith","secondsToMilliseconds","seconds","transitions","transitionOptionParser","from","velocity","easings","isTransitionDefined","when","delayChildren","staggerChildren","staggerDirection","transition","Object","keys","getTransitionDefinition","transitionDefinition","valueTransitionDefinition","preprocessOptions","getAnimation","target","origin","isOriginAnimatable","isTargetAnimatable","actionFactory","repeatDelay","startAnimation","delay$1","activeAnimation","animationFactory","valueDelay","options","animate","getCurrent","isTargetResolver","p","isVariantLabels","isNumericalString","ValueAnimationControls","readValueFromSource","makeTargetAnimatable","variants","baseTarget","overrides","resolvedOverrides","activeOverrides","hasValue","setProps","setVariants","setDefaultTransition","defaultTransition","setValues","_c","isActive","priority","_d","resolveVariant","transitionEnd","targetValue","checkForNewValues","newValueKeys","filter","numNewValues","i","getAnimatableNone","variant","custom","getHighestPriority","size","Math","max","apply","setOverride","overrideIndex","startOverride","override","clearOverride","highest","resetIsAnimating","highestOverride","overrideTarget","remainingValues","onStart","onComplete","applyVariantLabels","variantLabelList","reversedList","reverse","animateVariantLabels","animateVariant","animationDefinition","transitionOverride","_e","animatable","animations","valueTarget","allAnimations","all","variantLabels","label","variantLabel","getAnimations","getChildrenAnimations","animateChildren","first","last","maxStaggerDuration","generateStaggerDuration","childControls","onAnimationStart","onAnimationComplete","checkOverrideIsAnimating","numOverrides","resolvedOverride","controls","resetChildren","useInitialOrEveryRender","isInitialOnly","isInitialRender","AnimationControls","pendingAnimations","componentControls","subscribe","animations_1","animationControls","PresenceContext","MotionContext","static","isVariantLabel","isAnimationControls","useMotionContext","parentContext","initial","whileTap","whileHover","presenceContext","initialState","shouldPropagateControls","targetInitial","targetAnimate","initialDependency","animateDependency","context","isReducedMotion","initialToApply","useValueAnimationControls","subscribeToParentControls","parentControls","isPresent","unmountProps","checkShouldInheritVariant","inherit","useExternalRef","externalRef","createMotionComponent","getValueControlsConfig","loadFunctionalityComponents","renderComponent","MotionComponent","shouldInheritVariant","controlsConfig","functionality","renderedComponent","Provider","htmlElements","svgElements","MotionPluginContext","transformPagePoint","MotionPlugins","pluginContext","useUnmountEffect","addDomEvent","eventName","handler","addEventListener","removeEventListener","useDomEvent","element","isMouseEvent","event","PointerEvent","pointerType","MouseEvent","isTouchEvent","hasTouches","touches","filterPrimaryPointer","eventHandler","isPrimaryPointer","button","defaultPagePoint","pageX","pageY","pointFromTouch","e","primaryTouch","changedTouches","pointFromMouse","extractEventInfo","point","wrapHandler","shouldFilterPrimaryPointer","listener","isBrowser","window","supportsPointerEvents","onpointerdown","supportsTouchEvents","ontouchstart","supportsMouseEvents","onmousedown","mouseEventNames","pointerdown","pointermove","pointerup","pointercancel","pointerover","pointerout","pointerenter","pointerleave","touchEventNames","getPointerEventName","name","addPointerEvent","usePointerEvent","Point","subtract","a","b","relativeTo","idOrElem","elem","getElem","document","getElementById","localElem","rect","getBoundingClientRect","left","scrollX","top","scrollY","isViewportScrollBlocked","isBrowser$1","preventDefault","passive","blockViewportScroll","unblockViewportScroll","PanSession","handlers","startEvent","lastMoveEvent","lastMoveEventInfo","updatePoint","info","getPanInfo","history","isPanStarted","isDistancePastThreshold","offset","onMove","initialInfo","transformPoint","onSessionStart","removeOnPointerMove","handlePointerMove","removeOnPointerUp","handlePointerUp","removeListeners","buttons","end","onEnd","panInfo","updateHandlers","lastDevicePoint","startDevicePoint","getVelocity$1","timestampedPoint","lastPoint","time","currentVelocity","Infinity","usePanGesture","onPan","onPanStart","onPanEnd","onPanSessionStart","hasPanEvents","panSession","onPointerDown","isNodeOrChild","parentElement","order","getGesturePriority","gesture","indexOf","createLock","lock","openLock","globalHorizontalLock","globalVerticalLock","getGlobalLock","drag","openHorizontal_1","openVertical_1","tapGesturePriority","useTapGesture","onTap","onTapStart","onTapCancel","hasTapListeners","isTapping","cancelPointerEventListener","removePointerUp","onPointerUp","openGestureLock","hoverPriority","filterTouch","useHoverGesture","onHoverStart","onHoverEnd","useGestures","makeRenderlessComponent","hook","gestureProps","Gestures","shouldRender","some","isRefObject","noop","ComponentDragControls","isDragging","currentDirection","constraints","openGlobalLock","prevConstraintsBox","width","height","originEvent","snapToCursor","bothAxis","axis","axisPoint","constraintsNeedResolution","dragConstraints","transformPagePoint_1","calculateConstraintsFromDom","applyConstraintsToPoint","dragPropagation","onDragStart","convertPanToDrag","dragDirectionLock","getCurrentDirection","onDirectionLock","onDrag","cancelDrag","dragMomentum","dragElastic","onDragEnd","animateDragEnd","recordBoxInfo","right","bottom","top_1","boundingBox","getBoundingBox","center","setPoint","shouldDrag","applyConstraints","updateProps","_f","_g","remainingProps","_dragValueX","_dragValueY","dragOriginX","dragOriginY","dragTransition","_dragTransitionControls","momentumAnimations","getConstraints","bounceStiffness","bounceDamping","timeConstant","externalAxisMotionValue","scalePoint","onDragTransitionEnd","constraintsBox","draggableBox","scaleAxisPoint","dimension","pointToScale","stopPointerListener","dragListener","stopResizeListener","min","direction","lockThreshold","abs","constraintsRef","draggableRef","parentBoundingBox","draggableBoundingBox","getCurrentOffset","constrainedValue","applyOverdrag","dragFactor","useDrag","groupDragControls","dragControls","Drag","isCSSVariable","cssVariableRegex","parseCSSVariable","match","exec","token","fallback","maxDepth","getVariableValue","depth","resolved","getComputedStyle","getPropertyValue","resolveCSSVariables","HTMLElement","positionalKeys","isPositionalKey","hasPositionalKey","setAndResetVelocity","isNumOrPxType","BoundingBoxDimension","getPosFromMatrix","matrix","pos","split","getTranslateFromMatrix","pos2","pos3","_bbox","matrix3d","transformKeys","nonTranslationalTransformKeys","removeNonTranslationalTransform","elementStyler","removedTransforms","positionalValues","convertChangedValueTypes","changedKeys","originBbox","elementComputedStyle","display","originComputedStyle","targetBbox","checkAndConvertChangedValueTypes","targetPositionalKeys","removedTransformValues","hasAttemptedToRemoveTransformValues","changedValueTypeKeys","reduce","acc","fromType","toType","numKeyframes","convertedTarget","unitConversion","parseDomVariant","useForceUpdate","forcedRenderCount","setForcedRenderCount","SyncLayoutContext","UnstableSyncLayout","forceUpdate","StepName","stepOrder","Prepare","Read","Render","jobs","jobsNeedProcessing","flushCallbackList","list","numJobs","flushAllJobs","prepare","read","createUseSyncEffect","stepName","layoutSync","isHTMLElement","defaultLayoutTransition","defaultPositionTransition","getDefaultLayoutTransition","isPositionOnly","isResolver","axisLabels","id","centerOf","calcAxisDelta","next","names","sizeDelta","calcDelta","getLayout","measure","offsetLeft","offsetTop","offsetWidth","offsetHeight","readPositionStyle","position","getLayoutType","isSizeKey","getTransition","layoutTransition","positionTransition","LayoutAnimation","_super","arguments","getSnapshotBeforeUpdate","positionStyle","compare","nextPosition","prevLayout","nextLayout","hasAnyChanged","originX","originY","makeTransition","layoutKey","transformKey","visualOrigin","deltaKey","baseTransition","offsetToApply","componentDidUpdate","contextType","Layout","validMotionProps","isValidMotionProp","AnimatePropType","shallowCompare","prevLength","hasUpdated","targetWithoutTransition","mergeTransitionEnd","useAnimateProp","targetAndTransition","prevValues","targetToAnimate","animatingTarget","finalTarget","shouldAnimateOnMount","isValidValue","valueHasUpdated","labelsToArray","resolveVariantLabels","unresolvedVariant","asDependencyList","join","hasVariantChanged","oldVariant","newVariant","useVariants","targetVariants","parentAlreadyMounted","shouldAnimate","useAnimationGroupSubscription","_a$1","AnimatePropComponents","Target","VariantLabel","AnimationSubscription","isVariantLabel$1","prop","isAnimationSubscription","animationProps","animatePropTypeTests","getAnimationComponent","animatePropType","usePresence","onExitComplete","register","Exit","exit","isPlayingExitAnimation","isPropValid","emotionIsPropValid_1","require","filterValidProps","domProps","buildHTMLProps","isDrag","userSelect","draggable","buildSVGProps","functionalityComponents","numFunctionalityComponents","createDomMotionConfig","isDOM","isSVG","forwardedProps","staticVisualStyles","activeComponents","Animation","Component_1","htmlMotionComponents","svgMotionComponents","motion","useMotionValue","unwrapMotionValue","unwrappedValue","isCustomValueType","getMixer","args","_i","useImmediate","argOffset","inputValue","inputRange","outputRange","interpolator","mixer","isTransformer","noop$1","useTransform","customTransform","comparitor","maxScale","invertScale","useInvertedScale","parentScaleX","parentScaleY","useOnChange","useSpring","source","activeSpringAnimation","createScrollMotionValues","scrollXProgress","scrollYProgress","setProgress","maxOffset","createScrollUpdater","getOffsets","xOffset","yOffset","xMaxOffset","yMaxOffset","isBrowser$2","useIsomorphicLayoutEffect","getElementScrollOffsets","scrollLeft","scrollTop","scrollWidth","scrollHeight","useElementScroll","updateScrollValues","scrollListener","resizeListener","viewportScrollValues","getViewportScrollOffsets","pageXOffset","pageYOffset","body","clientWidth","innerWidth","clientHeight","innerHeight","hasListeners","addEventListeners","useViewportScroll","useAnimation","useAnimatedState","animationState","useCycle","items","index","item","setItem","DragControls","nativeEvent","createDragControls","useDragControls","PresenceChild","numPresenceChildren","numExitComplete","allComplete","getChildKey","updateChildLookup","allChildren","seenChildren","process","env","NODE_ENV","console","warn","onlyElements","filtered","AnimatePresence","exitBeforeEnter","localForceUpdate","contextForceUpdate","filteredChildren","presentChildren","exiting","childrenToRender","presentKeys","targetKeys","numPresent","insertionIndex","onExit","removeIndex","findIndex","splice","prefersReducedMotion","matchMedia","motionMediaQuery_1","setReducedMotionPreferences","matches","addListener","determineShouldReduceMotion","prefersReduced","useReducedMotion","shouldReduceMotion","setShouldReduceMotion","ReducedMotion","enabled"],"mappings":"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AACA,QAAI,CAAC,KAAKb,QAAV,EACI,KAAKA,QAAL,GAAgB,IAAIc,GAAJ,EAAhB;AACJ,SAAKd,QAAL,CAAce,GAAd,CAAkBN,KAAlB;AACA,WAAOA,KAAP;AACH,GAPD;AAQA;AACJ;AACA;AACA;AACA;AACA;AACA;;;AACI3B,EAAAA,WAAW,CAAC6B,SAAZ,CAAsBK,WAAtB,GAAoC,UAAUP,KAAV,EAAiB;AACjD,QAAI,CAAC,KAAKT,QAAV,EAAoB;AAChB;AACH;;AACD,SAAKA,QAAL,CAAciB,MAAd,CAAqBR,KAArB;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;;;AACI3B,EAAAA,WAAW,CAAC6B,SAAZ,CAAsBO,WAAtB,GAAoC,UAAUC,aAAV,EAAyBC,YAAzB,EAAuC;AACvE,QAAInC,KAAK,GAAG,IAAZ;;AACA,QAAIoC,gBAAgB,GAAG,YAAY;AAAE,aAAOD,YAAY,CAACnC,KAAK,CAACW,OAAP,CAAnB;AAAqC,KAA1E;;AACAuB,IAAAA,aAAa,CAACJ,GAAd,CAAkBM,gBAAlB;AACA,WAAO,YAAY;AAAE,aAAOF,aAAa,CAACF,MAAd,CAAqBI,gBAArB,CAAP;AAAgD,KAArE;AACH,GALD;AAMA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACIvC,EAAAA,WAAW,CAAC6B,SAAZ,CAAsBW,QAAtB,GAAiC,UAAUF,YAAV,EAAwB;AACrD,QAAI,CAAC,KAAKvB,iBAAV,EACI,KAAKA,iBAAL,GAAyB,IAAIiB,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","sourcesContent":["import { __assign, __spreadArrays, __rest, __extends } from 'tslib';\nimport { useRef, memo, useEffect, createContext, useContext, useMemo, forwardRef, createElement, Fragment, useCallback, useState, Component, useLayoutEffect, cloneElement, Children, isValidElement } from 'react';\nimport sync, { getFrameData, cancelSync } from 'framesync';\nimport { velocityPerSecond, distance, mix, interpolate, wrap } from '@popmotion/popcorn';\nimport styler, { createStylerFactory, buildStyleProperty, isTransformProp, transformProps, buildSVGAttrs } from 'stylefire';\nimport { invariant, warning } from 'hey-listen';\nimport { color, complex, number, px, percent, degrees, vw, vh } from 'style-value-types';\nimport { action, delay, tween, spring, keyframes as keyframes$1, inertia } from 'popmotion';\nimport * as easingLookup from '@popmotion/easing';\nimport { cubicBezier, linear } from '@popmotion/easing';\n\nvar isFloat = function (value) {\r\n    return !isNaN(parseFloat(value));\r\n};\r\n/**\r\n * `MotionValue` is used to track the state and velocity of motion values.\r\n *\r\n * @public\r\n */\r\nvar MotionValue = /** @class */ (function () {\r\n    /**\r\n     * @param init - The initiating value\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    function MotionValue(init, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, transformer = _b.transformer, parent = _b.parent;\r\n        /**\r\n         * Duration, in milliseconds, since last updating frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.timeDelta = 0;\r\n        /**\r\n         * Timestamp of the last time this `MotionValue` was updated.\r\n         *\r\n         * @internal\r\n         */\r\n        this.lastUpdated = 0;\r\n        /**\r\n         * Tracks whether this value can output a velocity. Currently this is only true\r\n         * if the value is numerical, but we might be able to widen the scope here and support\r\n         * other value types.\r\n         *\r\n         * @internal\r\n         */\r\n        this.canTrackVelocity = false;\r\n        this.updateAndNotify = function (v, render) {\r\n            if (render === void 0) { render = true; }\r\n            _this.prev = _this.current;\r\n            _this.current = _this.transformer ? _this.transformer(v) : v;\r\n            if (_this.updateSubscribers && _this.prev !== _this.current) {\r\n                _this.updateSubscribers.forEach(_this.notifySubscriber);\r\n            }\r\n            if (_this.children) {\r\n                _this.children.forEach(_this.setChild);\r\n            }\r\n            if (render && _this.renderSubscribers) {\r\n                _this.renderSubscribers.forEach(_this.notifySubscriber);\r\n            }\r\n            // Update timestamp\r\n            var _a = getFrameData(), delta = _a.delta, timestamp = _a.timestamp;\r\n            if (_this.lastUpdated !== timestamp) {\r\n                _this.timeDelta = delta;\r\n                _this.lastUpdated = timestamp;\r\n                sync.postRender(_this.scheduleVelocityCheck);\r\n            }\r\n        };\r\n        /**\r\n         * Notify a subscriber with the latest value.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @param subscriber - The subscriber to notify.\r\n         *\r\n         * @internal\r\n         */\r\n        this.notifySubscriber = function (subscriber) {\r\n            subscriber(_this.current);\r\n        };\r\n        /**\r\n         * Schedule a velocity check for the next frame.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.scheduleVelocityCheck = function () { return sync.postRender(_this.velocityCheck); };\r\n        /**\r\n         * Updates `prev` with `current` if the value hasn't been updated this frame.\r\n         * This ensures velocity calculations return `0`.\r\n         *\r\n         * This is an instanced and bound function to prevent generating a new\r\n         * function once per frame.\r\n         *\r\n         * @internal\r\n         */\r\n        this.velocityCheck = function (_a) {\r\n            var timestamp = _a.timestamp;\r\n            if (timestamp !== _this.lastUpdated) {\r\n                _this.prev = _this.current;\r\n            }\r\n        };\r\n        /**\r\n         * Updates child `MotionValue`.\r\n         *\r\n         * @param child - Child `MotionValue`.\r\n         *\r\n         * @internal\r\n         */\r\n        this.setChild = function (child) { return child.set(_this.current); };\r\n        this.parent = parent;\r\n        this.transformer = transformer;\r\n        this.set(init, false);\r\n        this.canTrackVelocity = isFloat(this.current);\r\n    }\r\n    /**\r\n     * Creates a new `MotionValue` that's subscribed to the output of this one.\r\n     *\r\n     * @param config - Optional configuration options\r\n     *\r\n     * -  `transformer`: A function to transform incoming values with.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.addChild = function (config) {\r\n        if (config === void 0) { config = {}; }\r\n        var child = new MotionValue(this.current, __assign({ parent: this }, config));\r\n        if (!this.children)\r\n            this.children = new Set();\r\n        this.children.add(child);\r\n        return child;\r\n    };\r\n    /**\r\n     * Stops a `MotionValue` from being subscribed to this one.\r\n     *\r\n     * @param child - The subscribed `MotionValue`\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.removeChild = function (child) {\r\n        if (!this.children) {\r\n            return;\r\n        }\r\n        this.children.delete(child);\r\n    };\r\n    /**\r\n     * Subscribes a subscriber function to a subscription list.\r\n     *\r\n     * @param subscriptions - A `Set` of subscribers.\r\n     * @param subscription - A subscriber function.\r\n     */\r\n    MotionValue.prototype.subscribeTo = function (subscriptions, subscription) {\r\n        var _this = this;\r\n        var updateSubscriber = function () { return subscription(_this.current); };\r\n        subscriptions.add(updateSubscriber);\r\n        return function () { return subscriptions.delete(updateSubscriber); };\r\n    };\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` is updated.\r\n     *\r\n     * It returns a function that, when called, will cancel the subscription.\r\n     *\r\n     * When calling `onChange` inside a React component, it should be wrapped with the\r\n     * `useEffect` hook. As it returns an unsubscribe function, this should be returned\r\n     * from the `useEffect` function to ensure you don't add duplicate subscribers..\r\n     *\r\n     * @library\r\n     *\r\n     * ```jsx\r\n     * function MyComponent() {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.onChange(updateOpacity)\r\n     *     const unsubscribeY = y.onChange(updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <Frame x={x} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @motion\r\n     *\r\n     * ```jsx\r\n     * export const MyComponent = () => {\r\n     *   const x = useMotionValue(0)\r\n     *   const y = useMotionValue(0)\r\n     *   const opacity = useMotionValue(1)\r\n     *\r\n     *   useEffect(() => {\r\n     *     function updateOpacity() {\r\n     *       const maxXY = Math.max(x.get(), y.get())\r\n     *       const newOpacity = transform(maxXY, [0, 100], [1, 0])\r\n     *       opacity.set(newOpacity)\r\n     *     }\r\n     *\r\n     *     const unsubscribeX = x.onChange(updateOpacity)\r\n     *     const unsubscribeY = y.onChange(updateOpacity)\r\n     *\r\n     *     return () => {\r\n     *       unsubscribeX()\r\n     *       unsubscribeY()\r\n     *     }\r\n     *   }, [])\r\n     *\r\n     *   return <motion.div style={{ x }} />\r\n     * }\r\n     * ```\r\n     *\r\n     * @internalremarks\r\n     *\r\n     * We could look into a `useOnChange` hook if the above lifecycle management proves confusing.\r\n     *\r\n     * ```jsx\r\n     * useOnChange(x, () => {})\r\n     * ```\r\n     *\r\n     * @param subscriber - A function that receives the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.onChange = function (subscription) {\r\n        if (!this.updateSubscribers)\r\n            this.updateSubscribers = new Set();\r\n        return this.subscribeTo(this.updateSubscribers, subscription);\r\n    };\r\n    /**\r\n     * Adds a function that will be notified when the `MotionValue` requests a render.\r\n     *\r\n     * @param subscriber - A function that's provided the latest value.\r\n     * @returns A function that, when called, will cancel this subscription.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.onRenderRequest = function (subscription) {\r\n        if (!this.renderSubscribers)\r\n            this.renderSubscribers = new Set();\r\n        // Render immediately\r\n        this.notifySubscriber(subscription);\r\n        return this.subscribeTo(this.renderSubscribers, subscription);\r\n    };\r\n    /**\r\n     * Attaches a passive effect to the `MotionValue`.\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.attach = function (passiveEffect) {\r\n        this.passiveEffect = passiveEffect;\r\n    };\r\n    /**\r\n     * Sets the state of the `MotionValue`.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * const x = useMotionValue(0)\r\n     * x.set(10)\r\n     * ```\r\n     *\r\n     * @param latest - Latest value to set.\r\n     * @param render - Whether to notify render subscribers. Defaults to `true`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.set = function (v, render) {\r\n        if (render === void 0) { render = true; }\r\n        if (!render || !this.passiveEffect) {\r\n            this.updateAndNotify(v, render);\r\n        }\r\n        else {\r\n            this.passiveEffect(v, this.updateAndNotify);\r\n        }\r\n    };\r\n    /**\r\n     * Returns the latest state of `MotionValue`\r\n     *\r\n     * @returns - The latest state of `MotionValue`\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.get = function () {\r\n        return this.current;\r\n    };\r\n    /**\r\n     * Returns the latest velocity of `MotionValue`\r\n     *\r\n     * @returns - The latest velocity of `MotionValue`. Returns `0` if the state is non-numerical.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.getVelocity = function () {\r\n        // This could be isFloat(this.prev) && isFloat(this.current), but that would be wasteful\r\n        return this.canTrackVelocity\r\n            ? // These casts could be avoided if parseFloat would be typed better\r\n                velocityPerSecond(parseFloat(this.current) -\r\n                    parseFloat(this.prev), this.timeDelta)\r\n            : 0;\r\n    };\r\n    /**\r\n     * Registers a new animation to control this `MotionValue`. Only one\r\n     * animation can drive a `MotionValue` at one time.\r\n     *\r\n     * ```jsx\r\n     * value.start()\r\n     * ```\r\n     *\r\n     * @param animation - A function that starts the provided animation\r\n     *\r\n     * @internal\r\n     */\r\n    MotionValue.prototype.start = function (animation) {\r\n        var _this = this;\r\n        this.stop();\r\n        return new Promise(function (resolve) {\r\n            _this.stopAnimation = animation(resolve);\r\n        }).then(function () { return _this.clearAnimation(); });\r\n    };\r\n    /**\r\n     * Stop the currently active animation.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.stop = function () {\r\n        if (this.stopAnimation)\r\n            this.stopAnimation();\r\n        this.clearAnimation();\r\n    };\r\n    /**\r\n     * Returns `true` if this value is currently animating.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.isAnimating = function () {\r\n        return !!this.stopAnimation;\r\n    };\r\n    MotionValue.prototype.clearAnimation = function () {\r\n        this.stopAnimation = null;\r\n    };\r\n    /**\r\n     * Destroy and clean up subscribers to this `MotionValue`.\r\n     *\r\n     * The `MotionValue` hooks like `useMotionValue` and `useTransform` automatically\r\n     * handle the lifecycle of the returned `MotionValue`, so this method is only necessary if you've manually\r\n     * created a `MotionValue` via the `motionValue` function.\r\n     *\r\n     * @public\r\n     */\r\n    MotionValue.prototype.destroy = function () {\r\n        this.updateSubscribers && this.updateSubscribers.clear();\r\n        this.renderSubscribers && this.renderSubscribers.clear();\r\n        this.parent && this.parent.removeChild(this);\r\n        this.stop();\r\n    };\r\n    return MotionValue;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nfunction motionValue(init, opts) {\r\n    return new MotionValue(init, opts);\r\n}\n\n/**\r\n * Creates a constant value over the lifecycle of a component.\r\n *\r\n * Even if `useMemo` is provided an empty array as its final argument, it doesn't offer\r\n * a guarantee that it won't re-run for performance reasons later on. By using `useConstant`\r\n * you can ensure that initialisers don't execute twice or more.\r\n */\r\nfunction useConstant(init) {\r\n    var ref = useRef(null);\r\n    if (ref.current === null) {\r\n        ref.current = init();\r\n    }\r\n    return ref.current;\r\n}\n\nvar isMotionValue = function (value) {\r\n    return value instanceof MotionValue;\r\n};\n\n// Creating a styler factory for the `onUpdate` prop allows all values\r\n// to fire and the `onUpdate` prop will only fire once per frame\r\nvar updateStyler = createStylerFactory({\r\n    onRead: function () { return null; },\r\n    onRender: function (state, _a) {\r\n        var onUpdate = _a.onUpdate;\r\n        return onUpdate(state);\r\n    },\r\n});\r\nvar MotionValuesMap = /** @class */ (function () {\r\n    function MotionValuesMap() {\r\n        this.hasMounted = false;\r\n        this.values = new Map();\r\n        this.unsubscribers = new Map();\r\n    }\r\n    MotionValuesMap.prototype.has = function (key) {\r\n        return this.values.has(key);\r\n    };\r\n    MotionValuesMap.prototype.set = function (key, value) {\r\n        this.values.set(key, value);\r\n        if (this.hasMounted) {\r\n            this.bindValueToOutput(key, value);\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.get = function (key, defaultValue) {\r\n        var value = this.values.get(key);\r\n        if (value === undefined && defaultValue !== undefined) {\r\n            value = new MotionValue(defaultValue);\r\n            this.set(key, value);\r\n        }\r\n        return value;\r\n    };\r\n    MotionValuesMap.prototype.forEach = function (callback) {\r\n        return this.values.forEach(callback);\r\n    };\r\n    MotionValuesMap.prototype.bindValueToOutput = function (key, value) {\r\n        var _this = this;\r\n        var onRender = function (v) { return _this.output && _this.output(key, v); };\r\n        var unsubscribeOnRender = value.onRenderRequest(onRender);\r\n        var onChange = function (v) {\r\n            _this.onUpdate && _this.onUpdate.set(key, v);\r\n        };\r\n        var unsubscribeOnChange = value.onChange(onChange);\r\n        if (this.unsubscribers.has(key)) {\r\n            this.unsubscribers.get(key)();\r\n        }\r\n        this.unsubscribers.set(key, function () {\r\n            unsubscribeOnRender();\r\n            unsubscribeOnChange();\r\n        });\r\n    };\r\n    MotionValuesMap.prototype.setOnUpdate = function (onUpdate) {\r\n        this.onUpdate = undefined;\r\n        if (onUpdate) {\r\n            this.onUpdate = updateStyler({ onUpdate: onUpdate });\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.setTransformTemplate = function (transformTemplate) {\r\n        if (this.transformTemplate !== transformTemplate) {\r\n            this.transformTemplate = transformTemplate;\r\n            this.updateTransformTemplate();\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.getTransformTemplate = function () {\r\n        return this.transformTemplate;\r\n    };\r\n    MotionValuesMap.prototype.updateTransformTemplate = function () {\r\n        if (this.output) {\r\n            this.output(\"transform\", this.transformTemplate);\r\n        }\r\n    };\r\n    MotionValuesMap.prototype.mount = function (output) {\r\n        var _this = this;\r\n        this.hasMounted = true;\r\n        if (output)\r\n            this.output = output;\r\n        this.values.forEach(function (value, key) { return _this.bindValueToOutput(key, value); });\r\n        this.updateTransformTemplate();\r\n    };\r\n    MotionValuesMap.prototype.unmount = function () {\r\n        var _this = this;\r\n        this.values.forEach(function (_value, key) {\r\n            var unsubscribe = _this.unsubscribers.get(key);\r\n            unsubscribe && unsubscribe();\r\n        });\r\n    };\r\n    return MotionValuesMap;\r\n}());\r\nvar specialMotionValueProps = new Set([\"dragOriginX\", \"dragOriginY\"]);\r\nvar useMotionValues = function (props) {\r\n    var motionValues = useConstant(function () {\r\n        var map = new MotionValuesMap();\r\n        /**\r\n         * Loop through every prop and add any detected `MotionValue`s. This is SVG-specific\r\n         * code that should be extracted, perhaps considered hollistically with `useMotionStyles`.\r\n         *\r\n         * <motion.circle cx={motionValue(0)} />\r\n         */\r\n        for (var key in props) {\r\n            if (isMotionValue(props[key]) &&\r\n                !specialMotionValueProps.has(key)) {\r\n                map.set(key, props[key]);\r\n            }\r\n        }\r\n        return map;\r\n    });\r\n    motionValues.setOnUpdate(props.onUpdate);\r\n    motionValues.setTransformTemplate(props.transformTemplate);\r\n    return motionValues;\r\n};\n\nvar session = null;\r\nvar syncRenderSession = {\r\n    isOpen: function () { return session !== null; },\r\n    open: function () {\r\n        invariant(!session, \"Sync render session already open\");\r\n        session = [];\r\n    },\r\n    flush: function () {\r\n        invariant(session !== null, \"No sync render session found\");\r\n        session && session.forEach(function (styler) { return styler.render(); });\r\n        session = null;\r\n    },\r\n    push: function (styler) {\r\n        invariant(session !== null, \"No sync render session found\");\r\n        session && session.push(styler);\r\n    },\r\n};\n\n/**\r\n * `useEffect` gets resolved bottom-up. We defer some optional functionality to child\r\n * components, so to ensure everything runs correctly we export the ref-binding logic\r\n * to a new component rather than in `useMotionValues`.\r\n */\r\nvar MountComponent = function (_a) {\r\n    var ref = _a.innerRef, values = _a.values, isStatic = _a.isStatic;\r\n    useEffect(function () {\r\n        invariant(ref.current instanceof Element, \"No `ref` found. Ensure components created with `motion.custom` forward refs using `React.forwardRef`\");\r\n        var domStyler = styler(ref.current, {\r\n            preparseOutput: false,\r\n            enableHardwareAcceleration: !isStatic,\r\n        });\r\n        values.mount(function (key, value) {\r\n            domStyler.set(key, value);\r\n            if (syncRenderSession.isOpen()) {\r\n                syncRenderSession.push(domStyler);\r\n            }\r\n        });\r\n        return function () { return values.unmount(); };\r\n    }, []);\r\n    return null;\r\n};\r\nvar Mount = memo(MountComponent);\n\nvar createValueResolver = function (resolver) { return function (values) {\r\n    var resolvedValues = {};\r\n    values.forEach(function (value, key) { return (resolvedValues[key] = resolver(value)); });\r\n    return resolvedValues;\r\n}; };\r\nvar resolveCurrent = createValueResolver(function (value) { return value.get(); });\n\nvar transformOriginProps = new Set([\"originX\", \"originY\", \"originZ\"]);\r\nvar isTransformOriginProp = function (key) { return transformOriginProps.has(key); };\r\nvar buildStyleAttr = function (values, styleProp, isStatic) {\r\n    var motionValueStyles = resolveCurrent(values);\r\n    var transformTemplate = values.getTransformTemplate();\r\n    if (transformTemplate) {\r\n        // If `transform` has been manually set as a string, pass that through the template\r\n        // otherwise pass it forward to Stylefire's style property builder\r\n        motionValueStyles.transform = styleProp.transform\r\n            ? transformTemplate({}, styleProp.transform)\r\n            : transformTemplate;\r\n    }\r\n    return buildStyleProperty(__assign(__assign({}, styleProp), motionValueStyles), !isStatic);\r\n};\r\nvar useMotionStyles = function (values, styleProp, isStatic, transformValues) {\r\n    if (styleProp === void 0) { styleProp = {}; }\r\n    var style = {};\r\n    var prevMotionStyles = useRef({}).current;\r\n    for (var key in styleProp) {\r\n        var thisStyle = styleProp[key];\r\n        if (isMotionValue(thisStyle)) {\r\n            // If this is a motion value, add it to our MotionValuesMap\r\n            values.set(key, thisStyle);\r\n        }\r\n        else if (!isStatic &&\r\n            (isTransformProp(key) || isTransformOriginProp(key))) {\r\n            // Or if it's a transform prop, create a motion value (or update an existing one)\r\n            // to ensure Stylefire can reconcile all the transform values together.\r\n            // A further iteration on this would be to create a single styler per component that gets\r\n            // used in the DOM renderer's buildStyleAttr *and* animations, then we would only\r\n            // have to convert animating values to `MotionValues` (we could probably remove this entire function).\r\n            // The only architectural consideration is to allow Stylefire to have elements mounted after\r\n            // a styler is created.\r\n            if (!values.has(key)) {\r\n                // If it doesn't exist as a motion value, create it\r\n                values.set(key, motionValue(thisStyle));\r\n            }\r\n            else {\r\n                // Otherwise only update it if it's changed from a previous render\r\n                if (thisStyle !== prevMotionStyles[key]) {\r\n                    var value = values.get(key);\r\n                    value.set(thisStyle);\r\n                }\r\n            }\r\n            prevMotionStyles[key] = thisStyle;\r\n        }\r\n        else {\r\n            style[key] = thisStyle;\r\n        }\r\n    }\r\n    return transformValues ? transformValues(style) : style;\r\n};\n\nvar isKeyframesTarget = function (v) {\r\n    return Array.isArray(v);\r\n};\n\nvar isCustomValue = function (v) {\r\n    return Boolean(v && typeof v === \"object\" && v.mix && v.toValue);\r\n};\r\nvar resolveFinalValueInKeyframes = function (v) {\r\n    // TODO maybe throw if v.length - 1 is placeholder token?\r\n    return isKeyframesTarget(v) ? v[v.length - 1] || 0 : v;\r\n};\n\nvar auto = {\r\n    test: function (v) { return v === \"auto\"; },\r\n    parse: function (v) { return v; },\r\n};\r\nvar dimensionTypes = [number, px, percent, degrees, vw, vh, auto];\r\nvar valueTypes = __spreadArrays(dimensionTypes, [color, complex]);\r\nvar testValueType = function (v) { return function (type) { return type.test(v); }; };\r\nvar getDimensionValueType = function (v) {\r\n    return dimensionTypes.find(testValueType(v));\r\n};\r\nvar getValueType = function (v) { return valueTypes.find(testValueType(v)); };\n\nvar underDampedSpring = function () { return ({\r\n    type: \"spring\",\r\n    stiffness: 500,\r\n    damping: 25,\r\n    restDelta: 0.5,\r\n    restSpeed: 10,\r\n}); };\r\nvar overDampedSpring = function (to) { return ({\r\n    type: \"spring\",\r\n    stiffness: 700,\r\n    damping: to === 0 ? 100 : 35,\r\n}); };\r\nvar linearTween = function () { return ({\r\n    ease: \"linear\",\r\n    duration: 0.3,\r\n}); };\r\nvar keyframes = function (values) { return ({\r\n    type: \"keyframes\",\r\n    duration: 0.8,\r\n    values: values,\r\n}); };\r\nvar defaultTransitions = {\r\n    x: underDampedSpring,\r\n    y: underDampedSpring,\r\n    z: underDampedSpring,\r\n    rotate: underDampedSpring,\r\n    rotateX: underDampedSpring,\r\n    rotateY: underDampedSpring,\r\n    rotateZ: underDampedSpring,\r\n    scaleX: overDampedSpring,\r\n    scaleY: overDampedSpring,\r\n    scale: overDampedSpring,\r\n    opacity: linearTween,\r\n    backgroundColor: linearTween,\r\n    color: linearTween,\r\n    default: overDampedSpring,\r\n};\r\nvar getDefaultTransition = function (valueKey, to) {\r\n    var transitionFactory;\r\n    if (isKeyframesTarget(to)) {\r\n        transitionFactory = keyframes;\r\n    }\r\n    else {\r\n        transitionFactory =\r\n            defaultTransitions[valueKey] || defaultTransitions.default;\r\n    }\r\n    return __assign({ to: to }, transitionFactory(to));\r\n};\n\n/**\r\n * A Popmotion action that accepts a single `to` prop. When it starts, it immediately\r\n * updates with `to` and then completes. By using this we can compose instant transitions\r\n * in with the same logic that applies `delay` or returns a `Promise` etc.\r\n *\r\n * Accepting `duration` is a little bit of a hack that simply defers the completetion of\r\n * the animation until after the duration finishes. This is for situations when you're **only**\r\n * animating non-animatable values and then setting something on `transitionEnd`. Really\r\n * you want this to fire after the \"animation\" finishes, rather than instantly.\r\n *\r\n * ```\r\n * animate={{\r\n *   display: 'block',\r\n *   transitionEnd: { display: 'none' }\r\n * }}\r\n * ```\r\n */\r\nvar just = function (_a) {\r\n    var to = _a.to, duration = _a.duration;\r\n    return action(function (_a) {\r\n        var update = _a.update, complete = _a.complete;\r\n        update(to);\r\n        duration ? delay(duration).start({ complete: complete }) : complete();\r\n    });\r\n};\n\nvar easingDefinitionToFunction = function (definition) {\r\n    if (Array.isArray(definition)) {\r\n        // If cubic bezier definition, create bezier curve\r\n        invariant(definition.length === 4, \"Cubic bezier arrays must contain four numerical values.\");\r\n        var x1 = definition[0], y1 = definition[1], x2 = definition[2], y2 = definition[3];\r\n        return cubicBezier(x1, y1, x2, y2);\r\n    }\r\n    else if (typeof definition === \"string\") {\r\n        // Else lookup from table\r\n        invariant(easingLookup[definition] !== undefined, \"Invalid easing type '\" + definition + \"'\");\r\n        return easingLookup[definition];\r\n    }\r\n    return definition;\r\n};\r\nvar isEasingArray = function (ease) {\r\n    return Array.isArray(ease) && typeof ease[0] !== \"number\";\r\n};\n\nvar isDurationAnimation = function (v) {\r\n    return v.hasOwnProperty(\"duration\") || v.hasOwnProperty(\"repeatDelay\");\r\n};\n\n/**\r\n * Check if a value is animatable. Examples:\r\n *\r\n * ✅: 100, \"100px\", \"#fff\"\r\n * ❌: \"block\", \"url(2.jpg)\"\r\n * @param value\r\n *\r\n * @internal\r\n */\r\nvar isAnimatable = function (key, value) {\r\n    // If the list of keys tat might be non-animatable grows, replace with Set\r\n    if (key === \"zIndex\")\r\n        return false;\r\n    // If it's a number or a keyframes array, we can animate it. We might at some point\r\n    // need to do a deep isAnimatable check of keyframes, or let Popmotion handle this,\r\n    // but for now lets leave it like this for performance reasons\r\n    if (typeof value === \"number\" || Array.isArray(value))\r\n        return true;\r\n    if (typeof value === \"string\" && // It's animatable if we have a string\r\n        complex.test(value) && // And it contains numbers and/or colors\r\n        !value.startsWith(\"url(\") // Unless it starts with \"url(\"\r\n    ) {\r\n        return true;\r\n    }\r\n    return false;\r\n};\n\n/**\r\n * Converts seconds to milliseconds\r\n *\r\n * @param seconds - Time in seconds.\r\n * @return milliseconds - Converted time in milliseconds.\r\n */\r\nvar secondsToMilliseconds = function (seconds) { return seconds * 1000; };\n\nvar transitions = { tween: tween, spring: spring, keyframes: keyframes$1, inertia: inertia, just: just };\r\nvar transitionOptionParser = {\r\n    tween: function (opts) {\r\n        if (opts.ease) {\r\n            var ease = isEasingArray(opts.ease) ? opts.ease[0] : opts.ease;\r\n            opts.ease = easingDefinitionToFunction(ease);\r\n        }\r\n        return opts;\r\n    },\r\n    keyframes: function (_a) {\r\n        var from = _a.from, to = _a.to, velocity = _a.velocity, opts = __rest(_a, [\"from\", \"to\", \"velocity\"]);\r\n        if (opts.values && opts.values[0] === null) {\r\n            var values = __spreadArrays(opts.values);\r\n            values[0] = from;\r\n            opts.values = values;\r\n        }\r\n        if (opts.ease) {\r\n            opts.easings = isEasingArray(opts.ease)\r\n                ? opts.ease.map(easingDefinitionToFunction)\r\n                : easingDefinitionToFunction(opts.ease);\r\n        }\r\n        opts.ease = linear;\r\n        return opts;\r\n    },\r\n};\r\nvar isTransitionDefined = function (_a) {\r\n    var when = _a.when, delay = _a.delay, delayChildren = _a.delayChildren, staggerChildren = _a.staggerChildren, staggerDirection = _a.staggerDirection, transition = __rest(_a, [\"when\", \"delay\", \"delayChildren\", \"staggerChildren\", \"staggerDirection\"]);\r\n    return Object.keys(transition).length;\r\n};\r\nvar getTransitionDefinition = function (key, to, transitionDefinition) {\r\n    var delay = transitionDefinition ? transitionDefinition.delay : 0;\r\n    // If no object, return default transition\r\n    // A better way to handle this would be to deconstruct out all the shared Orchestration props\r\n    // and see if there's any props remaining\r\n    if (transitionDefinition === undefined ||\r\n        !isTransitionDefined(transitionDefinition)) {\r\n        return __assign({ delay: delay }, getDefaultTransition(key, to));\r\n    }\r\n    var valueTransitionDefinition = transitionDefinition[key] ||\r\n        transitionDefinition.default ||\r\n        transitionDefinition;\r\n    if (valueTransitionDefinition.type === false) {\r\n        return {\r\n            delay: valueTransitionDefinition.hasOwnProperty(\"delay\")\r\n                ? valueTransitionDefinition.delay\r\n                : delay,\r\n            to: isKeyframesTarget(to)\r\n                ? to[to.length - 1]\r\n                : to,\r\n            type: \"just\",\r\n        };\r\n    }\r\n    else if (isKeyframesTarget(to)) {\r\n        return __assign(__assign({ values: to, duration: 0.8, delay: delay, ease: \"linear\" }, valueTransitionDefinition), { \r\n            // This animation must be keyframes if we're animating through an array\r\n            type: \"keyframes\" });\r\n    }\r\n    else {\r\n        return __assign({ type: \"tween\", to: to,\r\n            delay: delay }, valueTransitionDefinition);\r\n    }\r\n};\r\nvar preprocessOptions = function (type, opts) {\r\n    return transitionOptionParser[type]\r\n        ? transitionOptionParser[type](opts)\r\n        : opts;\r\n};\r\nvar getAnimation = function (key, value, target, transition) {\r\n    var origin = value.get();\r\n    var isOriginAnimatable = isAnimatable(key, origin);\r\n    var isTargetAnimatable = isAnimatable(key, target);\r\n    // TODO we could probably improve this check to ensure both values are of the same type -\r\n    // for instance 100 to #fff. This might live better in Popmotion.\r\n    warning(isOriginAnimatable === isTargetAnimatable, \"You are trying to animate \" + key + \" from \\\"\" + origin + \"\\\" to \" + target + \". \\\"\" + origin + \"\\\" is not an animatable value - to enable this animation set \" + origin + \" to a value animatable to \" + target + \" via the `style` property.\");\r\n    // Parse the `transition` prop and return options for the Popmotion animation\r\n    var _a = getTransitionDefinition(key, target, transition), _b = _a.type, type = _b === void 0 ? \"tween\" : _b, transitionDefinition = __rest(_a, [\"type\"]);\r\n    // If this is an animatable pair of values, return an animation, otherwise use `just`\r\n    var actionFactory = isOriginAnimatable && isTargetAnimatable\r\n        ? transitions[type]\r\n        : just;\r\n    var opts = preprocessOptions(type, __assign({ from: origin, velocity: value.getVelocity() }, transitionDefinition));\r\n    // Convert duration from Framer Motion's seconds into Popmotion's milliseconds\r\n    if (isDurationAnimation(opts)) {\r\n        if (opts.duration) {\r\n            opts.duration = secondsToMilliseconds(opts.duration);\r\n        }\r\n        if (opts.repeatDelay) {\r\n            opts.repeatDelay = secondsToMilliseconds(opts.repeatDelay);\r\n        }\r\n    }\r\n    return [actionFactory, opts];\r\n};\r\n/**\r\n * Start animation on a value. This function completely encapsulates Popmotion-specific logic.\r\n *\r\n * @internal\r\n */\r\nfunction startAnimation(key, value, target, _a) {\r\n    var _b = _a.delay, delay$1 = _b === void 0 ? 0 : _b, transition = __rest(_a, [\"delay\"]);\r\n    return value.start(function (complete) {\r\n        var activeAnimation;\r\n        var _a = getAnimation(key, value, target, transition), animationFactory = _a[0], _b = _a[1], valueDelay = _b.delay, options = __rest(_b, [\"delay\"]);\r\n        if (valueDelay !== undefined) {\r\n            delay$1 = valueDelay;\r\n        }\r\n        var animate = function () {\r\n            var animation = animationFactory(options);\r\n            // Bind animation opts to animation\r\n            activeAnimation = animation.start({\r\n                update: function (v) { return value.set(v); },\r\n                complete: complete,\r\n            });\r\n        };\r\n        // If we're delaying this animation, only resolve it **after** the delay to\r\n        // ensure the value's resolve velocity is up-to-date.\r\n        if (delay$1) {\r\n            activeAnimation = delay(secondsToMilliseconds(delay$1)).start({\r\n                complete: animate,\r\n            });\r\n        }\r\n        else {\r\n            animate();\r\n        }\r\n        return function () {\r\n            if (activeAnimation)\r\n                activeAnimation.stop();\r\n        };\r\n    });\r\n}\n\n/**\r\n * Get the current value of every `MotionValue`\r\n * @param values -\r\n */\r\nvar getCurrent = function (values) {\r\n    var current = {};\r\n    values.forEach(function (value, key) { return (current[key] = value.get()); });\r\n    return current;\r\n};\r\n/**\r\n * Get the current velocity of every `MotionValue`\r\n * @param values -\r\n */\r\nvar getVelocity = function (values) {\r\n    var velocity = {};\r\n    values.forEach(function (value, key) { return (velocity[key] = value.getVelocity()); });\r\n    return velocity;\r\n};\r\n/**\r\n * Check if value is a function that returns a `Target`. A generic typeof === 'function'\r\n * check, just helps with typing.\r\n * @param p -\r\n */\r\nvar isTargetResolver = function (p) {\r\n    return typeof p === \"function\";\r\n};\r\n/**\r\n * Check if value is a list of variant labels\r\n * @param v -\r\n */\r\nvar isVariantLabels = function (v) { return Array.isArray(v); };\r\n/**\r\n * Check if value is a numerical string, ie \"100\" or \"100px\"\r\n */\r\nvar isNumericalString = function (v) { return /^\\d*\\.?\\d+$/.test(v); };\r\n/**\r\n * Control animations for a single component\r\n *\r\n * @internal\r\n */\r\nvar ValueAnimationControls = /** @class */ (function () {\r\n    function ValueAnimationControls(_a) {\r\n        var _this = this;\r\n        var values = _a.values, readValueFromSource = _a.readValueFromSource, makeTargetAnimatable = _a.makeTargetAnimatable;\r\n        /**\r\n         * A reference to the component's latest props. We could probably ditch this in\r\n         * favour to a reference to the `custom` prop now we don't send all props through\r\n         * to target resolvers.\r\n         */\r\n        this.props = {};\r\n        /**\r\n         * The component's variants, as provided by `variants`\r\n         */\r\n        this.variants = {};\r\n        /**\r\n         * A set of values that we animate back to when a value is cleared of all overrides.\r\n         */\r\n        this.baseTarget = {};\r\n        /**\r\n         * A series of target overrides that we can animate to/from when overrides are set/cleared.\r\n         */\r\n        this.overrides = [];\r\n        /**\r\n         * A series of target overrides as they were originally resolved.\r\n         */\r\n        this.resolvedOverrides = [];\r\n        /**\r\n         * A Set of currently active override indexes\r\n         */\r\n        this.activeOverrides = new Set();\r\n        /**\r\n         * A Set of value keys that are currently animating.\r\n         */\r\n        this.isAnimating = new Set();\r\n        /**\r\n         * Check if the associated `MotionValueMap` has a key with the provided string.\r\n         * Pre-bound to the class so we can provide directly to the `filter` in `checkForNewValues`.\r\n         */\r\n        this.hasValue = function (key) { return !_this.values.has(key); };\r\n        this.values = values;\r\n        this.readValueFromSource = readValueFromSource;\r\n        this.makeTargetAnimatable = makeTargetAnimatable;\r\n        this.values.forEach(function (value, key) { return (_this.baseTarget[key] = value.get()); });\r\n    }\r\n    /**\r\n     * Set the reference to the component's props.\r\n     * @param props -\r\n     */\r\n    ValueAnimationControls.prototype.setProps = function (props) {\r\n        this.props = props;\r\n    };\r\n    /**\r\n     * Set the reference to the component's variants\r\n     * @param variants -\r\n     */\r\n    ValueAnimationControls.prototype.setVariants = function (variants) {\r\n        if (variants)\r\n            this.variants = variants;\r\n    };\r\n    /**\r\n     * Set the component's default transition\r\n     * @param transition -\r\n     */\r\n    ValueAnimationControls.prototype.setDefaultTransition = function (transition) {\r\n        if (transition)\r\n            this.defaultTransition = transition;\r\n    };\r\n    /**\r\n     * Set motion values without animation.\r\n     *\r\n     * @param definition -\r\n     * @param isActive -\r\n     */\r\n    ValueAnimationControls.prototype.setValues = function (definition, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.isActive, isActive = _c === void 0 ? new Set() : _c, priority = _b.priority;\r\n        var _d = this.resolveVariant(definition), target = _d.target, transitionEnd = _d.transitionEnd;\r\n        target = this.transformValues(__assign(__assign({}, target), transitionEnd));\r\n        return Object.keys(target).forEach(function (key) {\r\n            if (isActive.has(key))\r\n                return;\r\n            isActive.add(key);\r\n            if (target) {\r\n                var targetValue = resolveFinalValueInKeyframes(target[key]);\r\n                if (_this.values.has(key)) {\r\n                    var value = _this.values.get(key);\r\n                    value && value.set(targetValue);\r\n                }\r\n                else {\r\n                    _this.values.set(key, motionValue(targetValue));\r\n                }\r\n                if (!priority)\r\n                    _this.baseTarget[key] = targetValue;\r\n            }\r\n        });\r\n    };\r\n    /**\r\n     * Allows `transformValues` to be set by a component that allows us to\r\n     * transform the values in a given `Target`. This allows Framer Library\r\n     * to extend Framer Motion to animate `Color` variables etc. Currently we have\r\n     * to manually support these extended types here in Framer Motion.\r\n     *\r\n     * @param values -\r\n     */\r\n    ValueAnimationControls.prototype.transformValues = function (values) {\r\n        var transformValues = this.props.transformValues;\r\n        return transformValues ? transformValues(values) : values;\r\n    };\r\n    /**\r\n     * Check a `Target` for new values we haven't animated yet, and add them\r\n     * to the `MotionValueMap`.\r\n     *\r\n     * Currently there's functionality here that is DOM-specific, we should allow\r\n     * this functionality to be injected by the factory that creates DOM-specific\r\n     * components.\r\n     *\r\n     * @param target -\r\n     */\r\n    ValueAnimationControls.prototype.checkForNewValues = function (target) {\r\n        var newValueKeys = Object.keys(target).filter(this.hasValue);\r\n        var numNewValues = newValueKeys.length;\r\n        if (!numNewValues)\r\n            return;\r\n        for (var i = 0; i < numNewValues; i++) {\r\n            var key = newValueKeys[i];\r\n            var targetValue = target[key];\r\n            var value = null;\r\n            // If this is a keyframes value, we can attempt to use the first value in the\r\n            // array as that's going to be the first value of the animation anyway\r\n            if (Array.isArray(targetValue)) {\r\n                value = targetValue[0];\r\n            }\r\n            // If it isn't a keyframes or the first keyframes value was set as `null`, read the\r\n            // value from the DOM. It might be worth investigating whether to check props (for SVG)\r\n            // or props.style (for HTML) if the value exists there before attempting to read.\r\n            if (value === null) {\r\n                value = this.readValueFromSource(key);\r\n                invariant(value !== null, \"No initial value for \\\"\" + key + \"\\\" can be inferred. Ensure an initial value for \\\"\" + key + \"\\\" is defined on the component.\");\r\n            }\r\n            if (typeof value === \"string\" && isNumericalString(value)) {\r\n                // If this is a number read as a string, ie \"0\" or \"200\", convert it to a number\r\n                value = parseFloat(value);\r\n            }\r\n            else if (!getValueType(value) && complex.test(targetValue)) {\r\n                // If value is not recognised as animatable, ie \"none\", create an animatable version origin based on the target\r\n                value = complex.getAnimatableNone(targetValue);\r\n            }\r\n            this.values.set(key, motionValue(value));\r\n            this.baseTarget[key] = value;\r\n        }\r\n    };\r\n    /**\r\n     * Resolve a variant from its label or resolver into an actual `Target` we can animate to.\r\n     * @param variant -\r\n     */\r\n    ValueAnimationControls.prototype.resolveVariant = function (variant) {\r\n        if (!variant) {\r\n            return {\r\n                target: undefined,\r\n                transition: undefined,\r\n                transitionEnd: undefined,\r\n            };\r\n        }\r\n        if (isTargetResolver(variant)) {\r\n            // resolve current and velocity\r\n            variant = variant(this.props.custom, getCurrent(this.values), getVelocity(this.values));\r\n        }\r\n        var _a = variant.transition, transition = _a === void 0 ? this.defaultTransition : _a, transitionEnd = variant.transitionEnd, target = __rest(variant, [\"transition\", \"transitionEnd\"]);\r\n        return { transition: transition, transitionEnd: transitionEnd, target: target };\r\n    };\r\n    /**\r\n     * Get the highest active override priority index\r\n     */\r\n    ValueAnimationControls.prototype.getHighestPriority = function () {\r\n        if (!this.activeOverrides.size)\r\n            return 0;\r\n        return Math.max.apply(Math, Array.from(this.activeOverrides));\r\n    };\r\n    /**\r\n     * Set an override. We add this layer of indirection so if, for instance, a tap gesture\r\n     * starts and overrides a hover gesture, when we clear the tap gesture and fallback to the\r\n     * hover gesture, if that hover gesture has changed in the meantime we can go to that rather\r\n     * than the one that was resolved when the hover gesture animation started.\r\n     *\r\n     * @param definition -\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.setOverride = function (definition, overrideIndex) {\r\n        this.overrides[overrideIndex] = definition;\r\n        if (this.children) {\r\n            this.children.forEach(function (child) {\r\n                return child.setOverride(definition, overrideIndex);\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Start an override animation.\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.startOverride = function (overrideIndex) {\r\n        var override = this.overrides[overrideIndex];\r\n        if (override) {\r\n            return this.start(override, { priority: overrideIndex });\r\n        }\r\n    };\r\n    /**\r\n     * Clear an override. We check every value we animated to in this override to see if\r\n     * its present on any lower-priority overrides. If not, we animate it back to its base target.\r\n     * @param overrideIndex -\r\n     */\r\n    ValueAnimationControls.prototype.clearOverride = function (overrideIndex) {\r\n        var _this = this;\r\n        if (this.children) {\r\n            this.children.forEach(function (child) { return child.clearOverride(overrideIndex); });\r\n        }\r\n        var override = this.overrides[overrideIndex];\r\n        if (!override)\r\n            return;\r\n        this.activeOverrides.delete(overrideIndex);\r\n        var highest = this.getHighestPriority();\r\n        this.resetIsAnimating();\r\n        if (highest) {\r\n            var highestOverride = this.overrides[highest];\r\n            highestOverride && this.startOverride(highest);\r\n        }\r\n        // Figure out which remaining values were affected by the override and animate those\r\n        var overrideTarget = this.resolvedOverrides[overrideIndex];\r\n        if (!overrideTarget)\r\n            return;\r\n        var remainingValues = {};\r\n        for (var key in this.baseTarget) {\r\n            if (overrideTarget[key] !== undefined) {\r\n                remainingValues[key] = this.baseTarget[key];\r\n            }\r\n        }\r\n        this.onStart();\r\n        this.animate(remainingValues).then(function () { return _this.onComplete(); });\r\n    };\r\n    /**\r\n     * Apply a target/variant without any animation\r\n     */\r\n    ValueAnimationControls.prototype.apply = function (definition) {\r\n        if (Array.isArray(definition)) {\r\n            return this.applyVariantLabels(definition);\r\n        }\r\n        else if (typeof definition === \"string\") {\r\n            return this.applyVariantLabels([definition]);\r\n        }\r\n        else {\r\n            this.setValues(definition);\r\n        }\r\n    };\r\n    /**\r\n     * Apply variant labels without animation\r\n     */\r\n    ValueAnimationControls.prototype.applyVariantLabels = function (variantLabelList) {\r\n        var _this = this;\r\n        var isActive = new Set();\r\n        var reversedList = __spreadArrays(variantLabelList).reverse();\r\n        reversedList.forEach(function (key) {\r\n            var _a = _this.resolveVariant(_this.variants[key]), target = _a.target, transitionEnd = _a.transitionEnd;\r\n            if (transitionEnd) {\r\n                _this.setValues(transitionEnd, { isActive: isActive });\r\n            }\r\n            if (target) {\r\n                _this.setValues(target, { isActive: isActive });\r\n            }\r\n            if (_this.children && _this.children.size) {\r\n                _this.children.forEach(function (child) {\r\n                    return child.applyVariantLabels(variantLabelList);\r\n                });\r\n            }\r\n        });\r\n    };\r\n    ValueAnimationControls.prototype.start = function (definition, opts) {\r\n        var _this = this;\r\n        if (opts === void 0) { opts = {}; }\r\n        if (opts.priority) {\r\n            this.activeOverrides.add(opts.priority);\r\n        }\r\n        this.resetIsAnimating(opts.priority);\r\n        var animation;\r\n        if (isVariantLabels(definition)) {\r\n            animation = this.animateVariantLabels(definition, opts);\r\n        }\r\n        else if (typeof definition === \"string\") {\r\n            animation = this.animateVariant(definition, opts);\r\n        }\r\n        else {\r\n            animation = this.animate(definition, opts);\r\n        }\r\n        this.onStart();\r\n        return animation.then(function () { return _this.onComplete(); });\r\n    };\r\n    ValueAnimationControls.prototype.animate = function (animationDefinition, _a) {\r\n        var _this = this;\r\n        var _b = _a === void 0 ? {} : _a, _c = _b.delay, delay = _c === void 0 ? 0 : _c, _d = _b.priority, priority = _d === void 0 ? 0 : _d, transitionOverride = _b.transitionOverride;\r\n        var _e = this.resolveVariant(animationDefinition), target = _e.target, transition = _e.transition, transitionEnd = _e.transitionEnd;\r\n        if (transitionOverride) {\r\n            transition = transitionOverride;\r\n        }\r\n        if (!target)\r\n            return Promise.resolve();\r\n        target = this.transformValues(target);\r\n        if (transitionEnd) {\r\n            transitionEnd = this.transformValues(transitionEnd);\r\n        }\r\n        this.checkForNewValues(target);\r\n        if (this.makeTargetAnimatable) {\r\n            var animatable = this.makeTargetAnimatable(target, transitionEnd);\r\n            target = animatable.target;\r\n            transitionEnd = animatable.transitionEnd;\r\n        }\r\n        if (priority) {\r\n            this.resolvedOverrides[priority] = target;\r\n        }\r\n        this.checkForNewValues(target);\r\n        var animations = [];\r\n        for (var key in target) {\r\n            var value = this.values.get(key);\r\n            if (!value || !target || target[key] === undefined)\r\n                continue;\r\n            var valueTarget = target[key];\r\n            if (!priority) {\r\n                this.baseTarget[key] = resolveFinalValueInKeyframes(valueTarget);\r\n            }\r\n            if (this.isAnimating.has(key))\r\n                continue;\r\n            this.isAnimating.add(key);\r\n            animations.push(startAnimation(key, value, valueTarget, __assign({ delay: delay }, transition)));\r\n        }\r\n        var allAnimations = Promise.all(animations);\r\n        return transitionEnd\r\n            ? allAnimations.then(function () {\r\n                _this.setValues(transitionEnd, { priority: priority });\r\n            })\r\n            : allAnimations;\r\n    };\r\n    ValueAnimationControls.prototype.animateVariantLabels = function (variantLabels, opts) {\r\n        var _this = this;\r\n        var animations = __spreadArrays(variantLabels).reverse()\r\n            .map(function (label) { return _this.animateVariant(label, opts); });\r\n        return Promise.all(animations);\r\n    };\r\n    ValueAnimationControls.prototype.animateVariant = function (variantLabel, opts) {\r\n        var _this = this;\r\n        var when = false;\r\n        var delayChildren = 0;\r\n        var staggerChildren = 0;\r\n        var staggerDirection = 1;\r\n        var priority = (opts && opts.priority) || 0;\r\n        var variant = this.variants[variantLabel];\r\n        var getAnimations = variant\r\n            ? function () { return _this.animate(variant, opts); }\r\n            : function () { return Promise.resolve(); };\r\n        var getChildrenAnimations = this.children\r\n            ? function () {\r\n                return _this.animateChildren(variantLabel, delayChildren, staggerChildren, staggerDirection, priority);\r\n            }\r\n            : function () { return Promise.resolve(); };\r\n        if (variant && this.children) {\r\n            var transition = this.resolveVariant(variant).transition;\r\n            if (transition) {\r\n                when = transition.when || when;\r\n                delayChildren = transition.delayChildren || delayChildren;\r\n                staggerChildren = transition.staggerChildren || staggerChildren;\r\n                staggerDirection =\r\n                    transition.staggerDirection || staggerDirection;\r\n            }\r\n        }\r\n        if (when) {\r\n            var _a = when === \"beforeChildren\"\r\n                ? [getAnimations, getChildrenAnimations]\r\n                : [getChildrenAnimations, getAnimations], first = _a[0], last = _a[1];\r\n            return first().then(last);\r\n        }\r\n        else {\r\n            return Promise.all([getAnimations(), getChildrenAnimations()]);\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.animateChildren = function (variantLabel, delayChildren, staggerChildren, staggerDirection, priority) {\r\n        if (delayChildren === void 0) { delayChildren = 0; }\r\n        if (staggerChildren === void 0) { staggerChildren = 0; }\r\n        if (staggerDirection === void 0) { staggerDirection = 1; }\r\n        if (priority === void 0) { priority = 0; }\r\n        if (!this.children) {\r\n            return Promise.resolve();\r\n        }\r\n        var animations = [];\r\n        var maxStaggerDuration = (this.children.size - 1) * staggerChildren;\r\n        var generateStaggerDuration = staggerDirection === 1\r\n            ? function (i) { return i * staggerChildren; }\r\n            : function (i) { return maxStaggerDuration - i * staggerChildren; };\r\n        Array.from(this.children).forEach(function (childControls, i) {\r\n            var animation = childControls.animateVariant(variantLabel, {\r\n                priority: priority,\r\n                delay: delayChildren + generateStaggerDuration(i),\r\n            });\r\n            animations.push(animation);\r\n        });\r\n        return Promise.all(animations);\r\n    };\r\n    ValueAnimationControls.prototype.onStart = function () {\r\n        var onAnimationStart = this.props.onAnimationStart;\r\n        onAnimationStart && onAnimationStart();\r\n    };\r\n    ValueAnimationControls.prototype.onComplete = function () {\r\n        var onAnimationComplete = this.props.onAnimationComplete;\r\n        onAnimationComplete && onAnimationComplete();\r\n    };\r\n    ValueAnimationControls.prototype.checkOverrideIsAnimating = function (priority) {\r\n        var numOverrides = this.overrides.length;\r\n        for (var i = priority + 1; i < numOverrides; i++) {\r\n            var resolvedOverride = this.resolvedOverrides[i];\r\n            if (resolvedOverride) {\r\n                for (var key in resolvedOverride) {\r\n                    this.isAnimating.add(key);\r\n                }\r\n            }\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.resetIsAnimating = function (priority) {\r\n        if (priority === void 0) { priority = 0; }\r\n        this.isAnimating.clear();\r\n        // If this isn't the highest priority gesture, block the animation\r\n        // of anything that's currently being animated\r\n        if (priority < this.getHighestPriority()) {\r\n            this.checkOverrideIsAnimating(priority);\r\n        }\r\n        if (this.children) {\r\n            this.children.forEach(function (child) { return child.resetIsAnimating(priority); });\r\n        }\r\n    };\r\n    ValueAnimationControls.prototype.stop = function () {\r\n        this.values.forEach(function (value) { return value.stop(); });\r\n    };\r\n    /**\r\n     * Add the controls of a child component.\r\n     * @param controls -\r\n     */\r\n    ValueAnimationControls.prototype.addChild = function (controls) {\r\n        if (!this.children) {\r\n            this.children = new Set();\r\n        }\r\n        this.children.add(controls);\r\n        // We set child overrides when `setOverride` is called, but also have to do it here\r\n        // as the first time `setOverride` is called all the children might not have been added yet.\r\n        this.overrides.forEach(function (override, i) {\r\n            override && controls.setOverride(override, i);\r\n        });\r\n    };\r\n    ValueAnimationControls.prototype.removeChild = function (controls) {\r\n        if (!this.children) {\r\n            return;\r\n        }\r\n        this.children.delete(controls);\r\n    };\r\n    ValueAnimationControls.prototype.resetChildren = function () {\r\n        if (this.children)\r\n            this.children.clear();\r\n    };\r\n    return ValueAnimationControls;\r\n}());\n\n/**\r\n * Use callback either only on the initial render or on all renders. In concurrent mode\r\n * the \"initial\" render might run multiple times\r\n *\r\n * @param callback - Callback to run\r\n * @param isInitialOnly - Set to `true` to only run on initial render, or `false` for all renders. Defaults to `false`.\r\n *\r\n * @public\r\n */\r\nfunction useInitialOrEveryRender(callback, isInitialOnly) {\r\n    if (isInitialOnly === void 0) { isInitialOnly = false; }\r\n    var isInitialRender = useRef(true);\r\n    if (!isInitialOnly || (isInitialOnly && isInitialRender.current)) {\r\n        callback();\r\n    }\r\n    isInitialRender.current = false;\r\n}\n\n/**\r\n * Control animations on one or more components.\r\n *\r\n * @public\r\n */\r\nvar AnimationControls = /** @class */ (function () {\r\n    function AnimationControls() {\r\n        /**\r\n         * Track whether the host component has mounted.\r\n         *\r\n         * @internal\r\n         */\r\n        this.hasMounted = false;\r\n        /**\r\n         * Pending animations that are started before a component is mounted.\r\n         *\r\n         * @internal\r\n         */\r\n        this.pendingAnimations = [];\r\n        /**\r\n         * A collection of linked component animation controls.\r\n         *\r\n         * @internal\r\n         */\r\n        this.componentControls = new Set();\r\n    }\r\n    /**\r\n     * Set variants on this and all child components.\r\n     *\r\n     * @param variants - The variants to set\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.setVariants = function (variants) {\r\n        this.variants = variants;\r\n        this.componentControls.forEach(function (controls) {\r\n            return controls.setVariants(variants);\r\n        });\r\n    };\r\n    /**\r\n     * Set a default transition on this and all child components\r\n     *\r\n     * @param transition - The default transition to set\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.setDefaultTransition = function (transition) {\r\n        this.defaultTransition = transition;\r\n        this.componentControls.forEach(function (controls) {\r\n            return controls.setDefaultTransition(transition);\r\n        });\r\n    };\r\n    /**\r\n     * Subscribes a component's animation controls to this.\r\n     *\r\n     * @param controls - The controls to subscribe\r\n     * @returns An unsubscribe function.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.subscribe = function (controls) {\r\n        var _this = this;\r\n        this.componentControls.add(controls);\r\n        if (this.variants)\r\n            controls.setVariants(this.variants);\r\n        if (this.defaultTransition)\r\n            controls.setDefaultTransition(this.defaultTransition);\r\n        return function () { return _this.componentControls.delete(controls); };\r\n    };\r\n    /**\r\n     * Starts an animation on all linked components.\r\n     *\r\n     * @remarks\r\n     *\r\n     * ```jsx\r\n     * controls.start(\"variantLabel\")\r\n     * controls.start({\r\n     *   x: 0,\r\n     *   transition: { duration: 1 }\r\n     * })\r\n     * ```\r\n     *\r\n     * @param definition - Properties or variant label to animate to\r\n     * @param transition - Optional `transtion` to apply to a variant\r\n     * @returns - A `Promise` that resolves when all animations have completed.\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.start = function (definition, transitionOverride) {\r\n        var _this = this;\r\n        if (this.hasMounted) {\r\n            var animations_1 = [];\r\n            this.componentControls.forEach(function (controls) {\r\n                var animation = controls.start(definition, {\r\n                    transitionOverride: transitionOverride,\r\n                });\r\n                animations_1.push(animation);\r\n            });\r\n            return Promise.all(animations_1);\r\n        }\r\n        else {\r\n            return new Promise(function (resolve) {\r\n                _this.pendingAnimations.push({\r\n                    animation: [definition, transitionOverride],\r\n                    resolve: resolve,\r\n                });\r\n            });\r\n        }\r\n    };\r\n    /**\r\n     * Instantly set to a set of properties or a variant.\r\n     *\r\n     * ```jsx\r\n     * // With properties\r\n     * controls.set({ opacity: 0 })\r\n     *\r\n     * // With variants\r\n     * controls.set(\"hidden\")\r\n     * ```\r\n     *\r\n     * @internalremarks\r\n     * We could perform a similar trick to `.start` where this can be called before mount\r\n     * and we maintain a list of of pending actions that get applied on mount. But the\r\n     * expectation of `set` is that it happens synchronously and this would be difficult\r\n     * to do before any children have even attached themselves. It's also poor practise\r\n     * and we should discourage render-synchronous `.start` calls rather than lean into this.\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.set = function (definition) {\r\n        invariant(this.hasMounted, \"controls.set() should only be called after a component has mounted. Consider calling within a useEffect hook.\");\r\n        return this.componentControls.forEach(function (controls) {\r\n            return controls.apply(definition);\r\n        });\r\n    };\r\n    /**\r\n     * Stops animations on all linked components.\r\n     *\r\n     * ```jsx\r\n     * controls.stop()\r\n     * ```\r\n     *\r\n     * @public\r\n     */\r\n    AnimationControls.prototype.stop = function () {\r\n        this.componentControls.forEach(function (controls) { return controls.stop(); });\r\n    };\r\n    /**\r\n     * Initialises the animation controls.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.mount = function () {\r\n        var _this = this;\r\n        this.hasMounted = true;\r\n        this.pendingAnimations.forEach(function (_a) {\r\n            var animation = _a.animation, resolve = _a.resolve;\r\n            return _this.start.apply(_this, animation).then(resolve);\r\n        });\r\n    };\r\n    /**\r\n     * Stops all child animations when the host component unmounts.\r\n     *\r\n     * @internal\r\n     */\r\n    AnimationControls.prototype.unmount = function () {\r\n        this.hasMounted = false;\r\n        this.stop();\r\n    };\r\n    return AnimationControls;\r\n}());\r\n/**\r\n * @internal\r\n */\r\nvar animationControls = function () { return new AnimationControls(); };\n\nvar PresenceContext = createContext(null);\n\n/**\r\n * @internal\r\n */\r\nvar MotionContext = createContext({\r\n    static: false,\r\n});\r\nvar isVariantLabel = function (v) {\r\n    return typeof v === \"string\" || Array.isArray(v);\r\n};\r\nvar isAnimationControls = function (v) {\r\n    return v instanceof AnimationControls;\r\n};\r\n/**\r\n * Set up the context for children motion components.\r\n *\r\n * We also use this opportunity to apply `initial` values\r\n */\r\nvar useMotionContext = function (parentContext, controls, values, isStatic, _a) {\r\n    if (isStatic === void 0) { isStatic = false; }\r\n    var initial = _a.initial, animate = _a.animate, variants = _a.variants, whileTap = _a.whileTap, whileHover = _a.whileHover;\r\n    var _b;\r\n    var presenceContext = useContext(PresenceContext);\r\n    // Override initial with that from a parent context, if defined\r\n    if (((_b = presenceContext) === null || _b === void 0 ? void 0 : _b.initial) !== undefined) {\r\n        initial = presenceContext.initial;\r\n    }\r\n    var initialState;\r\n    if (initial === false && !isAnimationControls(animate)) {\r\n        initialState = animate;\r\n    }\r\n    else if (typeof initial !== \"boolean\") {\r\n        initialState = initial;\r\n    }\r\n    // Track mounted status so children can detect whether they were present during their\r\n    // parent's first render\r\n    var hasMounted = useRef(false);\r\n    // We propagate this component's ValueAnimationControls *if* we're being provided variants,\r\n    // if we're being used to control variants, or if we're being passed animation controls.\r\n    // Otherwise this component should be \"invisible\" to variant propagation. This is a slight concession\r\n    // to Framer X where every `Frame` is a `motion` component and it might be if we change that in the future\r\n    // that this restriction is removed.\r\n    var shouldPropagateControls = variants ||\r\n        isVariantLabel(animate) ||\r\n        isVariantLabel(whileTap) ||\r\n        isVariantLabel(whileHover) ||\r\n        isAnimationControls(animate);\r\n    // If this component's `initial` prop is a variant label, propagate it. Otherwise pass the parent's.\r\n    var targetInitial = isVariantLabel(initialState)\r\n        ? initialState\r\n        : parentContext.initial;\r\n    // If this is a variant tree we need to propagate the `animate` prop in case new children are added after\r\n    // the tree initially animates.\r\n    var targetAnimate = isVariantLabel(animate)\r\n        ? animate\r\n        : parentContext.animate;\r\n    // Only allow `initial` to trigger context re-renders if this is a `static` component (ie we're on the Framer canvas)\r\n    // or in another non-animation/interaction environment.\r\n    var initialDependency = isStatic ? targetInitial : null;\r\n    // Only allow `animate` to trigger context re-renders if it's a variant label. If this is an array of\r\n    // variant labels there's probably an optimisation to deep-compare but it might be an over-optimisation.\r\n    // We want to do this as we rely on React's component rendering order each render cycle to determine\r\n    // the new order of any child components for the `staggerChildren` functionality.\r\n    var animateDependency = shouldPropagateControls && isVariantLabel(targetAnimate)\r\n        ? targetAnimate\r\n        : null;\r\n    // The context to provide to the child. We `useMemo` because although `controls` and `initial` are\r\n    // unlikely to change, by making the context an object it'll be considered a new value every render.\r\n    // So all child motion components will re-render as a result.\r\n    var context = useMemo(function () { return ({\r\n        controls: shouldPropagateControls\r\n            ? controls\r\n            : parentContext.controls,\r\n        initial: targetInitial,\r\n        animate: targetAnimate,\r\n        values: values,\r\n        hasMounted: hasMounted,\r\n        isReducedMotion: parentContext.isReducedMotion,\r\n    }); }, [initialDependency, animateDependency, parentContext.isReducedMotion]);\r\n    // Update the `static` property every render. This is unlikely to change but also essentially free.\r\n    context.static = isStatic;\r\n    // Set initial state. If this is a static component (ie in Framer canvas), respond to updates\r\n    // in `initial`.\r\n    useInitialOrEveryRender(function () {\r\n        var initialToApply = initialState || parentContext.initial;\r\n        initialToApply && controls.apply(initialToApply);\r\n    }, !isStatic);\r\n    useEffect(function () {\r\n        hasMounted.current = true;\r\n    }, []);\r\n    return context;\r\n};\n\n/**\r\n * Creates an imperative set of controls to trigger animations.\r\n *\r\n * This allows a consolidated, uniform API for animations, to be triggered by other APIs like the `animate` prop, or the gesture handlers.\r\n *\r\n * @param values\r\n * @param props\r\n * @param ref\r\n * @param subscribeToParentControls\r\n *\r\n * @internal\r\n */\r\nfunction useValueAnimationControls(config, props, subscribeToParentControls) {\r\n    var variants = props.variants, transition = props.transition;\r\n    var parentControls = useContext(MotionContext).controls;\r\n    var presenceContext = useContext(PresenceContext);\r\n    var controls = useConstant(function () { return new ValueAnimationControls(config); });\r\n    // Reset and resubscribe children every render to ensure stagger order is correct\r\n    if (!presenceContext || presenceContext.isPresent) {\r\n        controls.resetChildren();\r\n        controls.setProps(props);\r\n        controls.setVariants(variants);\r\n        controls.setDefaultTransition(transition);\r\n    }\r\n    // We have to subscribe to the parent controls within a useEffect rather than during render,\r\n    // as\r\n    useEffect(function () {\r\n        if (subscribeToParentControls && parentControls) {\r\n            parentControls.addChild(controls);\r\n        }\r\n    });\r\n    useEffect(function () {\r\n        return function () {\r\n            // Remove reference to onAnimationComplete from controls. All the MotionValues\r\n            // are unsubscribed from this component separately. We let animations run out\r\n            // as they might be animating other components.\r\n            var onAnimationComplete = props.onAnimationComplete, unmountProps = __rest(props, [\"onAnimationComplete\"]);\r\n            controls.setProps(unmountProps);\r\n            parentControls && parentControls.removeChild(controls);\r\n        };\r\n    }, []);\r\n    return controls;\r\n}\n\nvar checkShouldInheritVariant = function (_a) {\r\n    var animate = _a.animate, variants = _a.variants, _b = _a.inherit, inherit = _b === void 0 ? true : _b;\r\n    return (inherit &&\r\n        !!variants &&\r\n        (!animate || animate instanceof AnimationControls));\r\n};\n\n/**\r\n * Uses the ref that is passed in, or creates a new one\r\n * @param external - External ref\r\n * @internal\r\n */\r\nfunction useExternalRef(externalRef) {\r\n    // We're conditionally calling `useRef` here which is sort of naughty as hooks\r\n    // shouldn't be called conditionally. However, Framer Motion will break if this\r\n    // condition changes anyway. It might be possible to use an invariant here to\r\n    // make it explicit, but I expect changing `ref` is not normal behaviour.\r\n    var ref = !externalRef || typeof externalRef === \"function\"\r\n        ? useRef(null)\r\n        : externalRef;\r\n    // Handle `ref` functions. Again, calling the hook conditionally is kind of naughty\r\n    // but `ref` types changing between renders would break Motion anyway. If we receive\r\n    // bug reports about this, we should track the provided ref and throw an invariant\r\n    // rather than move the conditional to inside the useEffect as this will be fired\r\n    // for every Frame component within Framer.\r\n    if (externalRef && typeof externalRef === \"function\") {\r\n        useEffect(function () {\r\n            externalRef(ref.current);\r\n            return function () { return externalRef(null); };\r\n        }, []);\r\n    }\r\n    return ref;\r\n}\n\n/**\r\n * @internal\r\n */\r\nvar createMotionComponent = function (_a) {\r\n    var getValueControlsConfig = _a.getValueControlsConfig, loadFunctionalityComponents = _a.loadFunctionalityComponents, renderComponent = _a.renderComponent;\r\n    function MotionComponent(props, externalRef) {\r\n        var ref = useExternalRef(externalRef);\r\n        var parentContext = useContext(MotionContext);\r\n        var isStatic = parentContext.static || props.static || false;\r\n        var values = useMotionValues(props);\r\n        var style = useMotionStyles(values, props.style, isStatic, props.transformValues);\r\n        var shouldInheritVariant = checkShouldInheritVariant(props);\r\n        var controlsConfig = useConstant(function () {\r\n            return getValueControlsConfig(ref, values);\r\n        });\r\n        var controls = useValueAnimationControls(controlsConfig, props, shouldInheritVariant);\r\n        var context = useMotionContext(parentContext, controls, values, isStatic, props);\r\n        var functionality = isStatic\r\n            ? null\r\n            : loadFunctionalityComponents(ref, values, props, parentContext, controls, shouldInheritVariant);\r\n        var renderedComponent = renderComponent(ref, style, values, props, isStatic);\r\n        return (createElement(Fragment, null,\r\n            createElement(MotionContext.Provider, { value: context }, renderedComponent),\r\n            createElement(Fragment, null,\r\n                createElement(Mount, { innerRef: ref, values: values, isStatic: isStatic }),\r\n                functionality)));\r\n    }\r\n    return forwardRef(MotionComponent);\r\n};\n\n/**\r\n * @internal\r\n */\r\nvar htmlElements = [\r\n    \"a\",\r\n    \"abbr\",\r\n    \"address\",\r\n    \"area\",\r\n    \"article\",\r\n    \"aside\",\r\n    \"audio\",\r\n    \"b\",\r\n    \"base\",\r\n    \"bdi\",\r\n    \"bdo\",\r\n    \"big\",\r\n    \"blockquote\",\r\n    \"body\",\r\n    \"br\",\r\n    \"button\",\r\n    \"canvas\",\r\n    \"caption\",\r\n    \"cite\",\r\n    \"code\",\r\n    \"col\",\r\n    \"colgroup\",\r\n    \"data\",\r\n    \"datalist\",\r\n    \"dd\",\r\n    \"del\",\r\n    \"details\",\r\n    \"dfn\",\r\n    \"dialog\",\r\n    \"div\",\r\n    \"dl\",\r\n    \"dt\",\r\n    \"em\",\r\n    \"embed\",\r\n    \"fieldset\",\r\n    \"figcaption\",\r\n    \"figure\",\r\n    \"footer\",\r\n    \"form\",\r\n    \"h1\",\r\n    \"h2\",\r\n    \"h3\",\r\n    \"h4\",\r\n    \"h5\",\r\n    \"h6\",\r\n    \"head\",\r\n    \"header\",\r\n    \"hgroup\",\r\n    \"hr\",\r\n    \"html\",\r\n    \"i\",\r\n    \"iframe\",\r\n    \"img\",\r\n    \"input\",\r\n    \"ins\",\r\n    \"kbd\",\r\n    \"keygen\",\r\n    \"label\",\r\n    \"legend\",\r\n    \"li\",\r\n    \"link\",\r\n    \"main\",\r\n    \"map\",\r\n    \"mark\",\r\n    \"menu\",\r\n    \"menuitem\",\r\n    \"meta\",\r\n    \"meter\",\r\n    \"nav\",\r\n    \"noscript\",\r\n    \"object\",\r\n    \"ol\",\r\n    \"optgroup\",\r\n    \"option\",\r\n    \"output\",\r\n    \"p\",\r\n    \"param\",\r\n    \"picture\",\r\n    \"pre\",\r\n    \"progress\",\r\n    \"q\",\r\n    \"rp\",\r\n    \"rt\",\r\n    \"ruby\",\r\n    \"s\",\r\n    \"samp\",\r\n    \"script\",\r\n    \"section\",\r\n    \"select\",\r\n    \"small\",\r\n    \"source\",\r\n    \"span\",\r\n    \"strong\",\r\n    \"style\",\r\n    \"sub\",\r\n    \"summary\",\r\n    \"sup\",\r\n    \"table\",\r\n    \"tbody\",\r\n    \"td\",\r\n    \"textarea\",\r\n    \"tfoot\",\r\n    \"th\",\r\n    \"thead\",\r\n    \"time\",\r\n    \"title\",\r\n    \"tr\",\r\n    \"track\",\r\n    \"u\",\r\n    \"ul\",\r\n    \"var\",\r\n    \"video\",\r\n    \"wbr\",\r\n    \"webview\",\r\n];\r\n/**\r\n * @internal\r\n */\r\nvar svgElements = [\r\n    \"animate\",\r\n    \"circle\",\r\n    \"clipPath\",\r\n    \"defs\",\r\n    \"desc\",\r\n    \"ellipse\",\r\n    \"feBlend\",\r\n    \"feColorMatrix\",\r\n    \"feComponentTransfer\",\r\n    \"feComposite\",\r\n    \"feConvolveMatrix\",\r\n    \"feDiffuseLighting\",\r\n    \"feDisplacementMap\",\r\n    \"feDistantLight\",\r\n    \"feDropShadow\",\r\n    \"feFlood\",\r\n    \"feFuncA\",\r\n    \"feFuncB\",\r\n    \"feFuncG\",\r\n    \"feFuncR\",\r\n    \"feGaussianBlur\",\r\n    \"feImage\",\r\n    \"feMerge\",\r\n    \"feMergeNode\",\r\n    \"feMorphology\",\r\n    \"feOffset\",\r\n    \"fePointLight\",\r\n    \"feSpecularLighting\",\r\n    \"feSpotLight\",\r\n    \"feTile\",\r\n    \"feTurbulence\",\r\n    \"filter\",\r\n    \"foreignObject\",\r\n    \"g\",\r\n    \"image\",\r\n    \"line\",\r\n    \"linearGradient\",\r\n    \"marker\",\r\n    \"mask\",\r\n    \"metadata\",\r\n    \"path\",\r\n    \"pattern\",\r\n    \"polygon\",\r\n    \"polyline\",\r\n    \"radialGradient\",\r\n    \"rect\",\r\n    \"stop\",\r\n    \"svg\",\r\n    \"switch\",\r\n    \"symbol\",\r\n    \"text\",\r\n    \"textPath\",\r\n    \"tspan\",\r\n    \"use\",\r\n    \"view\",\r\n];\n\n/**\r\n * @internal\r\n */\r\nvar MotionPluginContext = createContext({\r\n    transformPagePoint: function (p) { return p; },\r\n});\r\n/**\r\n * @remarks For now I think this should remain a private API for our own use\r\n * until we can figure out a nicer way of allowing people to add these\r\n *\r\n * @internal\r\n */\r\nfunction MotionPlugins(_a) {\r\n    var children = _a.children, props = __rest(_a, [\"children\"]);\r\n    var pluginContext = useContext(MotionPluginContext);\r\n    var value = useRef(__assign({}, pluginContext)).current;\r\n    // Mutative to prevent triggering rerenders in all listening\r\n    // components every time this component renders\r\n    for (var key in props) {\r\n        value[key] = props[key];\r\n    }\r\n    return (createElement(MotionPluginContext.Provider, { value: value }, children));\r\n}\n\nfunction useUnmountEffect(callback) {\r\n    return useEffect(function () { return function () { return callback(); }; }, []);\r\n}\n\nfunction addDomEvent(target, eventName, handler, options) {\r\n    if (!handler)\r\n        return;\r\n    target.addEventListener(eventName, handler, options);\r\n    return function () { return target.removeEventListener(eventName, handler, options); };\r\n}\r\n/**\r\n * Attaches an event listener directly to the provided DOM element.\r\n *\r\n * Bypassing React's event system can be desirable, for instance when attaching non-passive\r\n * event handlers.\r\n *\r\n * ```jsx\r\n * const ref = useRef(null)\r\n *\r\n * useDomEvent(ref, 'wheel', onWheel, { passive: false })\r\n *\r\n * return <div ref={ref} />\r\n * ```\r\n *\r\n * @param ref - React.RefObject that's been provided to the element you want to bind the listener to.\r\n * @param eventName - Name of the event you want listen for.\r\n * @param handler - Function to fire when receiving the event.\r\n * @param options - Options to pass to `Event.addEventListener`.\r\n *\r\n * @public\r\n */\r\nfunction useDomEvent(ref, eventName, handler, options) {\r\n    useEffect(function () {\r\n        var element = ref.current;\r\n        if (handler && element) {\r\n            return addDomEvent(element, eventName, handler, options);\r\n        }\r\n    }, [ref, eventName, handler, options]);\r\n}\n\nfunction isMouseEvent(event) {\r\n    // PointerEvent inherits from MouseEvent so we can't use a straight instanceof check.\r\n    if (typeof PointerEvent !== \"undefined\" && event instanceof PointerEvent) {\r\n        return !!(event.pointerType === \"mouse\");\r\n    }\r\n    return event instanceof MouseEvent;\r\n}\r\nfunction isTouchEvent(event) {\r\n    var hasTouches = !!event.touches;\r\n    return hasTouches;\r\n}\n\n/**\r\n * Filters out events not attached to the primary pointer (currently left mouse button)\r\n * @param eventHandler\r\n */\r\nfunction filterPrimaryPointer(eventHandler) {\r\n    if (!eventHandler)\r\n        return undefined;\r\n    return function (event) {\r\n        var isMouseEvent = event instanceof MouseEvent;\r\n        var isPrimaryPointer = !isMouseEvent ||\r\n            (isMouseEvent && event.button === 0);\r\n        if (isPrimaryPointer) {\r\n            eventHandler(event);\r\n        }\r\n    };\r\n}\r\nvar defaultPagePoint = { pageX: 0, pageY: 0 };\r\nfunction pointFromTouch(e) {\r\n    var primaryTouch = e.touches[0] || e.changedTouches[0];\r\n    var _a = primaryTouch || defaultPagePoint, pageX = _a.pageX, pageY = _a.pageY;\r\n    return { x: pageX, y: pageY };\r\n}\r\nfunction pointFromMouse(_a) {\r\n    var _b = _a.pageX, pageX = _b === void 0 ? 0 : _b, _c = _a.pageY, pageY = _c === void 0 ? 0 : _c;\r\n    return { x: pageX, y: pageY };\r\n}\r\nfunction extractEventInfo(event) {\r\n    return {\r\n        point: isTouchEvent(event)\r\n            ? pointFromTouch(event)\r\n            : pointFromMouse(event),\r\n    };\r\n}\r\nvar wrapHandler = function (handler, shouldFilterPrimaryPointer) {\r\n    if (shouldFilterPrimaryPointer === void 0) { shouldFilterPrimaryPointer = false; }\r\n    if (!handler)\r\n        return;\r\n    var listener = function (event) { return handler(event, extractEventInfo(event)); };\r\n    return shouldFilterPrimaryPointer\r\n        ? filterPrimaryPointer(listener)\r\n        : listener;\r\n};\n\nvar isBrowser = typeof window !== \"undefined\";\r\n// We check for event support via functions in case they've been mocked by a testing suite.\r\nvar supportsPointerEvents = function () {\r\n    return isBrowser && window.onpointerdown === null;\r\n};\r\nvar supportsTouchEvents = function () {\r\n    return isBrowser && window.ontouchstart === null;\r\n};\r\nvar supportsMouseEvents = function () {\r\n    return isBrowser && window.onmousedown === null;\r\n};\n\nvar mouseEventNames = {\r\n    pointerdown: \"mousedown\",\r\n    pointermove: \"mousemove\",\r\n    pointerup: \"mouseup\",\r\n    pointercancel: \"mousecancel\",\r\n    pointerover: \"mouseover\",\r\n    pointerout: \"mouseout\",\r\n    pointerenter: \"mouseenter\",\r\n    pointerleave: \"mouseleave\",\r\n};\r\nvar touchEventNames = {\r\n    pointerdown: \"touchstart\",\r\n    pointermove: \"touchmove\",\r\n    pointerup: \"touchend\",\r\n    pointercancel: \"touchcancel\",\r\n};\r\nfunction getPointerEventName(name) {\r\n    if (supportsPointerEvents()) {\r\n        return name;\r\n    }\r\n    else if (supportsTouchEvents()) {\r\n        return touchEventNames[name];\r\n    }\r\n    else if (supportsMouseEvents()) {\r\n        return mouseEventNames[name];\r\n    }\r\n    return name;\r\n}\r\nfunction addPointerEvent(target, eventName, handler, options) {\r\n    return addDomEvent(target, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\r\n}\r\nfunction usePointerEvent(ref, eventName, handler, options) {\r\n    return useDomEvent(ref, getPointerEventName(eventName), wrapHandler(handler, eventName === \"pointerdown\"), options);\r\n}\n\n/** @public */\r\nvar Point;\r\n(function (Point) {\r\n    /** @beta */\r\n    Point.subtract = function (a, b) {\r\n        return { x: a.x - b.x, y: a.y - b.y };\r\n    };\r\n    /** @beta */\r\n    Point.relativeTo = function (idOrElem) {\r\n        var elem;\r\n        var getElem = function () {\r\n            // Caching element here could be leaky because of React lifecycle\r\n            if (elem !== undefined)\r\n                return elem;\r\n            if (typeof idOrElem === \"string\") {\r\n                elem = document.getElementById(idOrElem);\r\n            }\r\n            else {\r\n                elem = idOrElem;\r\n            }\r\n            return elem;\r\n        };\r\n        return function (_a) {\r\n            var x = _a.x, y = _a.y;\r\n            var localElem = getElem();\r\n            if (!localElem)\r\n                return undefined;\r\n            var rect = localElem.getBoundingClientRect();\r\n            return {\r\n                x: x - rect.left - window.scrollX,\r\n                y: y - rect.top - window.scrollY,\r\n            };\r\n        };\r\n    };\r\n})(Point || (Point = {}));\n\nvar isViewportScrollBlocked = false;\r\nvar isBrowser$1 = typeof window !== \"undefined\";\r\nif (isBrowser$1) {\r\n    document.addEventListener(\"touchmove\", function (event) {\r\n        if (isViewportScrollBlocked) {\r\n            event.preventDefault();\r\n        }\r\n    }, { passive: false });\r\n}\r\nvar blockViewportScroll = function () { return (isViewportScrollBlocked = true); };\r\nvar unblockViewportScroll = function () { return (isViewportScrollBlocked = false); };\n\n/**\r\n * @internal\r\n */\r\nvar PanSession = /** @class */ (function () {\r\n    function PanSession(event, handlers, _a) {\r\n        var _this = this;\r\n        var transformPagePoint = (_a === void 0 ? {} : _a).transformPagePoint;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.startEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEvent = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.lastMoveEventInfo = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.handlers = {};\r\n        this.updatePoint = function () {\r\n            if (!(_this.lastMoveEvent && _this.lastMoveEventInfo))\r\n                return;\r\n            var info = getPanInfo(_this.lastMoveEventInfo, _this.history);\r\n            var isPanStarted = _this.startEvent !== null;\r\n            // Only start panning if the offset is larger than 3 pixels. If we make it\r\n            // any larger than this we'll want to reset the pointer history\r\n            // on the first update to avoid visual snapping to the cursoe.\r\n            var isDistancePastThreshold = distance(info.offset, { x: 0, y: 0 }) >= 3;\r\n            if (!isPanStarted && !isDistancePastThreshold)\r\n                return;\r\n            var point = info.point;\r\n            var timestamp = getFrameData().timestamp;\r\n            _this.history.push(__assign(__assign({}, point), { timestamp: timestamp }));\r\n            var _a = _this.handlers, onStart = _a.onStart, onMove = _a.onMove;\r\n            if (!isPanStarted) {\r\n                onStart && onStart(_this.lastMoveEvent, info);\r\n                _this.startEvent = _this.lastMoveEvent;\r\n            }\r\n            onMove && onMove(_this.lastMoveEvent, info);\r\n        };\r\n        // If we have more than one touch, don't start detecting this gesture\r\n        if (isTouchEvent(event) && event.touches.length > 1)\r\n            return;\r\n        this.handlers = handlers;\r\n        this.transformPagePoint = transformPagePoint;\r\n        var info = extractEventInfo(event);\r\n        var initialInfo = transformPoint(info, this.transformPagePoint);\r\n        var point = initialInfo.point;\r\n        var timestamp = getFrameData().timestamp;\r\n        this.history = [__assign(__assign({}, point), { timestamp: timestamp })];\r\n        var onSessionStart = handlers.onSessionStart;\r\n        onSessionStart &&\r\n            onSessionStart(event, getPanInfo(initialInfo, this.history));\r\n        var removeOnPointerMove = addPointerEvent(window, \"pointermove\", function (event, info) { return _this.handlePointerMove(event, info); });\r\n        var removeOnPointerUp = addPointerEvent(window, \"pointerup\", function (event, info) { return _this.handlePointerUp(event, info); });\r\n        this.removeListeners = function () {\r\n            removeOnPointerMove && removeOnPointerMove();\r\n            removeOnPointerUp && removeOnPointerUp();\r\n        };\r\n    }\r\n    PanSession.prototype.handlePointerMove = function (event, info) {\r\n        this.lastMoveEvent = event;\r\n        this.lastMoveEventInfo = transformPoint(info, this.transformPagePoint);\r\n        // Because Safari doesn't trigger mouseup events when it's above a `<select>`\r\n        if (isMouseEvent(event) && event.buttons === 0) {\r\n            this.handlePointerUp(event, info);\r\n            return;\r\n        }\r\n        // Throttle mouse move event to once per frame\r\n        sync.update(this.updatePoint, true);\r\n    };\r\n    PanSession.prototype.handlePointerUp = function (event, info) {\r\n        this.end();\r\n        var onEnd = this.handlers.onEnd;\r\n        if (!onEnd)\r\n            return;\r\n        var panInfo = getPanInfo(transformPoint(info, this.transformPagePoint), this.history);\r\n        onEnd && onEnd(event, panInfo);\r\n    };\r\n    PanSession.prototype.updateHandlers = function (handlers) {\r\n        this.handlers = handlers;\r\n    };\r\n    PanSession.prototype.end = function () {\r\n        this.removeListeners && this.removeListeners();\r\n        cancelSync.update(this.updatePoint);\r\n        unblockViewportScroll();\r\n    };\r\n    return PanSession;\r\n}());\r\nfunction transformPoint(info, transformPagePoint) {\r\n    return transformPagePoint ? { point: transformPagePoint(info.point) } : info;\r\n}\r\nfunction getPanInfo(_a, history) {\r\n    var point = _a.point;\r\n    return {\r\n        point: point,\r\n        delta: Point.subtract(point, lastDevicePoint(history)),\r\n        offset: Point.subtract(point, startDevicePoint(history)),\r\n        velocity: getVelocity$1(history, 0.1),\r\n    };\r\n}\r\nfunction startDevicePoint(history) {\r\n    return history[0];\r\n}\r\nfunction lastDevicePoint(history) {\r\n    return history[history.length - 1];\r\n}\r\nfunction getVelocity$1(history, timeDelta) {\r\n    if (history.length < 2) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var i = history.length - 1;\r\n    var timestampedPoint = null;\r\n    var lastPoint = lastDevicePoint(history);\r\n    while (i >= 0) {\r\n        timestampedPoint = history[i];\r\n        if (lastPoint.timestamp - timestampedPoint.timestamp >\r\n            secondsToMilliseconds(timeDelta)) {\r\n            break;\r\n        }\r\n        i--;\r\n    }\r\n    if (!timestampedPoint) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var time = (lastPoint.timestamp - timestampedPoint.timestamp) / 1000;\r\n    if (time === 0) {\r\n        return { x: 0, y: 0 };\r\n    }\r\n    var currentVelocity = {\r\n        x: (lastPoint.x - timestampedPoint.x) / time,\r\n        y: (lastPoint.y - timestampedPoint.y) / time,\r\n    };\r\n    if (currentVelocity.x === Infinity) {\r\n        currentVelocity.x = 0;\r\n    }\r\n    if (currentVelocity.y === Infinity) {\r\n        currentVelocity.y = 0;\r\n    }\r\n    return currentVelocity;\r\n}\n\n/**\r\n *\r\n * @param handlers -\r\n * @param ref -\r\n *\r\n * @internalremarks\r\n * Currently this sets new pan gesture functions every render. The memo route has been explored\r\n * in the past but ultimately we're still creating new functions every render. An optimisation\r\n * to explore is creating the pan gestures and loading them into a `ref`.\r\n *\r\n * @internal\r\n */\r\nfunction usePanGesture(_a, ref) {\r\n    var onPan = _a.onPan, onPanStart = _a.onPanStart, onPanEnd = _a.onPanEnd, onPanSessionStart = _a.onPanSessionStart;\r\n    var hasPanEvents = onPan || onPanStart || onPanEnd || onPanSessionStart;\r\n    var panSession = useRef(null);\r\n    var transformPagePoint = useContext(MotionPluginContext).transformPagePoint;\r\n    var handlers = {\r\n        onSessionStart: onPanSessionStart,\r\n        onStart: onPanStart,\r\n        onMove: onPan,\r\n        onEnd: function (event, info) {\r\n            panSession.current = null;\r\n            onPanEnd && onPanEnd(event, info);\r\n        },\r\n    };\r\n    useEffect(function () {\r\n        if (panSession.current !== null) {\r\n            panSession.current.updateHandlers(handlers);\r\n        }\r\n    });\r\n    function onPointerDown(event) {\r\n        panSession.current = new PanSession(event, handlers, {\r\n            transformPagePoint: transformPagePoint,\r\n        });\r\n    }\r\n    usePointerEvent(ref, \"pointerdown\", hasPanEvents && onPointerDown);\r\n    useUnmountEffect(function () { return panSession.current && panSession.current.end(); });\r\n}\n\n/**\r\n * Recursively traverse up the tree to check whether the provided child node\r\n * is the parent or a descendant of it.\r\n *\r\n * @param parent - Element to find\r\n * @param child - Element to test against parent\r\n */\r\nvar isNodeOrChild = function (parent, child) {\r\n    if (!child) {\r\n        return false;\r\n    }\r\n    else if (parent === child) {\r\n        return true;\r\n    }\r\n    else {\r\n        return isNodeOrChild(parent, child.parentElement);\r\n    }\r\n};\n\nvar order = [\"whileHover\", \"whileTap\", \"whileDrag\"];\r\nvar getGesturePriority = function (gesture) {\r\n    return order.indexOf(gesture) + 1;\r\n};\n\nfunction createLock(name) {\r\n    var lock = null;\r\n    return function () {\r\n        var openLock = function () {\r\n            lock = null;\r\n        };\r\n        if (lock === null) {\r\n            lock = name;\r\n            return openLock;\r\n        }\r\n        return false;\r\n    };\r\n}\r\nvar globalHorizontalLock = createLock(\"dragHorizontal\");\r\nvar globalVerticalLock = createLock(\"dragVertical\");\r\nfunction getGlobalLock(drag) {\r\n    var lock = false;\r\n    if (drag === \"y\") {\r\n        lock = globalVerticalLock();\r\n    }\r\n    else if (drag === \"x\") {\r\n        lock = globalHorizontalLock();\r\n    }\r\n    else {\r\n        var openHorizontal_1 = globalHorizontalLock();\r\n        var openVertical_1 = globalVerticalLock();\r\n        if (openHorizontal_1 && openVertical_1) {\r\n            lock = function () {\r\n                openHorizontal_1();\r\n                openVertical_1();\r\n            };\r\n        }\r\n        else {\r\n            // Release the locks because we don't use them\r\n            if (openHorizontal_1)\r\n                openHorizontal_1();\r\n            if (openVertical_1)\r\n                openVertical_1();\r\n        }\r\n    }\r\n    return lock;\r\n}\n\nvar tapGesturePriority = getGesturePriority(\"whileTap\");\r\n/**\r\n * @param handlers -\r\n * @internal\r\n */\r\nfunction useTapGesture(_a, ref) {\r\n    var onTap = _a.onTap, onTapStart = _a.onTapStart, onTapCancel = _a.onTapCancel, whileTap = _a.whileTap, controls = _a.controls;\r\n    var hasTapListeners = onTap || onTapStart || onTapCancel || whileTap;\r\n    var isTapping = useRef(false);\r\n    var cancelPointerEventListener = useRef(null);\r\n    function removePointerUp() {\r\n        cancelPointerEventListener.current &&\r\n            cancelPointerEventListener.current();\r\n        cancelPointerEventListener.current = null;\r\n    }\r\n    if (whileTap && controls) {\r\n        controls.setOverride(whileTap, tapGesturePriority);\r\n    }\r\n    // We load this event handler into a ref so we can later refer to\r\n    // onPointerUp.current which will always have reference to the latest props\r\n    var onPointerUp = useRef(null);\r\n    onPointerUp.current = function (event, info) {\r\n        var element = ref.current;\r\n        removePointerUp();\r\n        if (!isTapping.current || !element)\r\n            return;\r\n        isTapping.current = false;\r\n        if (controls && whileTap) {\r\n            controls.clearOverride(tapGesturePriority);\r\n        }\r\n        // Check the gesture lock - if we get it, it means no drag gesture is active\r\n        // and we can safely fire the tap gesture.\r\n        var openGestureLock = getGlobalLock(true);\r\n        if (!openGestureLock)\r\n            return;\r\n        openGestureLock();\r\n        if (!isNodeOrChild(element, event.target)) {\r\n            onTapCancel && onTapCancel(event, info);\r\n        }\r\n        else {\r\n            onTap && onTap(event, info);\r\n        }\r\n    };\r\n    function onPointerDown(event, info) {\r\n        removePointerUp();\r\n        cancelPointerEventListener.current = addPointerEvent(window, \"pointerup\", function (event, info) { return onPointerUp.current(event, info); });\r\n        var element = ref.current;\r\n        if (!element || isTapping.current)\r\n            return;\r\n        isTapping.current = true;\r\n        onTapStart && onTapStart(event, info);\r\n        if (controls && whileTap) {\r\n            controls.startOverride(tapGesturePriority);\r\n        }\r\n    }\r\n    usePointerEvent(ref, \"pointerdown\", hasTapListeners ? onPointerDown : undefined);\r\n    useUnmountEffect(removePointerUp);\r\n}\n\nvar hoverPriority = getGesturePriority(\"whileHover\");\r\nvar filterTouch = function (listener) { return function (event, info) {\r\n    if (isMouseEvent(event))\r\n        listener(event, info);\r\n}; };\r\n/**\r\n *\r\n * @param props\r\n * @param ref\r\n * @internal\r\n */\r\nfunction useHoverGesture(_a, ref) {\r\n    var whileHover = _a.whileHover, onHoverStart = _a.onHoverStart, onHoverEnd = _a.onHoverEnd, controls = _a.controls;\r\n    if (whileHover && controls) {\r\n        controls.setOverride(whileHover, hoverPriority);\r\n    }\r\n    usePointerEvent(ref, \"pointerenter\", filterTouch(function (event, info) {\r\n        if (onHoverStart)\r\n            onHoverStart(event, info);\r\n        if (whileHover && controls) {\r\n            controls.startOverride(hoverPriority);\r\n        }\r\n    }));\r\n    usePointerEvent(ref, \"pointerleave\", filterTouch(function (event, info) {\r\n        if (onHoverEnd)\r\n            onHoverEnd(event, info);\r\n        if (whileHover && controls) {\r\n            controls.clearOverride(hoverPriority);\r\n        }\r\n    }));\r\n}\n\n/**\r\n * Add pan and tap gesture recognition to an element.\r\n *\r\n * @param props - Gesture event handlers\r\n * @param ref - React `ref` containing a DOM `Element`\r\n * @public\r\n */\r\nfunction useGestures(props, ref) {\r\n    usePanGesture(props, ref);\r\n    useTapGesture(props, ref);\r\n    useHoverGesture(props, ref);\r\n}\n\nvar makeRenderlessComponent = function (hook) { return function (props) {\r\n    hook(props);\r\n    return null;\r\n}; };\n\nvar gestureProps = [\r\n    \"onPan\",\r\n    \"onPanStart\",\r\n    \"onPanEnd\",\r\n    \"onPanSessionStart\",\r\n    \"onTap\",\r\n    \"onTapStart\",\r\n    \"onTapCancel\",\r\n    \"whileTap\",\r\n    \"whileHover\",\r\n    \"onHoverStart\",\r\n    \"onHoverEnd\",\r\n];\r\nvar Gestures = {\r\n    key: \"gestures\",\r\n    shouldRender: function (props) {\r\n        return gestureProps.some(function (key) { return props.hasOwnProperty(key); });\r\n    },\r\n    Component: makeRenderlessComponent(function (_a) {\r\n        var innerRef = _a.innerRef, props = __rest(_a, [\"innerRef\"]);\r\n        useGestures(props, innerRef);\r\n    }),\r\n};\n\nvar isRefObject = function (ref) {\r\n    return typeof ref === \"object\" && ref.hasOwnProperty(\"current\");\r\n};\n\nvar noop = function (v) { return v; };\r\nvar ComponentDragControls = /** @class */ (function () {\r\n    function ComponentDragControls(_a) {\r\n        var ref = _a.ref, values = _a.values, controls = _a.controls;\r\n        /**\r\n         * Track whether we're currently dragging.\r\n         *\r\n         * @internal\r\n         */\r\n        this.isDragging = false;\r\n        /**\r\n         * The current direction of drag, or `null` if both.\r\n         *\r\n         * @internal\r\n         */\r\n        this.currentDirection = null;\r\n        /**\r\n         * The permitted t/r/b/l boundaries of travel, in pixels.\r\n         *\r\n         * @internal\r\n         */\r\n        this.constraints = false;\r\n        /**\r\n         * A reference to the host component's latest props.\r\n         *\r\n         * @internal\r\n         */\r\n        this.props = {\r\n            transformPagePoint: noop,\r\n        };\r\n        /**\r\n         * References to the MotionValues used for tracking the current dragged point.\r\n         *\r\n         * @internal\r\n         */\r\n        this.point = {};\r\n        /**\r\n         * The origin point for the current drag gesture.\r\n         *\r\n         * @internal\r\n         */\r\n        this.origin = {\r\n            x: motionValue(0),\r\n            y: motionValue(0),\r\n        };\r\n        // This is a reference to the global drag gesture lock, ensuring only one component\r\n        // can \"capture\" the drag of one or both axes.\r\n        // TODO: Look into moving this into pansession?\r\n        this.openGlobalLock = null;\r\n        /**\r\n         * @internal\r\n         */\r\n        this.panSession = null;\r\n        /**\r\n         * A reference to the previous constraints bounding box\r\n         *\r\n         * @internal\r\n         */\r\n        this.prevConstraintsBox = {\r\n            width: 0,\r\n            height: 0,\r\n            x: 0,\r\n            y: 0,\r\n        };\r\n        this.ref = ref;\r\n        this.values = values;\r\n        this.controls = controls;\r\n    }\r\n    /**\r\n     * Start dragging the host component.\r\n     *\r\n     * @param event - The originating pointer event.\r\n     * @param options -\r\n     *\r\n     * @public\r\n     */\r\n    ComponentDragControls.prototype.start = function (originEvent, _a) {\r\n        var _this = this;\r\n        var _b = (_a === void 0 ? {} : _a).snapToCursor, snapToCursor = _b === void 0 ? false : _b;\r\n        snapToCursor && this.snapToCursor(originEvent);\r\n        var onSessionStart = function () {\r\n            // Initiate viewport scroll blocking on touch start. This is a very aggressive approach\r\n            // which has come out of the difficulty in us being able to do this once a scroll gesture\r\n            // has initiated in mobile browsers. This means if there's a horizontally-scrolling carousel\r\n            // on a page we can't let a user scroll the page itself from it. Ideally what we'd do is\r\n            // trigger this once we've got a scroll direction determined. This approach sort-of worked\r\n            // but if the component was dragged too far in a single frame page scrolling would initiate.\r\n            blockViewportScroll();\r\n            // Stop any animations on both axis values immediately. This allows the user to throw and catch\r\n            // the component.\r\n            bothAxis(function (axis) {\r\n                var axisPoint = _this.point[axis];\r\n                axisPoint && axisPoint.stop();\r\n            });\r\n        };\r\n        var onStart = function (event, info) {\r\n            // If constraints are an element, resolve them again in case they've updated.\r\n            if (_this.constraintsNeedResolution) {\r\n                var _a = _this.props, dragConstraints = _a.dragConstraints, transformPagePoint_1 = _a.transformPagePoint;\r\n                _this.constraints = calculateConstraintsFromDom(dragConstraints, _this.ref, _this.point, transformPagePoint_1);\r\n                _this.applyConstraintsToPoint();\r\n            }\r\n            // Set point origin and stop any existing animations.\r\n            bothAxis(function (axis) {\r\n                var axisPoint = _this.point[axis];\r\n                if (!axisPoint)\r\n                    return;\r\n                _this.origin[axis].set(axisPoint.get());\r\n            });\r\n            // Attempt to grab the global drag gesture lock - maybe make this part of PanSession\r\n            var _b = _this.props, drag = _b.drag, dragPropagation = _b.dragPropagation;\r\n            if (drag && !dragPropagation) {\r\n                if (_this.openGlobalLock)\r\n                    _this.openGlobalLock();\r\n                _this.openGlobalLock = getGlobalLock(drag);\r\n                if (!_this.openGlobalLock)\r\n                    return;\r\n            }\r\n            _this.isDragging = true;\r\n            _this.currentDirection = null;\r\n            var onDragStart = _this.props.onDragStart;\r\n            onDragStart &&\r\n                onDragStart(event, convertPanToDrag(info, _this.point));\r\n        };\r\n        var onMove = function (event, info) {\r\n            var _a = _this.props, dragPropagation = _a.dragPropagation, dragDirectionLock = _a.dragDirectionLock;\r\n            // If we didn't successfully receive the gesture lock, early return.\r\n            if (!dragPropagation && !_this.openGlobalLock)\r\n                return;\r\n            var offset = info.offset;\r\n            // Attempt to detect drag direction if directionLock is true\r\n            if (dragDirectionLock && _this.currentDirection === null) {\r\n                _this.currentDirection = getCurrentDirection(offset);\r\n                // If we've successfully set a direction, notify listener\r\n                if (_this.currentDirection !== null) {\r\n                    var onDirectionLock = _this.props.onDirectionLock;\r\n                    onDirectionLock && onDirectionLock(_this.currentDirection);\r\n                }\r\n                return;\r\n            }\r\n            _this.updatePoint(\"x\", offset);\r\n            _this.updatePoint(\"y\", offset);\r\n            var onDrag = _this.props.onDrag;\r\n            onDrag && onDrag(event, convertPanToDrag(info, _this.point));\r\n        };\r\n        var onEnd = function (event, info) {\r\n            _this.stop(event, info);\r\n        };\r\n        var transformPagePoint = this.props.transformPagePoint;\r\n        this.panSession = new PanSession(originEvent, {\r\n            onSessionStart: onSessionStart,\r\n            onStart: onStart,\r\n            onMove: onMove,\r\n            onEnd: onEnd,\r\n        }, { transformPagePoint: transformPagePoint });\r\n    };\r\n    ComponentDragControls.prototype.cancelDrag = function () {\r\n        unblockViewportScroll();\r\n        this.isDragging = false;\r\n        this.panSession && this.panSession.end();\r\n        this.panSession = null;\r\n        if (!this.props.dragPropagation && this.openGlobalLock) {\r\n            this.openGlobalLock();\r\n            this.openGlobalLock = null;\r\n        }\r\n    };\r\n    ComponentDragControls.prototype.stop = function (event, info) {\r\n        var _a;\r\n        (_a = this.panSession) === null || _a === void 0 ? void 0 : _a.end();\r\n        this.panSession = null;\r\n        var isDragging = this.isDragging;\r\n        this.cancelDrag();\r\n        if (!isDragging)\r\n            return;\r\n        var _b = this.props, dragMomentum = _b.dragMomentum, dragElastic = _b.dragElastic, onDragEnd = _b.onDragEnd;\r\n        if (dragMomentum || dragElastic) {\r\n            var velocity = info.velocity;\r\n            this.animateDragEnd(velocity);\r\n        }\r\n        else {\r\n            this.recordBoxInfo(this.constraints);\r\n        }\r\n        onDragEnd && onDragEnd(event, convertPanToDrag(info, this.point));\r\n    };\r\n    ComponentDragControls.prototype.recordBoxInfo = function (constraints) {\r\n        if (constraints) {\r\n            var right = constraints.right, left = constraints.left, bottom = constraints.bottom, top_1 = constraints.top;\r\n            this.prevConstraintsBox.width = (right || 0) - (left || 0);\r\n            this.prevConstraintsBox.height = (bottom || 0) - (top_1 || 0);\r\n        }\r\n        if (this.point.x)\r\n            this.prevConstraintsBox.x = this.point.x.get();\r\n        if (this.point.y)\r\n            this.prevConstraintsBox.y = this.point.y.get();\r\n    };\r\n    ComponentDragControls.prototype.snapToCursor = function (event) {\r\n        var _this = this;\r\n        var transformPagePoint = this.props.transformPagePoint;\r\n        var point = extractEventInfo(event).point;\r\n        var boundingBox = getBoundingBox(this.ref, transformPagePoint);\r\n        var center = {\r\n            x: boundingBox.width / 2 + boundingBox.left + window.scrollX,\r\n            y: boundingBox.height / 2 + boundingBox.top + window.scrollY,\r\n        };\r\n        var offset = {\r\n            x: point.x - center.x,\r\n            y: point.y - center.y,\r\n        };\r\n        bothAxis(function (axis) {\r\n            var point = _this.point[axis];\r\n            if (!point)\r\n                return;\r\n            _this.origin[axis].set(point.get());\r\n        });\r\n        this.updatePoint(\"x\", offset);\r\n        this.updatePoint(\"y\", offset);\r\n    };\r\n    ComponentDragControls.prototype.setPoint = function (axis, value) {\r\n        this.point[axis] = value;\r\n    };\r\n    ComponentDragControls.prototype.updatePoint = function (axis, offset) {\r\n        var _a = this.props, drag = _a.drag, dragElastic = _a.dragElastic;\r\n        var axisPoint = this.point[axis];\r\n        // If we're not dragging this axis, do an early return.\r\n        if (!shouldDrag(axis, drag, this.currentDirection) || !axisPoint)\r\n            return;\r\n        var current = applyConstraints(axis, this.origin[axis].get() + offset[axis], this.constraints, dragElastic);\r\n        axisPoint.set(current);\r\n    };\r\n    ComponentDragControls.prototype.updateProps = function (_a) {\r\n        var _this = this;\r\n        var _b = _a.drag, drag = _b === void 0 ? false : _b, _c = _a.dragDirectionLock, dragDirectionLock = _c === void 0 ? false : _c, _d = _a.dragPropagation, dragPropagation = _d === void 0 ? false : _d, _e = _a.dragConstraints, dragConstraints = _e === void 0 ? false : _e, _f = _a.dragElastic, dragElastic = _f === void 0 ? true : _f, _g = _a.dragMomentum, dragMomentum = _g === void 0 ? true : _g, remainingProps = __rest(_a, [\"drag\", \"dragDirectionLock\", \"dragPropagation\", \"dragConstraints\", \"dragElastic\", \"dragMomentum\"]);\r\n        this.props = __assign({ drag: drag,\r\n            dragDirectionLock: dragDirectionLock,\r\n            dragPropagation: dragPropagation,\r\n            dragConstraints: dragConstraints,\r\n            dragElastic: dragElastic,\r\n            dragMomentum: dragMomentum }, remainingProps);\r\n        var _dragValueX = remainingProps._dragValueX, _dragValueY = remainingProps._dragValueY, dragOriginX = remainingProps.dragOriginX, dragOriginY = remainingProps.dragOriginY;\r\n        if (dragOriginX)\r\n            this.origin.x = dragOriginX;\r\n        if (dragOriginY)\r\n            this.origin.y = dragOriginY;\r\n        // Get the `MotionValue` for both draggable axes, or create them if they don't already\r\n        // exist on this component.\r\n        bothAxis(function (axis) {\r\n            if (!shouldDrag(axis, drag, _this.currentDirection))\r\n                return;\r\n            var defaultValue = axis === \"x\" ? _dragValueX : _dragValueY;\r\n            _this.setPoint(axis, defaultValue || _this.values.get(axis, 0));\r\n        });\r\n        // If `dragConstraints` is a React `ref`, we should resolve the constraints once the\r\n        // component has rendered.\r\n        this.constraintsNeedResolution = isRefObject(dragConstraints);\r\n        this.constraints = this.constraintsNeedResolution\r\n            ? this.constraints || false\r\n            : dragConstraints;\r\n    };\r\n    ComponentDragControls.prototype.applyConstraintsToPoint = function (constraints) {\r\n        var _this = this;\r\n        if (constraints === void 0) { constraints = this.constraints; }\r\n        return bothAxis(function (axis) {\r\n            var axisPoint = _this.point[axis];\r\n            axisPoint &&\r\n                !axisPoint.isAnimating() &&\r\n                applyConstraints(axis, axisPoint, constraints, 0);\r\n        });\r\n    };\r\n    ComponentDragControls.prototype.animateDragEnd = function (velocity) {\r\n        var _this = this;\r\n        var _a = this.props, drag = _a.drag, dragMomentum = _a.dragMomentum, dragElastic = _a.dragElastic, dragTransition = _a.dragTransition, _dragValueX = _a._dragValueX, _dragValueY = _a._dragValueY, _dragTransitionControls = _a._dragTransitionControls;\r\n        var momentumAnimations = bothAxis(function (axis) {\r\n            var _a;\r\n            if (!shouldDrag(axis, drag, _this.currentDirection)) {\r\n                return;\r\n            }\r\n            var transition = _this.constraints\r\n                ? getConstraints(axis, _this.constraints)\r\n                : {};\r\n            /**\r\n             * Overdamp the boundary spring if `dragElastic` is disabled. There's still a frame\r\n             * of spring animations so we should look into adding a disable spring option to `inertia`.\r\n             * We could do something here where we affect the `bounceStiffness` and `bounceDamping`\r\n             * using the value of `dragElastic`.\r\n             */\r\n            var bounceStiffness = dragElastic ? 200 : 1000000;\r\n            var bounceDamping = dragElastic ? 40 : 10000000;\r\n            var animationControls = _dragTransitionControls || _this.controls;\r\n            var inertia = __assign(__assign({ type: \"inertia\", velocity: dragMomentum ? velocity[axis] : 0, bounceStiffness: bounceStiffness,\r\n                bounceDamping: bounceDamping, timeConstant: 750, restDelta: 1 }, dragTransition), transition);\r\n            var externalAxisMotionValue = axis === \"x\" ? _dragValueX : _dragValueY;\r\n            // If we're not animating on an externally-provided `MotionValue` we can use the\r\n            // component's animation controls which will handle interactions with whileHover (etc),\r\n            // otherwise we just have to animate the `MotionValue` itself.\r\n            return externalAxisMotionValue\r\n                ? startAnimation(axis, externalAxisMotionValue, 0, inertia)\r\n                : animationControls.start((_a = {},\r\n                    _a[axis] = 0,\r\n                    _a.transition = inertia,\r\n                    _a));\r\n        });\r\n        // Run all animations and then resolve the new drag constraints.\r\n        return Promise.all(momentumAnimations).then(function () {\r\n            _this.recordBoxInfo(_this.constraints);\r\n            _this.scalePoint();\r\n            var onDragTransitionEnd = _this.props.onDragTransitionEnd;\r\n            onDragTransitionEnd && onDragTransitionEnd();\r\n        });\r\n    };\r\n    ComponentDragControls.prototype.scalePoint = function () {\r\n        var _this = this;\r\n        var _a = this.props, dragConstraints = _a.dragConstraints, transformPagePoint = _a.transformPagePoint;\r\n        if (!isRefObject(dragConstraints))\r\n            return;\r\n        var constraintsBox = getBoundingBox(dragConstraints, transformPagePoint);\r\n        var draggableBox = getBoundingBox(this.ref, transformPagePoint);\r\n        // Scale a point relative to the transformation of a constraints-providing element.\r\n        var scaleAxisPoint = function (axis, dimension) {\r\n            var pointToScale = _this.point[axis];\r\n            if (!pointToScale)\r\n                return;\r\n            // Stop any current animations as they bug out if you resize during one\r\n            if (pointToScale.isAnimating()) {\r\n                pointToScale.stop();\r\n                _this.recordBoxInfo();\r\n                return;\r\n            }\r\n            // If the previous dimension was `0` (default), set `scale` to `1` to prevent\r\n            // divide by zero errors.\r\n            var scale = _this.prevConstraintsBox[dimension]\r\n                ? (constraintsBox[dimension] - draggableBox[dimension]) /\r\n                    _this.prevConstraintsBox[dimension]\r\n                : 1;\r\n            pointToScale.set(_this.prevConstraintsBox[axis] * scale);\r\n        };\r\n        scaleAxisPoint(\"x\", \"width\");\r\n        scaleAxisPoint(\"y\", \"height\");\r\n    };\r\n    ComponentDragControls.prototype.mount = function (element) {\r\n        var _this = this;\r\n        var stopPointerListener = addPointerEvent(element, \"pointerdown\", function (event) {\r\n            var _a = _this.props, drag = _a.drag, _b = _a.dragListener, dragListener = _b === void 0 ? true : _b;\r\n            drag && dragListener && _this.start(event);\r\n        });\r\n        var stopResizeListener = addDomEvent(window, \"resize\", function () {\r\n            return _this.scalePoint();\r\n        });\r\n        if (this.constraintsNeedResolution) {\r\n            var _a = this.props, dragConstraints = _a.dragConstraints, transformPagePoint = _a.transformPagePoint;\r\n            var constraints = calculateConstraintsFromDom(dragConstraints, this.ref, this.point, transformPagePoint);\r\n            this.applyConstraintsToPoint(constraints);\r\n            this.recordBoxInfo(constraints);\r\n        }\r\n        else if (!this.isDragging && this.constraints) {\r\n            this.applyConstraintsToPoint();\r\n        }\r\n        return function () {\r\n            stopPointerListener && stopPointerListener();\r\n            stopResizeListener && stopResizeListener();\r\n            _this.cancelDrag();\r\n        };\r\n    };\r\n    return ComponentDragControls;\r\n}());\r\n// Call a handler once for each axis\r\nfunction bothAxis(handler) {\r\n    return [handler(\"x\"), handler(\"y\")];\r\n}\r\nfunction convertPanToDrag(info, point) {\r\n    return __assign(__assign({}, info), { point: {\r\n            x: point.x ? point.x.get() : 0,\r\n            y: point.y ? point.y.get() : 0,\r\n        } });\r\n}\r\nfunction getConstraints(axis, _a) {\r\n    var top = _a.top, right = _a.right, bottom = _a.bottom, left = _a.left;\r\n    if (axis === \"x\") {\r\n        return { min: left, max: right };\r\n    }\r\n    else {\r\n        return { min: top, max: bottom };\r\n    }\r\n}\r\nfunction shouldDrag(direction, drag, currentDirection) {\r\n    return ((drag === true || drag === direction) &&\r\n        (currentDirection === null || currentDirection === direction));\r\n}\r\n/**\r\n * Based on an x/y offset determine the current drag direction. If both axis' offsets are lower\r\n * than the provided threshold, return `null`.\r\n *\r\n * @param offset - The x/y offset from origin.\r\n * @param lockThreshold - (Optional) - the minimum absolute offset before we can determine a drag direction.\r\n */\r\nfunction getCurrentDirection(offset, lockThreshold) {\r\n    if (lockThreshold === void 0) { lockThreshold = 10; }\r\n    var direction = null;\r\n    if (Math.abs(offset.y) > lockThreshold) {\r\n        direction = \"y\";\r\n    }\r\n    else if (Math.abs(offset.x) > lockThreshold) {\r\n        direction = \"x\";\r\n    }\r\n    return direction;\r\n}\r\n/**\r\n * Takes a parent Element and a draggable Element and returns pixel-based drag constraints.\r\n *\r\n * @param constraintsRef\r\n * @param draggableRef\r\n */\r\nfunction calculateConstraintsFromDom(constraintsRef, draggableRef, point, transformPagePoint) {\r\n    invariant(constraintsRef.current !== null && draggableRef.current !== null, \"If `dragConstraints` is set as a React ref, that ref must be passed to another component's `ref` prop.\");\r\n    var parentBoundingBox = getBoundingBox(constraintsRef, transformPagePoint);\r\n    var draggableBoundingBox = getBoundingBox(draggableRef, transformPagePoint);\r\n    var left = parentBoundingBox.left -\r\n        draggableBoundingBox.left +\r\n        getCurrentOffset(point.x);\r\n    var top = parentBoundingBox.top -\r\n        draggableBoundingBox.top +\r\n        getCurrentOffset(point.y);\r\n    var right = parentBoundingBox.width - draggableBoundingBox.width + left;\r\n    var bottom = parentBoundingBox.height - draggableBoundingBox.height + top;\r\n    return { top: top, left: left, right: right, bottom: bottom };\r\n}\r\nfunction getBoundingBox(ref, transformPagePoint) {\r\n    var rect = ref.current.getBoundingClientRect();\r\n    var _a = transformPagePoint({\r\n        x: rect.left,\r\n        y: rect.top,\r\n    }), left = _a.x, top = _a.y;\r\n    var _b = transformPagePoint({\r\n        x: rect.width,\r\n        y: rect.height,\r\n    }), width = _b.x, height = _b.y;\r\n    return { left: left, top: top, width: width, height: height };\r\n}\r\nfunction getCurrentOffset(point) {\r\n    return point ? point.get() : 0;\r\n}\r\nfunction applyConstraints(axis, value, constraints, dragElastic) {\r\n    var constrainedValue = value instanceof MotionValue ? value.get() : value;\r\n    if (!constraints) {\r\n        return constrainedValue;\r\n    }\r\n    var _a = getConstraints(axis, constraints), min = _a.min, max = _a.max;\r\n    if (min !== undefined && constrainedValue < min) {\r\n        constrainedValue = dragElastic\r\n            ? applyOverdrag(min, constrainedValue, dragElastic)\r\n            : Math.max(min, constrainedValue);\r\n    }\r\n    else if (max !== undefined && constrainedValue > max) {\r\n        constrainedValue = dragElastic\r\n            ? applyOverdrag(max, constrainedValue, dragElastic)\r\n            : Math.min(max, constrainedValue);\r\n    }\r\n    if (value instanceof MotionValue) {\r\n        value.set(constrainedValue);\r\n    }\r\n    return constrainedValue;\r\n}\r\nfunction applyOverdrag(origin, current, dragElastic) {\r\n    var dragFactor = typeof dragElastic === \"number\" ? dragElastic : 0.35;\r\n    return mix(origin, current, dragFactor);\r\n}\n\n/**\r\n * A hook that allows an element to be dragged.\r\n *\r\n * @param param\r\n * @param ref\r\n * @param values\r\n * @param controls\r\n *\r\n * @internal\r\n */\r\nfunction useDrag(props, ref, values, controls) {\r\n    var groupDragControls = props.dragControls;\r\n    var transformPagePoint = useContext(MotionPluginContext).transformPagePoint;\r\n    var dragControls = useConstant(function () { return new ComponentDragControls({ ref: ref, values: values, controls: controls }); });\r\n    dragControls.updateProps(__assign(__assign({}, props), { transformPagePoint: transformPagePoint }));\r\n    useEffect(function () { return groupDragControls && groupDragControls.subscribe(dragControls); }, [dragControls]);\r\n    useEffect(function () { return dragControls.mount(ref.current); }, []);\r\n}\n\nvar Drag = {\r\n    key: \"drag\",\r\n    shouldRender: function (props) { return !!props.drag; },\r\n    Component: makeRenderlessComponent(function (_a) {\r\n        var innerRef = _a.innerRef, values = _a.values, controls = _a.controls, props = __rest(_a, [\"innerRef\", \"values\", \"controls\"]);\r\n        return useDrag(props, innerRef, values, controls);\r\n    }),\r\n};\n\nfunction isCSSVariable(value) {\r\n    return typeof value === \"string\" && value.startsWith(\"var(--\");\r\n}\r\n/**\r\n * Parse Framer's special CSS variable format into a CSS token and a fallback.\r\n *\r\n * ```\r\n * `var(--foo, #fff)` => [`--foo`, '#fff']\r\n * ```\r\n *\r\n * @param current\r\n */\r\nvar cssVariableRegex = /var\\((--[a-zA-Z0-9-_]+),? ?([a-zA-Z0-9 ()%#.,-]+)?\\)/;\r\nfunction parseCSSVariable(current) {\r\n    var match = cssVariableRegex.exec(current);\r\n    if (!match)\r\n        return [,];\r\n    var token = match[1], fallback = match[2];\r\n    return [token, fallback];\r\n}\r\nvar maxDepth = 4;\r\nfunction getVariableValue(current, element, depth) {\r\n    if (depth === void 0) { depth = 1; }\r\n    invariant(depth <= maxDepth, \"Max CSS variable fallback depth detected in property \\\"\" + current + \"\\\". This may indicate a circular fallback dependency.\");\r\n    var _a = parseCSSVariable(current), token = _a[0], fallback = _a[1];\r\n    // No CSS variable detected\r\n    if (!token)\r\n        return;\r\n    // Attempt to read this CSS variable off the element\r\n    var resolved = window.getComputedStyle(element).getPropertyValue(token);\r\n    if (resolved) {\r\n        return resolved;\r\n    }\r\n    else if (isCSSVariable(fallback)) {\r\n        // The fallback might itself be a CSS variable, in which case we attempt to resolve it too.\r\n        return getVariableValue(fallback, element, depth + 1);\r\n    }\r\n    else {\r\n        return fallback;\r\n    }\r\n}\r\n/**\r\n * Resolve CSS variables from\r\n *\r\n * @internal\r\n */\r\nfunction resolveCSSVariables(values, ref, _a, transitionEnd) {\r\n    var target = __rest(_a, []);\r\n    var element = ref.current;\r\n    if (!(element instanceof HTMLElement))\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    // If `transitionEnd` isn't `undefined`, clone it. We could clone `target` and `transitionEnd`\r\n    // only if they change but I think this reads clearer and this isn't a performance-critical path.\r\n    if (transitionEnd) {\r\n        transitionEnd = __assign({}, transitionEnd);\r\n    }\r\n    // Go through existing `MotionValue`s and ensure any existing CSS variables are resolved\r\n    values.forEach(function (value) {\r\n        var current = value.get();\r\n        if (!isCSSVariable(current))\r\n            return;\r\n        var resolved = getVariableValue(current, element);\r\n        if (resolved)\r\n            value.set(resolved);\r\n    });\r\n    // Cycle through every target property and resolve CSS variables. Currently\r\n    // we only read single-var properties like `var(--foo)`, not `calc(var(--foo) + 20px)`\r\n    for (var key in target) {\r\n        var current = target[key];\r\n        if (!isCSSVariable(current))\r\n            continue;\r\n        var resolved = getVariableValue(current, element);\r\n        if (!resolved)\r\n            continue;\r\n        // Clone target if it hasn't already been\r\n        target[key] = resolved;\r\n        // If the user hasn't already set this key on `transitionEnd`, set it to the unresolved\r\n        // CSS variable. This will ensure that after the animation the component will reflect\r\n        // changes in the value of the CSS variable.\r\n        if (transitionEnd && transitionEnd[key] === undefined) {\r\n            transitionEnd[key] = current;\r\n        }\r\n    }\r\n    return { target: target, transitionEnd: transitionEnd };\r\n}\n\nvar positionalKeys = new Set([\r\n    \"width\",\r\n    \"height\",\r\n    \"top\",\r\n    \"left\",\r\n    \"right\",\r\n    \"bottom\",\r\n    \"x\",\r\n    \"y\",\r\n]);\r\nvar isPositionalKey = function (key) { return positionalKeys.has(key); };\r\nvar hasPositionalKey = function (target) {\r\n    return Object.keys(target).some(isPositionalKey);\r\n};\r\nvar setAndResetVelocity = function (value, to) {\r\n    // Looks odd but setting it twice doesn't render, it'll just\r\n    // set both prev and current to the latest value\r\n    value.set(to, false);\r\n    value.set(to);\r\n};\r\nvar isNumOrPxType = function (v) {\r\n    return v === number || v === px;\r\n};\r\nvar BoundingBoxDimension;\r\n(function (BoundingBoxDimension) {\r\n    BoundingBoxDimension[\"width\"] = \"width\";\r\n    BoundingBoxDimension[\"height\"] = \"height\";\r\n    BoundingBoxDimension[\"left\"] = \"left\";\r\n    BoundingBoxDimension[\"right\"] = \"right\";\r\n    BoundingBoxDimension[\"top\"] = \"top\";\r\n    BoundingBoxDimension[\"bottom\"] = \"bottom\";\r\n})(BoundingBoxDimension || (BoundingBoxDimension = {}));\r\nvar getPosFromMatrix = function (matrix, pos) {\r\n    return parseFloat(matrix.split(\", \")[pos]);\r\n};\r\nvar getTranslateFromMatrix = function (pos2, pos3) { return function (_bbox, _a) {\r\n    var transform = _a.transform;\r\n    if (transform === \"none\" || !transform)\r\n        return 0;\r\n    var matrix3d = transform.match(/^matrix3d\\((.+)\\)$/);\r\n    if (matrix3d) {\r\n        return getPosFromMatrix(matrix3d[1], pos3);\r\n    }\r\n    else {\r\n        var matrix = transform.match(/^matrix\\((.+)\\)$/);\r\n        if (matrix) {\r\n            return getPosFromMatrix(matrix[1], pos2);\r\n        }\r\n        else {\r\n            return 0;\r\n        }\r\n    }\r\n}; };\r\nvar transformKeys = new Set([\"x\", \"y\", \"z\"]);\r\nvar nonTranslationalTransformKeys = transformProps.filter(function (key) { return !transformKeys.has(key); });\r\nfunction removeNonTranslationalTransform(values, elementStyler) {\r\n    var removedTransforms = [];\r\n    nonTranslationalTransformKeys.forEach(function (key) {\r\n        var value = values.get(key);\r\n        if (value !== undefined) {\r\n            removedTransforms.push([key, value.get()]);\r\n            value.set(key.startsWith(\"scale\") ? 1 : 0);\r\n        }\r\n    });\r\n    // Apply changes to element before measurement\r\n    if (removedTransforms.length)\r\n        elementStyler.render();\r\n    return removedTransforms;\r\n}\r\nvar positionalValues = {\r\n    // Dimensions\r\n    width: function (_a) {\r\n        var width = _a.width;\r\n        return width;\r\n    },\r\n    height: function (_a) {\r\n        var height = _a.height;\r\n        return height;\r\n    },\r\n    top: function (_bbox, _a) {\r\n        var top = _a.top;\r\n        return parseFloat(top);\r\n    },\r\n    left: function (_bbox, _a) {\r\n        var left = _a.left;\r\n        return parseFloat(left);\r\n    },\r\n    bottom: function (_a, _b) {\r\n        var height = _a.height;\r\n        var top = _b.top;\r\n        return parseFloat(top) + height;\r\n    },\r\n    right: function (_a, _b) {\r\n        var width = _a.width;\r\n        var left = _b.left;\r\n        return parseFloat(left) + width;\r\n    },\r\n    // Transform\r\n    x: getTranslateFromMatrix(4, 13),\r\n    y: getTranslateFromMatrix(5, 14),\r\n};\r\nvar convertChangedValueTypes = function (target, values, element, elementStyler, changedKeys) {\r\n    var originBbox = element.getBoundingClientRect();\r\n    var elementComputedStyle = getComputedStyle(element);\r\n    var display = elementComputedStyle.display, top = elementComputedStyle.top, left = elementComputedStyle.left, bottom = elementComputedStyle.bottom, right = elementComputedStyle.right, transform = elementComputedStyle.transform;\r\n    var originComputedStyle = { top: top, left: left, bottom: bottom, right: right, transform: transform };\r\n    // If the element is currently set to display: \"none\", make it visible before\r\n    // measuring the target bounding box\r\n    if (display === \"none\") {\r\n        elementStyler.set(\"display\", target.display || \"block\");\r\n    }\r\n    // Apply the latest values (as set in checkAndConvertChangedValueTypes)\r\n    elementStyler.render();\r\n    var targetBbox = element.getBoundingClientRect();\r\n    changedKeys.forEach(function (key) {\r\n        // Restore styles to their **calculated computed style**, not their actual\r\n        // originally set style. This allows us to animate between equivalent pixel units.\r\n        var value = values.get(key);\r\n        setAndResetVelocity(value, positionalValues[key](originBbox, originComputedStyle));\r\n        target[key] = positionalValues[key](targetBbox, elementComputedStyle);\r\n    });\r\n    return target;\r\n};\r\nvar checkAndConvertChangedValueTypes = function (values, ref, target, transitionEnd) {\r\n    if (transitionEnd === void 0) { transitionEnd = {}; }\r\n    target = __assign({}, target);\r\n    transitionEnd = __assign({}, transitionEnd);\r\n    var element = ref.current;\r\n    var elementStyler = styler(element);\r\n    var targetPositionalKeys = Object.keys(target).filter(isPositionalKey);\r\n    // We want to remove any transform values that could affect the element's bounding box before\r\n    // it's measured. We'll reapply these later.\r\n    var removedTransformValues = [];\r\n    var hasAttemptedToRemoveTransformValues = false;\r\n    var changedValueTypeKeys = targetPositionalKeys.reduce(function (acc, key) {\r\n        var value = values.get(key);\r\n        if (!value)\r\n            return acc;\r\n        var from = value.get();\r\n        var to = target[key];\r\n        var fromType = getDimensionValueType(from);\r\n        var toType;\r\n        // TODO: The current implementation of this basically throws an error\r\n        // if you try and do value conversion via keyframes. There's probably\r\n        // a way of doing this but the performance implications would need greater scrutiny,\r\n        // as it'd be doing multiple resize-remeasure operations.\r\n        if (isKeyframesTarget(to)) {\r\n            var numKeyframes = to.length;\r\n            for (var i = to[0] === null ? 1 : 0; i < numKeyframes; i++) {\r\n                if (!toType) {\r\n                    toType = getDimensionValueType(to[i]);\r\n                    invariant(toType === fromType ||\r\n                        (isNumOrPxType(fromType) &&\r\n                            isNumOrPxType(toType)), \"Keyframes must be of the same dimension as the current value\");\r\n                }\r\n                else {\r\n                    invariant(getDimensionValueType(to[i]) === toType, \"All keyframes must be of the same type\");\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            toType = getDimensionValueType(to);\r\n        }\r\n        if (fromType !== toType) {\r\n            // If they're both just number or px, convert them both to numbers rather than\r\n            // relying on resize/remeasure to convert (which is wasteful in this situation)\r\n            if (isNumOrPxType(fromType) && isNumOrPxType(toType)) {\r\n                var current = value.get();\r\n                if (typeof current === \"string\") {\r\n                    value.set(parseFloat(current));\r\n                }\r\n                if (typeof to === \"string\") {\r\n                    target[key] = parseFloat(to);\r\n                }\r\n                else if (Array.isArray(to) && toType === px) {\r\n                    target[key] = to.map(parseFloat);\r\n                }\r\n            }\r\n            else {\r\n                // If we're going to do value conversion via DOM measurements, we first\r\n                // need to remove non-positional transform values that could affect the bbox measurements.\r\n                if (!hasAttemptedToRemoveTransformValues) {\r\n                    removedTransformValues = removeNonTranslationalTransform(values, elementStyler);\r\n                    hasAttemptedToRemoveTransformValues = true;\r\n                }\r\n                acc.push(key);\r\n                transitionEnd[key] =\r\n                    transitionEnd[key] !== undefined\r\n                        ? transitionEnd[key]\r\n                        : target[key];\r\n                setAndResetVelocity(value, to);\r\n            }\r\n        }\r\n        return acc;\r\n    }, []);\r\n    if (changedValueTypeKeys.length) {\r\n        var convertedTarget = convertChangedValueTypes(target, values, element, elementStyler, changedValueTypeKeys);\r\n        // If we removed transform values, reapply them before the next render\r\n        if (removedTransformValues.length) {\r\n            removedTransformValues.forEach(function (_a) {\r\n                var key = _a[0], value = _a[1];\r\n                values.get(key).set(value);\r\n            });\r\n        }\r\n        // Reapply original values\r\n        elementStyler.render();\r\n        return { target: convertedTarget, transitionEnd: transitionEnd };\r\n    }\r\n    else {\r\n        return { target: target, transitionEnd: transitionEnd };\r\n    }\r\n};\r\n/**\r\n * Convert value types for x/y/width/height/top/left/bottom/right\r\n *\r\n * Allows animation between `'auto'` -> `'100%'` or `0` -> `'calc(50% - 10vw)'`\r\n *\r\n * @param values\r\n * @param ref\r\n * @param target\r\n * @param transitionEnd\r\n * @internal\r\n */\r\nfunction unitConversion(values, ref, target, transitionEnd) {\r\n    return hasPositionalKey(target)\r\n        ? checkAndConvertChangedValueTypes(values, ref, target, transitionEnd)\r\n        : { target: target, transitionEnd: transitionEnd };\r\n}\n\nvar parseDomVariant = function (values, ref) {\r\n    return function (target, transitionEnd) {\r\n        var resolved = resolveCSSVariables(values, ref, target, transitionEnd);\r\n        target = resolved.target;\r\n        transitionEnd = resolved.transitionEnd;\r\n        return unitConversion(values, ref, target, transitionEnd);\r\n    };\r\n};\n\nfunction useForceUpdate() {\r\n    var _a = useState(0), forcedRenderCount = _a[0], setForcedRenderCount = _a[1];\r\n    return useCallback(function () { return setForcedRenderCount(forcedRenderCount + 1); }, [\r\n        forcedRenderCount,\r\n    ]);\r\n}\n\nvar SyncLayoutContext = createContext(null);\r\n/**\r\n * When layout changes happen asynchronously to their instigating render (ie when exiting\r\n * children of `AnimatePresence` are removed), `SyncLayout` can wrap parent and sibling\r\n * components that need to animate as a result of this layout change.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = ({ isVisible }) => {\r\n *   return (\r\n *     <SyncLayout>\r\n *       <AnimatePresence>\r\n *         {isVisible && (\r\n *           <motion.div exit={{ opacity: 0 }} />\r\n *         )}\r\n *       </AnimatePresence>\r\n *       <motion.div positionTransition />\r\n *     </SyncLayout>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * The way this component works is by memoising a function and passing it down via context.\r\n * The function, when called, updates the local state, which is used to invalidate the\r\n * memoisation cache. A new function is called, performing a synced re-render of components\r\n * that are using the SyncLayoutContext.\r\n *\r\n * @internal\r\n */\r\nvar UnstableSyncLayout = function (_a) {\r\n    var children = _a.children;\r\n    var forceUpdate = useForceUpdate();\r\n    return (createElement(SyncLayoutContext.Provider, { value: forceUpdate }, children));\r\n};\n\nvar _a;\r\nvar StepName;\r\n(function (StepName) {\r\n    StepName[\"Prepare\"] = \"prepare\";\r\n    StepName[\"Read\"] = \"read\";\r\n    StepName[\"Render\"] = \"render\";\r\n})(StepName || (StepName = {}));\r\nvar stepOrder = [StepName.Prepare, StepName.Read, StepName.Render];\r\nvar jobs = stepOrder.reduce(function (acc, key) {\r\n    acc[key] = [];\r\n    return acc;\r\n}, {});\r\nvar jobsNeedProcessing = false;\r\nfunction flushCallbackList(list) {\r\n    var numJobs = list.length;\r\n    for (var i = 0; i < numJobs; i++) {\r\n        list[i]();\r\n    }\r\n    list.length = 0;\r\n}\r\nfunction flushAllJobs() {\r\n    if (!jobsNeedProcessing)\r\n        return;\r\n    flushCallbackList(jobs.prepare);\r\n    flushCallbackList(jobs.read);\r\n    flushCallbackList(jobs.render);\r\n    jobsNeedProcessing = false;\r\n}\r\n// Note: The approach of schedulng jobs during the render step is incompatible with concurrent mode\r\n// where multiple renders might happen without a DOM update. This would result in unneccessary batched\r\n// jobs. But this was already a problem with our previous approach to positionTransition.\r\n// Hopefully the React team offer a getSnapshotBeforeUpdate-esque hook and we can move to that.\r\nvar createUseSyncEffect = function (stepName) { return function (callback) {\r\n    if (!callback)\r\n        return;\r\n    jobsNeedProcessing = true;\r\n    jobs[stepName].push(callback);\r\n}; };\r\nvar layoutSync = (_a = {},\r\n    _a[StepName.Prepare] = createUseSyncEffect(StepName.Prepare),\r\n    _a[StepName.Read] = createUseSyncEffect(StepName.Read),\r\n    _a[StepName.Render] = createUseSyncEffect(StepName.Render),\r\n    _a.flush = flushAllJobs,\r\n    _a);\n\nfunction isHTMLElement(element) {\r\n    return element instanceof HTMLElement;\r\n}\n\nvar defaultLayoutTransition = {\r\n    duration: 0.8,\r\n    ease: [0.45, 0.05, 0.19, 1.0],\r\n};\r\nvar defaultPositionTransition = underDampedSpring();\r\nfunction getDefaultLayoutTransition(isPositionOnly) {\r\n    return isPositionOnly ? defaultPositionTransition : defaultLayoutTransition;\r\n}\r\nfunction isResolver(transition) {\r\n    return typeof transition === \"function\";\r\n}\r\nvar axisLabels = {\r\n    x: {\r\n        id: \"x\",\r\n        size: \"width\",\r\n        min: \"left\",\r\n        max: \"right\",\r\n        origin: \"originX\",\r\n    },\r\n    y: {\r\n        id: \"y\",\r\n        size: \"height\",\r\n        min: \"top\",\r\n        max: \"bottom\",\r\n        origin: \"originY\",\r\n    },\r\n};\r\nfunction centerOf(min, max) {\r\n    return (min + max) / 2;\r\n}\r\nfunction calcAxisDelta(prev, next, names) {\r\n    var _a;\r\n    var sizeDelta = prev[names.size] - next[names.size];\r\n    var origin = 0.5;\r\n    // If the element has changed size we want to check whether either side is in\r\n    // the same position before/after the layout transition. If so, we can anchor\r\n    // the element to that position and only animate its size.\r\n    if (sizeDelta) {\r\n        if (prev[names.min] === next[names.min]) {\r\n            origin = 0;\r\n        }\r\n        else if (prev[names.max] === next[names.max]) {\r\n            origin = 1;\r\n        }\r\n    }\r\n    var delta = (_a = {},\r\n        _a[names.size] = sizeDelta,\r\n        _a[names.origin] = origin,\r\n        _a[names.id] = \r\n        // Only measure a position delta if we haven't anchored to one side\r\n        origin === 0.5\r\n            ? centerOf(prev[names.min], prev[names.max]) -\r\n                centerOf(next[names.min], next[names.max])\r\n            : 0,\r\n        _a);\r\n    return delta;\r\n}\r\nfunction calcDelta(prev, next) {\r\n    var delta = __assign(__assign({}, calcAxisDelta(prev, next, axisLabels.x)), calcAxisDelta(prev, next, axisLabels.y));\r\n    return delta;\r\n}\r\nvar offset = {\r\n    getLayout: function (_a) {\r\n        var offset = _a.offset;\r\n        return offset;\r\n    },\r\n    measure: function (element) {\r\n        var offsetLeft = element.offsetLeft, offsetTop = element.offsetTop, offsetWidth = element.offsetWidth, offsetHeight = element.offsetHeight;\r\n        return {\r\n            left: offsetLeft,\r\n            top: offsetTop,\r\n            right: offsetLeft + offsetWidth,\r\n            bottom: offsetTop + offsetHeight,\r\n            width: offsetWidth,\r\n            height: offsetHeight,\r\n        };\r\n    },\r\n};\r\nvar boundingBox = {\r\n    getLayout: function (_a) {\r\n        var boundingBox = _a.boundingBox;\r\n        return boundingBox;\r\n    },\r\n    measure: function (element) {\r\n        var _a = element.getBoundingClientRect(), left = _a.left, top = _a.top, width = _a.width, height = _a.height, right = _a.right, bottom = _a.bottom;\r\n        return { left: left, top: top, width: width, height: height, right: right, bottom: bottom };\r\n    },\r\n};\r\nfunction readPositionStyle(element) {\r\n    return window.getComputedStyle(element).position;\r\n}\r\nfunction getLayoutType(prev, next, isPositionOnly) {\r\n    return isPositionOnly && prev === next ? offset : boundingBox;\r\n}\r\nfunction isSizeKey(key) {\r\n    return key === \"width\" || key === \"height\";\r\n}\r\nfunction getTransition(_a) {\r\n    var layoutTransition = _a.layoutTransition, positionTransition = _a.positionTransition;\r\n    return layoutTransition || positionTransition;\r\n}\r\nvar LayoutAnimation = /** @class */ (function (_super) {\r\n    __extends(LayoutAnimation, _super);\r\n    function LayoutAnimation() {\r\n        return _super !== null && _super.apply(this, arguments) || this;\r\n    }\r\n    // Measure the current state of the DOM before it's updated, and schedule checks to see\r\n    // if it's changed as a result of a React render.\r\n    LayoutAnimation.prototype.getSnapshotBeforeUpdate = function () {\r\n        var _a = this.props, innerRef = _a.innerRef, positionTransition = _a.positionTransition, values = _a.values, controls = _a.controls;\r\n        var element = innerRef.current;\r\n        if (!isHTMLElement(element))\r\n            return;\r\n        var layoutTransition = getTransition(this.props);\r\n        var isPositionOnly = !!positionTransition;\r\n        var positionStyle = readPositionStyle(element);\r\n        var prev = {\r\n            offset: offset.measure(element),\r\n            boundingBox: boundingBox.measure(element),\r\n        };\r\n        var transform;\r\n        var next;\r\n        var compare;\r\n        // We split the unsetting, read and reapplication of the `transform` style prop into\r\n        // different steps via useSyncEffect. Multiple components might all be doing the same\r\n        // thing and by splitting these jobs and flushing them in batches we prevent layout thrashing.\r\n        layoutSync.prepare(function () {\r\n            // Unset the transform of all layoutTransition components so we can accurately measure\r\n            // the target bounding box\r\n            transform = element.style.transform;\r\n            element.style.transform = \"\";\r\n        });\r\n        layoutSync.read(function () {\r\n            // Read the target VisualInfo of all layoutTransition components\r\n            next = {\r\n                offset: offset.measure(element),\r\n                boundingBox: boundingBox.measure(element),\r\n            };\r\n            var nextPosition = readPositionStyle(element);\r\n            compare = getLayoutType(positionStyle, nextPosition, isPositionOnly);\r\n        });\r\n        layoutSync.render(function () {\r\n            // Reverse the layout delta of all newly laid-out layoutTransition components into their\r\n            // prev visual state and then animate them into their new one using transforms.\r\n            var prevLayout = compare.getLayout(prev);\r\n            var nextLayout = compare.getLayout(next);\r\n            var delta = calcDelta(prevLayout, nextLayout);\r\n            var hasAnyChanged = delta.x || delta.y || delta.width || delta.height;\r\n            if (!hasAnyChanged) {\r\n                // If layout hasn't changed, reapply the transform and get out of here.\r\n                transform && (element.style.transform = transform);\r\n                return;\r\n            }\r\n            styler(element).set({\r\n                originX: delta.originX,\r\n                originY: delta.originY,\r\n            });\r\n            syncRenderSession.open();\r\n            var target = {};\r\n            var transition = {};\r\n            var transitionDefinition = isResolver(layoutTransition)\r\n                ? layoutTransition({ delta: delta })\r\n                : layoutTransition;\r\n            function makeTransition(layoutKey, transformKey, targetValue, visualOrigin) {\r\n                // If this dimension hasn't changed, early return\r\n                var deltaKey = isSizeKey(layoutKey) ? layoutKey : transformKey;\r\n                if (!delta[deltaKey])\r\n                    return;\r\n                var baseTransition = typeof transitionDefinition === \"boolean\"\r\n                    ? __assign({}, getDefaultLayoutTransition(isPositionOnly)) : transitionDefinition;\r\n                var value = values.get(transformKey, targetValue);\r\n                var velocity = value.getVelocity();\r\n                transition[transformKey] = baseTransition[transformKey]\r\n                    ? __assign({}, baseTransition[transformKey]) : __assign({}, baseTransition);\r\n                if (transition[transformKey].velocity === undefined) {\r\n                    transition[transformKey].velocity = velocity || 0;\r\n                }\r\n                // The target value of all transforms is the default value of that prop (ie x = 0, scaleX = 1)\r\n                // This is because we're inverting the layout change with `transform` and then animating to `transform: none`\r\n                target[transformKey] = targetValue;\r\n                var offsetToApply = !isSizeKey(layoutKey) && compare === offset\r\n                    ? value.get()\r\n                    : 0;\r\n                value.set(visualOrigin + offsetToApply);\r\n            }\r\n            makeTransition(\"left\", \"x\", 0, delta.x);\r\n            makeTransition(\"top\", \"y\", 0, delta.y);\r\n            if (!isPositionOnly) {\r\n                makeTransition(\"width\", \"scaleX\", 1, prev.boundingBox.width / next.boundingBox.width);\r\n                makeTransition(\"height\", \"scaleY\", 1, prev.boundingBox.height / next.boundingBox.height);\r\n            }\r\n            target.transition = transition;\r\n            // Only start the transition if `transitionDefinition` isn't `false`. Otherwise we want\r\n            // to leave the values in their newly-inverted state and let the user cope with the rest.\r\n            transitionDefinition && controls.start(target);\r\n            // Force a render to ensure there's no visual flickering\r\n            syncRenderSession.flush();\r\n        });\r\n        return null;\r\n    };\r\n    LayoutAnimation.prototype.componentDidUpdate = function () {\r\n        layoutSync.flush();\r\n    };\r\n    LayoutAnimation.prototype.render = function () {\r\n        return null;\r\n    };\r\n    LayoutAnimation.contextType = SyncLayoutContext;\r\n    return LayoutAnimation;\r\n}(Component));\r\nvar Layout = {\r\n    key: \"layout\",\r\n    shouldRender: function (_a) {\r\n        var positionTransition = _a.positionTransition, layoutTransition = _a.layoutTransition;\r\n        invariant(!(positionTransition && layoutTransition), \"Don't set both positionTransition and layoutTransition on the same component\");\r\n        return (typeof window !== \"undefined\" &&\r\n            !!(positionTransition || layoutTransition));\r\n    },\r\n    Component: LayoutAnimation,\r\n};\n\n/**\r\n * A list of all valid MotionProps\r\n *\r\n * @internalremarks\r\n * This doesn't throw if a `MotionProp` name is missing - it should.\r\n */\r\nvar validMotionProps = new Set([\r\n    \"initial\",\r\n    \"animate\",\r\n    \"exit\",\r\n    \"style\",\r\n    \"variants\",\r\n    \"transition\",\r\n    \"transformTemplate\",\r\n    \"transformValues\",\r\n    \"custom\",\r\n    \"inherit\",\r\n    \"static\",\r\n    \"positionTransition\",\r\n    \"layoutTransition\",\r\n    \"onAnimationStart\",\r\n    \"onAnimationComplete\",\r\n    \"onUpdate\",\r\n    \"onDragStart\",\r\n    \"onDrag\",\r\n    \"onDragEnd\",\r\n    \"onDirectionLock\",\r\n    \"onDragTransitionEnd\",\r\n    \"drag\",\r\n    \"dragControls\",\r\n    \"dragListener\",\r\n    \"dragConstraints\",\r\n    \"dragDirectionLock\",\r\n    \"dragElastic\",\r\n    \"dragMomentum\",\r\n    \"dragPropagation\",\r\n    \"dragTransition\",\r\n    \"_dragValueX\",\r\n    \"_dragValueY\",\r\n    \"_dragTransitionControls\",\r\n    \"dragOriginX\",\r\n    \"dragOriginY\",\r\n    \"onPan\",\r\n    \"onPanStart\",\r\n    \"onPanEnd\",\r\n    \"onPanSessionStart\",\r\n    \"onTap\",\r\n    \"onTapStart\",\r\n    \"onTapCancel\",\r\n    \"whileHover\",\r\n    \"whileTap\",\r\n    \"onHoverEnd\",\r\n    \"onHoverStart\",\r\n]);\r\n/**\r\n * Check whether a prop name is a valid `MotionProp` key.\r\n *\r\n * @param key - Name of the property to check\r\n * @returns `true` is key is a valid `MotionProp`.\r\n *\r\n * @public\r\n */\r\nfunction isValidMotionProp(key) {\r\n    return validMotionProps.has(key);\r\n}\n\nvar AnimatePropType;\r\n(function (AnimatePropType) {\r\n    AnimatePropType[\"Target\"] = \"Target\";\r\n    AnimatePropType[\"VariantLabel\"] = \"VariantLabel\";\r\n    AnimatePropType[\"AnimationSubscription\"] = \"AnimationSubscription\";\r\n})(AnimatePropType || (AnimatePropType = {}));\n\nfunction shallowCompare(next, prev) {\r\n    if (prev === null)\r\n        return false;\r\n    var prevLength = prev.length;\r\n    if (prevLength !== next.length)\r\n        return false;\r\n    for (var i = 0; i < prevLength; i++) {\r\n        if (prev[i] !== next[i])\r\n            return false;\r\n    }\r\n    return true;\r\n}\n\nvar hasUpdated = function (prev, next) {\r\n    return (next !== undefined &&\r\n        (Array.isArray(prev) && Array.isArray(next)\r\n            ? !shallowCompare(next, prev)\r\n            : prev !== next));\r\n};\r\nfunction targetWithoutTransition(_a, mergeTransitionEnd) {\r\n    if (mergeTransitionEnd === void 0) { mergeTransitionEnd = false; }\r\n    var transition = _a.transition, transitionEnd = _a.transitionEnd, target = __rest(_a, [\"transition\", \"transitionEnd\"]);\r\n    return mergeTransitionEnd\r\n        ? __assign(__assign({}, target), transitionEnd)\r\n        : target;\r\n}\r\n/**\r\n * Handle the `animate` prop when its an object of values, ie:\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ opacity: 1 }} />\r\n * ```\r\n *\r\n * @internalremarks\r\n * It might be worth consolidating this with `use-variants`\r\n *\r\n * ```jsx\r\n * <motion.div animate=\"visible\" />\r\n * ```\r\n *\r\n * @param target\r\n * @param controls\r\n * @param values\r\n * @param transition\r\n *\r\n * @internal\r\n */\r\nfunction useAnimateProp(targetAndTransition, controls, values, defaultTransition) {\r\n    var isInitialRender = useRef(true);\r\n    var prevValues = useRef(null);\r\n    if (!prevValues.current) {\r\n        prevValues.current = targetWithoutTransition(targetAndTransition, true);\r\n    }\r\n    useEffect(function () {\r\n        var targetToAnimate = {};\r\n        // These are the values we're actually animating\r\n        var animatingTarget = targetWithoutTransition(targetAndTransition);\r\n        // This is the target as it'll be once transitionEnd values are applied\r\n        var finalTarget = targetWithoutTransition(targetAndTransition, true);\r\n        // Detect which values have changed between renders\r\n        for (var key in animatingTarget) {\r\n            // This value should animate on mount if this value doesn't already exist (wasn't\r\n            // defined in `style` or `initial`) or if it does exist and it's already changed.\r\n            var shouldAnimateOnMount = isInitialRender.current &&\r\n                (!values.has(key) ||\r\n                    values.get(key).get() !== finalTarget[key]);\r\n            // If this value has updated between renders or it's we're animating this value on mount,\r\n            // add it to the animate target.\r\n            var isValidValue = finalTarget[key] !== null;\r\n            var valueHasUpdated = hasUpdated(prevValues.current[key], finalTarget[key]);\r\n            if (isValidValue && (valueHasUpdated || shouldAnimateOnMount)) {\r\n                targetToAnimate[key] = animatingTarget[key];\r\n            }\r\n        }\r\n        isInitialRender.current = false;\r\n        prevValues.current = __assign(__assign({}, prevValues.current), finalTarget);\r\n        if (Object.keys(targetToAnimate).length) {\r\n            controls.start(__assign(__assign({}, targetToAnimate), { transition: targetAndTransition.transition || defaultTransition, transitionEnd: targetAndTransition.transitionEnd }));\r\n        }\r\n    }, [targetAndTransition]);\r\n}\n\nvar labelsToArray = function (label) {\r\n    if (!label) {\r\n        return [];\r\n    }\r\n    if (Array.isArray(label)) {\r\n        return label;\r\n    }\r\n    return [label];\r\n};\r\nvar resolveVariantLabels = function (variant) {\r\n    var unresolvedVariant = variant instanceof MotionValue ? variant.get() : variant;\r\n    return Array.from(new Set(labelsToArray(unresolvedVariant)));\r\n};\r\n/**\r\n * Hooks in React sometimes accept a dependency array as their final argument. (ie useEffect/useMemo)\r\n * When values in this array change, React re-runs the dependency. However if the array\r\n * contains a variable number of items, React throws an error.\r\n */\r\nvar asDependencyList = function (list) { return [\r\n    list.join(\",\"),\r\n]; };\n\nvar hasVariantChanged = function (oldVariant, newVariant) {\r\n    return oldVariant.join(\",\") !== newVariant.join(\",\");\r\n};\r\n/**\r\n * Handle variants and the `animate` prop when its set as variant labels.\r\n *\r\n * @param initial - Initial variant(s)\r\n * @param animate - Variant(s) to animate to\r\n * @param inherit - `true` is inheriting animations from parent\r\n * @param controls - Animation controls\r\n *\r\n * @internal\r\n */\r\nfunction useVariants(initial, animate, inherit, controls) {\r\n    var targetVariants = resolveVariantLabels(animate);\r\n    var context = useContext(MotionContext);\r\n    var parentAlreadyMounted = context.hasMounted && context.hasMounted.current;\r\n    var hasMounted = useRef(false);\r\n    useEffect(function () {\r\n        var shouldAnimate = false;\r\n        if (inherit) {\r\n            // If we're inheriting variant changes and the parent has already\r\n            // mounted when this component loads, we need to manually trigger\r\n            // this animation.\r\n            shouldAnimate = !!parentAlreadyMounted;\r\n            targetVariants = resolveVariantLabels(context.animate);\r\n        }\r\n        else {\r\n            shouldAnimate =\r\n                hasMounted.current ||\r\n                    hasVariantChanged(resolveVariantLabels(initial), targetVariants);\r\n        }\r\n        shouldAnimate && controls.start(targetVariants);\r\n        hasMounted.current = true;\r\n    }, asDependencyList(targetVariants));\r\n}\n\n/**\r\n * `useAnimationGroupSubscription` allows a component to subscribe to an\r\n * externally-created `AnimationControls`, created by the `useAnimation` hook.\r\n *\r\n * @param animation\r\n * @param controls\r\n *\r\n * @internal\r\n */\r\nfunction useAnimationGroupSubscription(animation, controls) {\r\n    var unsubscribe = useMemo(function () { return animation.subscribe(controls); }, [\r\n        animation,\r\n    ]);\r\n    useEffect(function () { return function () {\r\n        unsubscribe && unsubscribe();\r\n    }; }, [unsubscribe]);\r\n}\n\nvar _a$1, _b;\r\nvar AnimatePropComponents = (_a$1 = {},\r\n    _a$1[AnimatePropType.Target] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, controls = _a.controls, values = _a.values, transition = _a.transition;\r\n        return useAnimateProp(animate, controls, values, transition);\r\n    }),\r\n    _a$1[AnimatePropType.VariantLabel] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, _b = _a.inherit, inherit = _b === void 0 ? true : _b, controls = _a.controls, initial = _a.initial;\r\n        return useVariants(initial, animate, inherit, controls);\r\n    }),\r\n    _a$1[AnimatePropType.AnimationSubscription] = makeRenderlessComponent(function (_a) {\r\n        var animate = _a.animate, controls = _a.controls;\r\n        return useAnimationGroupSubscription(animate, controls);\r\n    }),\r\n    _a$1);\r\nvar isVariantLabel$1 = function (prop) {\r\n    return Array.isArray(prop) || typeof prop === \"string\";\r\n};\r\nvar isAnimationSubscription = function (_a) {\r\n    var animate = _a.animate;\r\n    return animate instanceof AnimationControls;\r\n};\r\nvar animationProps = [\"initial\", \"animate\", \"whileTap\", \"whileHover\"];\r\nvar animatePropTypeTests = (_b = {},\r\n    _b[AnimatePropType.Target] = function (props) {\r\n        return (props.animate !== undefined &&\r\n            !isVariantLabel$1(props.animate) &&\r\n            !isAnimationSubscription(props));\r\n    },\r\n    _b[AnimatePropType.VariantLabel] = function (props) {\r\n        return (props.variants !== undefined ||\r\n            animationProps.some(function (key) { return typeof props[key] === \"string\"; }));\r\n    },\r\n    _b[AnimatePropType.AnimationSubscription] = isAnimationSubscription,\r\n    _b);\r\nvar getAnimationComponent = function (props) {\r\n    var animatePropType = undefined;\r\n    for (var key in AnimatePropType) {\r\n        if (animatePropTypeTests[key](props)) {\r\n            animatePropType = key;\r\n        }\r\n    }\r\n    return animatePropType ? AnimatePropComponents[animatePropType] : undefined;\r\n};\n\n/**\r\n * When a component is the child of `AnimatePresence`, it can use `usePresence`\r\n * to access information about whether it's still present in the React tree.\r\n *\r\n * ```jsx\r\n * import { usePresence } from \"framer-motion\"\r\n *\r\n * export const Component = () => {\r\n *   const [isPresent, safeToRemove] = usePresence()\r\n *\r\n *   useEffect(() => {\r\n *     !isPresent setTimeout(safeToRemove, 1000)\r\n *   }, [isPresent])\r\n *\r\n *   return <div />\r\n * }\r\n * ```\r\n *\r\n * If `isPresent` is `false`, it means that a component has been removed the tree, but\r\n * `AnimatePresence` won't really remove it until `safeToRemove` has been called.\r\n *\r\n * @public\r\n */\r\nfunction usePresence() {\r\n    var context = useContext(PresenceContext);\r\n    if (context === null)\r\n        return [true];\r\n    var isPresent = context.isPresent, onExitComplete = context.onExitComplete, register = context.register;\r\n    useEffect(register, []);\r\n    return !isPresent && onExitComplete ? [false, onExitComplete] : [true];\r\n}\n\nvar Exit = {\r\n    key: \"exit\",\r\n    shouldRender: function (props) { return !!props.exit && !checkShouldInheritVariant(props); },\r\n    Component: makeRenderlessComponent(function (props) {\r\n        var _a;\r\n        var animate = props.animate, controls = props.controls, exit = props.exit;\r\n        var _b = usePresence(), isPresent = _b[0], onExitComplete = _b[1];\r\n        var presenceContext = useContext(PresenceContext);\r\n        var isPlayingExitAnimation = useRef(false);\r\n        var custom = ((_a = presenceContext) === null || _a === void 0 ? void 0 : _a.custom) !== undefined\r\n            ? presenceContext.custom\r\n            : props.custom;\r\n        useEffect(function () {\r\n            if (!isPresent) {\r\n                if (!isPlayingExitAnimation.current && exit) {\r\n                    controls.setProps(__assign(__assign({}, props), { custom: custom }));\r\n                    controls.start(exit).then(onExitComplete);\r\n                }\r\n                isPlayingExitAnimation.current = true;\r\n            }\r\n            else if (isPlayingExitAnimation.current &&\r\n                animate &&\r\n                !(animate instanceof AnimationControls)) {\r\n                controls.start(animate);\r\n            }\r\n            if (isPresent) {\r\n                isPlayingExitAnimation.current = false;\r\n            }\r\n        }, [isPresent]);\r\n    }),\r\n};\n\nvar isPropValid = function (key) { return !isValidMotionProp(key); };\r\n/**\r\n * Emotion and Styled Components both allow users to pass through arbitrary props to their components\r\n * to dynamically generate CSS. They both use the `@emotion/is-prop-valid` package to determine which\r\n * of these should be passed to the underlying DOM node.\r\n *\r\n * However, when styling a Motion component `styled(motion.div)`, both packages pass through *all* props\r\n * as it's seen as an arbitrary component rather than a DOM node. Motion only allows arbitrary props\r\n * passed through the `custom` prop so it doesn't *need* the payload or computational overhead of\r\n * `@emotion/is-prop-valid`, however to fix this problem we need to use it.\r\n *\r\n * By making it an optionalDependency we can offer this functionality only in the situations where it's\r\n * actually required.\r\n */\r\ntry {\r\n    var emotionIsPropValid_1 = require(\"@emotion/is-prop-valid\").default;\r\n    isPropValid = function (key) {\r\n        // Handle events explicitly as Emotion validates them all as true\r\n        if (key.startsWith(\"on\")) {\r\n            return !isValidMotionProp(key);\r\n        }\r\n        else {\r\n            return emotionIsPropValid_1(key);\r\n        }\r\n    };\r\n}\r\ncatch (_a) {\r\n    // We don't need to actually do anything here - the fallback is the existing `isPropValid`.\r\n}\r\nfunction filterValidProps(props) {\r\n    var domProps = {};\r\n    for (var key in props) {\r\n        if (isPropValid(key)) {\r\n            domProps[key] = props[key];\r\n        }\r\n    }\r\n    return domProps;\r\n}\r\nvar buildHTMLProps = function (values, style, isStatic, isDrag) {\r\n    // The `any` isn't ideal but it is the type of createElement props argument\r\n    var props = {\r\n        style: buildStyleAttr(values, style, isStatic),\r\n    };\r\n    if (isDrag) {\r\n        // Disable text selection\r\n        props.style.userSelect = \"none\";\r\n        // Disable the ghost element when a user drags\r\n        props.draggable = false;\r\n    }\r\n    return props;\r\n};\r\nvar buildSVGProps = function (values, style) {\r\n    var motionValueStyles = resolveCurrent(values);\r\n    var props = buildSVGAttrs(motionValueStyles, undefined, undefined, undefined, undefined, false);\r\n    props.style = __assign(__assign({}, style), props.style);\r\n    return props;\r\n};\r\nvar functionalityComponents = [Layout, Drag, Gestures, Exit];\r\nvar numFunctionalityComponents = functionalityComponents.length;\r\n/**\r\n * Create a configuration for `motion` components that provides DOM-specific functionality.\r\n *\r\n * @internal\r\n */\r\nfunction createDomMotionConfig(Component) {\r\n    var isDOM = typeof Component === \"string\";\r\n    var isSVG = isDOM && svgElements.indexOf(Component) !== -1;\r\n    return {\r\n        renderComponent: function (ref, style, values, props, isStatic) {\r\n            var forwardedProps = isDOM ? filterValidProps(props) : props;\r\n            var staticVisualStyles = isSVG\r\n                ? buildSVGProps(values, style)\r\n                : buildHTMLProps(values, style, isStatic, !!props.drag);\r\n            return createElement(Component, __assign(__assign(__assign({}, forwardedProps), { ref: ref }), staticVisualStyles));\r\n        },\r\n        /**\r\n         * loadFunctionalityComponents gets used by the `motion` component\r\n         *\r\n         * Each functionality component gets provided the `ref`, animation controls and the `MotionValuesMap`\r\n         * generated for that component, as well as all the `props` passed to it by the user.\r\n         *\r\n         * The pattern used to determine whether to load and use each piece of functionality is\r\n         * consistent (should render? Then push component) and could be used to extend functionality.\r\n         *\r\n         * By exposing a mutable piece of memory via an API like `extendMotionComponent` we could\r\n         * allow users to add `FunctionalComponentDefinition`s. This would allow us to offer file size\r\n         * reductions by shipping an entry point that doesn't load gesture and drag functionality, and\r\n         * also offer a way for users to develop plugins/other functionality. Because these functionalities\r\n         * are loaded as components, we can look into using Suspense for this purpose.\r\n         *\r\n         * For user-defined functionality we'd need to allow\r\n         *  1) User-defined prop typing (extending `P`)\r\n         *  2) User-defined \"clean props\" function that removes their plugin's props before being passed to the DOM.\r\n         */\r\n        loadFunctionalityComponents: function (ref, values, props, context, controls, inherit) {\r\n            var activeComponents = [];\r\n            // TODO: Consolidate Animation functionality loading strategy with other functionality components\r\n            var Animation = getAnimationComponent(props);\r\n            if (Animation) {\r\n                activeComponents.push(createElement(Animation, { key: \"animation\", initial: props.initial, animate: props.animate, variants: props.variants, transition: props.transition, controls: controls, inherit: inherit, values: values }));\r\n            }\r\n            for (var i = 0; i < numFunctionalityComponents; i++) {\r\n                var _a = functionalityComponents[i], shouldRender = _a.shouldRender, key = _a.key, Component_1 = _a.Component;\r\n                if (shouldRender(props, context)) {\r\n                    activeComponents.push(createElement(Component_1, __assign({ key: key }, props, { parentContext: context, values: values, controls: controls, innerRef: ref })));\r\n                }\r\n            }\r\n            return activeComponents;\r\n        },\r\n        getValueControlsConfig: function (ref, values) {\r\n            return {\r\n                values: values,\r\n                readValueFromSource: function (key) {\r\n                    return styler(ref.current).get(key);\r\n                },\r\n                // TODO: This is a good second source of plugins. This function contains the CSS variable\r\n                // and unit conversion support. These functions share a common signature. We could make another\r\n                // API for adding these.\r\n                makeTargetAnimatable: parseDomVariant(values, ref),\r\n            };\r\n        },\r\n    };\r\n}\n\nvar htmlMotionComponents = htmlElements.reduce(function (acc, Component) {\r\n    var config = createDomMotionConfig(Component);\r\n    // Suppress \"Expression produces a union type that is too complex to represent\" error\r\n    // @ts-ignore\r\n    acc[Component] = createMotionComponent(config);\r\n    return acc;\r\n}, {});\r\nvar svgMotionComponents = svgElements.reduce(function (acc, Component) {\r\n    // Suppress \"Expression produces a union type that is too complex to represent\" error\r\n    // @ts-ignore\r\n    acc[Component] = createMotionComponent(createDomMotionConfig(Component));\r\n    return acc;\r\n}, {});\r\n/**\r\n * HTML & SVG components, optimised for use with gestures and animation. These can be used as\r\n * drop-in replacements for any HTML & SVG component, all CSS & SVG properties are supported.\r\n *\r\n * @internalremarks\r\n *\r\n * I'd like to make it possible for these to be loaded \"on demand\" - to reduce bundle size by only\r\n * including HTML/SVG stylers, animation and/or gesture support when necessary.\r\n *\r\n * ```jsx\r\n * <motion.div animate={{ x: 100 }} />\r\n *\r\n * <motion.p animate={{ height: 200 }} />\r\n *\r\n * <svg><motion.circle r={10} animate={{ r: 20 }} /></svg>\r\n * ```\r\n *\r\n * @public\r\n */\r\nvar motion = __assign(__assign({ \r\n    /**\r\n     * Convert a custom React component into a `motion` component.\r\n     *\r\n     * It can also accept a string, to create [custom DOM elements](https://developer.mozilla.org/en-US/docs/Web/Web_Components/Using_custom_elements).\r\n     *\r\n     * ```jsx\r\n     * const Component = React.forwardRef((props: Props, ref) => {\r\n     *   return <div ref={ref} />\r\n     * })\r\n     *\r\n     * const MotionComponent = motion.custom<Props>(Component)\r\n     * ```\r\n     *\r\n     * @param Component -\r\n     */\r\n    custom: function custom(Component) {\r\n        return createMotionComponent(createDomMotionConfig(Component));\r\n    } }, htmlMotionComponents), svgMotionComponents);\n\n/**\r\n * Creates a `MotionValue` to track the state and velocity of a value.\r\n *\r\n * Usually, these are created automatically. For advanced use-cases, like use with `useTransform`, you can create `MotionValue`s externally and pass them into the animated component via the `style` prop.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * export function MyComponent() {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <Frame scale={scale} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const scale = useMotionValue(1)\r\n *\r\n *   return <motion.div style={{ scale }} />\r\n * }\r\n * ```\r\n *\r\n * @param initial - The initial state.\r\n *\r\n * @public\r\n */\r\nfunction useMotionValue(initial) {\r\n    return useConstant(function () { return motionValue(initial); });\r\n}\n\n/**\r\n * If the provided value is a MotionValue, this returns the actual value, otherwise just the value itself\r\n *\r\n * TODO: Remove and move to library\r\n *\r\n * @internal\r\n */\r\nfunction unwrapMotionValue(value) {\r\n    var unwrappedValue = value instanceof MotionValue ? value.get() : value;\r\n    return isCustomValue(unwrappedValue)\r\n        ? unwrappedValue.toValue()\r\n        : unwrappedValue;\r\n}\n\nvar isCustomValueType = function (v) {\r\n    return typeof v === \"object\" && v.mix;\r\n};\r\nvar getMixer = function (v) { return (isCustomValueType(v) ? v.mix : undefined); };\r\nfunction transform() {\r\n    var args = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        args[_i] = arguments[_i];\r\n    }\r\n    var useImmediate = !Array.isArray(args[0]);\r\n    var argOffset = useImmediate ? 0 : -1;\r\n    var inputValue = args[0 + argOffset];\r\n    var inputRange = args[1 + argOffset];\r\n    var outputRange = args[2 + argOffset];\r\n    var options = args[3 + argOffset];\r\n    var interpolator = interpolate(inputRange, outputRange, __assign({ mixer: getMixer(outputRange[0]) }, options));\r\n    return useImmediate ? interpolator(inputValue) : interpolator;\r\n}\n\nvar isTransformer = function (v) {\r\n    return typeof v === \"function\";\r\n};\r\nvar noop$1 = function (v) { return v; };\r\nfunction useTransform(parent, customTransform, to, options) {\r\n    var value = useRef(null);\r\n    var comparitor = [parent];\r\n    var transformer = noop$1;\r\n    if (isTransformer(customTransform)) {\r\n        transformer = customTransform;\r\n    }\r\n    else if (Array.isArray(to)) {\r\n        var from = customTransform;\r\n        transformer = transform(from, to, options);\r\n        comparitor = [parent, from.join(\",\"), to.join(\",\")];\r\n    }\r\n    return useMemo(function () {\r\n        if (value.current)\r\n            value.current.destroy();\r\n        value.current = parent.addChild({ transformer: transformer });\r\n        return value.current;\r\n    }, comparitor);\r\n}\n\n// Keep things reasonable and avoid scale: Infinity. In practise we might need\r\n// to add another value, opacity, that could interpolate scaleX/Y [0,0.01] => [0,1]\r\n// to simply hide content at unreasonable scales.\r\nvar maxScale = 100000;\r\nvar invertScale = function (scale) { return (scale > 0.001 ? 1 / scale : maxScale); };\r\n/**\r\n * Returns a `MotionValue` each for `scaleX` and `scaleY` that update with the inverse\r\n * of their respective parent scales.\r\n *\r\n * This is useful for undoing the distortion of content when scaling a parent component.\r\n *\r\n * By default, `useInvertedScale` will automatically fetch `scaleX` and `scaleY` from the nearest parent.\r\n * By passing other `MotionValue`s in as `useInvertedScale({ scaleX, scaleY })`, it will invert the output\r\n * of those instead.\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const MyComponent = () => {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <motion.div style={{ scaleX, scaleY }} />\r\n * }\r\n * ```\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * function MyComponent() {\r\n *   const { scaleX, scaleY } = useInvertedScale()\r\n *   return <Frame scaleX={scaleX} scaleY={scaleY} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useInvertedScale(scale) {\r\n    var parentScaleX = useMotionValue(1);\r\n    var parentScaleY = useMotionValue(1);\r\n    var values = useContext(MotionContext).values;\r\n    invariant(!!(scale || values), \"If no scale values are provided, useInvertedScale must be used within a child of another motion component.\");\r\n    if (scale) {\r\n        parentScaleX = scale.scaleX || parentScaleX;\r\n        parentScaleY = scale.scaleY || parentScaleY;\r\n    }\r\n    else if (values) {\r\n        parentScaleX = values.get(\"scaleX\", 1);\r\n        parentScaleY = values.get(\"scaleY\", 1);\r\n    }\r\n    var scaleX = useTransform(parentScaleX, invertScale);\r\n    var scaleY = useTransform(parentScaleY, invertScale);\r\n    return { scaleX: scaleX, scaleY: scaleY };\r\n}\n\nfunction useOnChange(value, callback) {\r\n    useEffect(function () { return (isMotionValue(value) ? value.onChange(callback) : undefined); }, [value]);\r\n}\n\n/**\r\n * Creates a `MotionValue` that, when `set`, will use a spring animation to animate to its new state.\r\n *\r\n * It can either work as a stand-alone `MotionValue` by initialising it with a value, or as a subscriber\r\n * to another `MotionValue`.\r\n *\r\n * @remarks\r\n *\r\n * ```jsx\r\n * const x = useSpring(0, { stiffness: 300 })\r\n * const y = useSpring(x, { damping: 10 })\r\n * ```\r\n *\r\n * @param inputValue - `MotionValue` or number. If provided a `MotionValue`, when the input `MotionValue` changes, the created `MotionValue` will spring towards that value.\r\n * @param springConfig - Configuration options for the spring.\r\n * @returns `MotionValue`\r\n *\r\n * @public\r\n */\r\nfunction useSpring(source, config) {\r\n    if (config === void 0) { config = {}; }\r\n    var activeSpringAnimation = useRef(null);\r\n    var value = useMotionValue(isMotionValue(source) ? source.get() : source);\r\n    useMemo(function () {\r\n        return value.attach(function (v, set) {\r\n            if (activeSpringAnimation.current) {\r\n                activeSpringAnimation.current.stop();\r\n            }\r\n            activeSpringAnimation.current = spring(__assign({ from: value.get(), to: v, velocity: value.getVelocity() }, config)).start(set);\r\n            return value.get();\r\n        });\r\n    }, Object.values(config));\r\n    useOnChange(source, function (v) { return value.set(parseFloat(v)); });\r\n    return value;\r\n}\n\nfunction createScrollMotionValues() {\r\n    return {\r\n        scrollX: motionValue(0),\r\n        scrollY: motionValue(0),\r\n        scrollXProgress: motionValue(0),\r\n        scrollYProgress: motionValue(0),\r\n    };\r\n}\r\nfunction setProgress(offset, maxOffset, value) {\r\n    value.set(!offset || !maxOffset ? 0 : offset / maxOffset);\r\n}\r\nfunction createScrollUpdater(values, getOffsets) {\r\n    var update = function () {\r\n        var _a = getOffsets(), xOffset = _a.xOffset, yOffset = _a.yOffset, xMaxOffset = _a.xMaxOffset, yMaxOffset = _a.yMaxOffset;\r\n        // Set absolute positions\r\n        values.scrollX.set(xOffset);\r\n        values.scrollY.set(yOffset);\r\n        // Set 0-1 progress\r\n        setProgress(xOffset, xMaxOffset, values.scrollXProgress);\r\n        setProgress(yOffset, yMaxOffset, values.scrollYProgress);\r\n    };\r\n    update();\r\n    return update;\r\n}\n\nvar isBrowser$2 = typeof window !== \"undefined\";\r\nvar useIsomorphicLayoutEffect = isBrowser$2 ? useLayoutEffect : useEffect;\n\nvar getElementScrollOffsets = function (element) { return function () {\r\n    return {\r\n        xOffset: element.scrollLeft,\r\n        yOffset: element.scrollTop,\r\n        xMaxOffset: element.scrollWidth - element.offsetWidth,\r\n        yMaxOffset: element.scrollHeight - element.offsetHeight,\r\n    };\r\n}; };\r\n/**\r\n * Returns MotionValues that update when the provided element scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useElementScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const ref = React.useRef()\r\n *   const { scrollYProgress } = useElementScroll(ref)\r\n *\r\n *   return (\r\n *     <Frame ref={ref}>\r\n *       <Frame scaleX={scrollYProgress} />\r\n *     </Frame>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const ref = useRef()\r\n *   const { scrollYProgress } = useElementScroll(ref)\r\n *\r\n *   return (\r\n *     <div ref={ref}>\r\n *       <motion.div style={{ scaleX: scrollYProgress }} />\r\n *     </div>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useElementScroll(ref) {\r\n    var values = useConstant(createScrollMotionValues);\r\n    useIsomorphicLayoutEffect(function () {\r\n        var element = ref.current;\r\n        invariant(!!element, \"ref provided to useScroll must be passed into a HTML element.\");\r\n        if (!element)\r\n            return;\r\n        var updateScrollValues = createScrollUpdater(values, getElementScrollOffsets(element));\r\n        var scrollListener = addDomEvent(element, \"scroll\", updateScrollValues, { passive: true });\r\n        var resizeListener = addDomEvent(element, \"resize\", updateScrollValues);\r\n        return function () {\r\n            scrollListener && scrollListener();\r\n            resizeListener && resizeListener();\r\n        };\r\n    }, []);\r\n    return values;\r\n}\n\nvar viewportScrollValues = createScrollMotionValues();\r\nfunction getViewportScrollOffsets() {\r\n    return {\r\n        xOffset: window.pageXOffset,\r\n        yOffset: window.pageYOffset,\r\n        xMaxOffset: document.body.clientWidth - window.innerWidth,\r\n        yMaxOffset: document.body.clientHeight - window.innerHeight,\r\n    };\r\n}\r\nvar hasListeners = false;\r\nfunction addEventListeners() {\r\n    hasListeners = true;\r\n    if (typeof window === \"undefined\")\r\n        return;\r\n    var updateScrollValues = createScrollUpdater(viewportScrollValues, getViewportScrollOffsets);\r\n    addDomEvent(window, \"scroll\", updateScrollValues, { passive: true });\r\n    addDomEvent(window, \"resize\", updateScrollValues);\r\n}\r\n/**\r\n * Returns MotionValues that update when the viewport scrolls:\r\n *\r\n * - `scrollX` — Horizontal scroll distance in pixels.\r\n * - `scrollY` — Vertical scroll distance in pixels.\r\n * - `scrollXProgress` — Horizontal scroll progress between `0` and `1`.\r\n * - `scrollYProgress` — Vertical scroll progress between `0` and `1`.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import {\r\n *   Frame,\r\n *   useViewportScroll,\r\n *   useTransform\r\n * } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <Frame scaleX={scrollYProgress} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * export const MyComponent = () => {\r\n *   const { scrollYProgress } = useViewportScroll()\r\n *   return <motion.div style={{ scaleX: scrollYProgress }} />\r\n * }\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useViewportScroll() {\r\n    useIsomorphicLayoutEffect(function () {\r\n        !hasListeners && addEventListeners();\r\n    }, []);\r\n    return viewportScrollValues;\r\n}\n\n/**\r\n * Creates `AnimationControls`, which can be used to manually start, stop\r\n * and sequence animations on one or more components.\r\n *\r\n * The returned `AnimationControls` should be passed to the `animate` property\r\n * of the components you want to animate.\r\n *\r\n * These components can then be animated with the `start` method.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { Frame, useAnimation } from 'framer'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <Frame animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * import * as React from 'react'\r\n * import { motion, useAnimation } from 'framer-motion'\r\n *\r\n * export function MyComponent(props) {\r\n *    const controls = useAnimation()\r\n *\r\n *    controls.start({\r\n *        x: 100,\r\n *        transition: { duration: 0.5 },\r\n *    })\r\n *\r\n *    return <motion.div animate={controls} />\r\n * }\r\n * ```\r\n *\r\n * @returns Animation controller with `start` and `stop` methods\r\n *\r\n * @public\r\n */\r\nfunction useAnimation() {\r\n    var animationControls = useConstant(function () { return new AnimationControls(); });\r\n    useEffect(function () {\r\n        animationControls.mount();\r\n        return function () { return animationControls.unmount(); };\r\n    }, []);\r\n    return animationControls;\r\n}\n\n/**\r\n * Experimental API.\r\n *\r\n * Makes an animated version of `useState`.\r\n *\r\n * @remarks\r\n *\r\n * When the returned state setter is called, values will be animated to their new target.\r\n *\r\n * This allows the animation of arbitrary React components.\r\n *\r\n * **Note:** When animating DOM components, it's always preferable to use the `animate` prop, as Framer\r\n * will bypass React's rendering cycle with one optimised for 60fps motion. This Hook is specifically\r\n * for animating props on arbitrary React components, or for animating text content.\r\n *\r\n * ```jsx\r\n * const [state, setState] = useAnimatedState({ percentage: 0 })\r\n *\r\n * return (\r\n *   <Graph\r\n *     percentage={state.percentage}\r\n *     onTap={() => setState({ percentage: 50 })}\r\n *   />\r\n * )\r\n * ```\r\n *\r\n * @internalremarks\r\n *\r\n * TODO:\r\n * - Make hook accept a typed version of Target that accepts any value (not just DOM values)\r\n * - Allow hook to accept single values. ie useAnimatedState(0)\r\n * - Allow providing MotionValues via initialState.\r\n *\r\n * @beta\r\n */\r\nfunction useAnimatedState(initialState) {\r\n    var _a = useState(initialState), animationState = _a[0], onUpdate = _a[1];\r\n    var config = useConstant(function () { return ({ onUpdate: onUpdate }); });\r\n    var values = useMotionValues(config);\r\n    var controls = useValueAnimationControls({\r\n        values: values,\r\n        readValueFromSource: function (key) { return animationState[key]; },\r\n    }, {}, false);\r\n    var startAnimation = useConstant(function () { return function (animationDefinition) {\r\n        return controls.start(animationDefinition);\r\n    }; });\r\n    useEffect(function () {\r\n        values.mount();\r\n        return function () { return values.unmount(); };\r\n    }, []);\r\n    return [animationState, startAnimation];\r\n}\n\n/**\r\n * Cycles through a series of visual properties. Can be used to toggle between or cycle through animations. It works similar to `useState` in React. It is provided an initial array of possible states, and returns an array of two arguments.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { Frame, useCycle } from \"framer\"\r\n *\r\n * export function MyComponent() {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <Frame\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * An index value can be passed to the returned `cycle` function to cycle to a specific index.\r\n *\r\n * ```jsx\r\n * import * as React from \"react\"\r\n * import { motion, useCycle } from \"framer-motion\"\r\n *\r\n * export const MyComponent = () => {\r\n *   const [x, cycleX] = useCycle(0, 50, 100)\r\n *\r\n *   return (\r\n *     <motion.div\r\n *       animate={{ x: x }}\r\n *       onTap={() => cycleX()}\r\n *      />\r\n *    )\r\n * }\r\n * ```\r\n *\r\n * @param items - items to cycle through\r\n * @returns [currentState, cycleState]\r\n *\r\n * @public\r\n */\r\nfunction useCycle() {\r\n    var items = [];\r\n    for (var _i = 0; _i < arguments.length; _i++) {\r\n        items[_i] = arguments[_i];\r\n    }\r\n    // TODO: After Framer X beta, remove this warning\r\n    warning(items.length > 1, \"useCycle syntax has changed. `useCycle([0, 1, 2])` becomes `useCycle(0, 1, 2)`\");\r\n    var index = useRef(0);\r\n    var _a = useState(items[index.current]), item = _a[0], setItem = _a[1];\r\n    return [\r\n        item,\r\n        function (next) {\r\n            index.current =\r\n                typeof next !== \"number\"\r\n                    ? wrap(0, items.length, index.current + 1)\r\n                    : next;\r\n            setItem(items[index.current]);\r\n        },\r\n    ];\r\n}\n\n/**\r\n * Can manually trigger a drag gesture on one or more `drag`-enabled `motion` components.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <Frame onTapStart={startDrag} />\r\n *     <Frame drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onMouseDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nvar DragControls = /** @class */ (function () {\r\n    function DragControls() {\r\n        this.componentControls = new Set();\r\n    }\r\n    /**\r\n     * Subscribe a component's internal `ComponentDragControls` to the user-facing API.\r\n     *\r\n     * @internal\r\n     */\r\n    DragControls.prototype.subscribe = function (controls) {\r\n        var _this = this;\r\n        this.componentControls.add(controls);\r\n        return function () { return _this.componentControls.delete(controls); };\r\n    };\r\n    /**\r\n     * Start a drag gesture on every `motion` component that has this set of drag controls\r\n     * passed into it via the `dragControls` prop.\r\n     *\r\n     * ```jsx\r\n     * dragControls.start(e, {\r\n     *   snapToCursor: true\r\n     * })\r\n     * ```\r\n     *\r\n     * @param event - A mouse/touch/pointer event.\r\n     * @param options - Options\r\n     *\r\n     * @public\r\n     */\r\n    DragControls.prototype.start = function (event, options) {\r\n        this.componentControls.forEach(function (controls) {\r\n            controls.start(event.nativeEvent || event, options);\r\n        });\r\n    };\r\n    return DragControls;\r\n}());\r\nvar createDragControls = function () { return new DragControls(); };\r\n/**\r\n * Usually, dragging is initiated by pressing down on a `motion` component with a `drag` prop\r\n * and moving it. For some use-cases, for instance clicking at an arbitrary point on a video scrubber, we\r\n * might want to initiate that dragging from a different component than the draggable one.\r\n *\r\n * By creating a `dragControls` using the `useDragControls` hook, we can pass this into\r\n * the draggable component's `dragControls` prop. It exposes a `start` method\r\n * that can start dragging from pointer events on other components.\r\n *\r\n * @library\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <Frame onTapStart={startDrag} />\r\n *     <Frame drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @motion\r\n *\r\n * ```jsx\r\n * const dragControls = useDragControls()\r\n *\r\n * function startDrag(event) {\r\n *   dragControls.start(event, { snapToCursor: true })\r\n * }\r\n *\r\n * return (\r\n *   <>\r\n *     <div onMouseDown={startDrag} />\r\n *     <motion.div drag=\"x\" dragControls={dragControls} />\r\n *   </>\r\n * )\r\n * ```\r\n *\r\n * @public\r\n */\r\nfunction useDragControls() {\r\n    return useConstant(createDragControls);\r\n}\n\nvar PresenceChild = function (_a) {\r\n    var children = _a.children, initial = _a.initial, isPresent = _a.isPresent, onExitComplete = _a.onExitComplete, custom = _a.custom;\r\n    var numPresenceChildren = useRef(0);\r\n    var numExitComplete = useRef(0);\r\n    var context = {\r\n        initial: initial,\r\n        isPresent: isPresent,\r\n        custom: custom,\r\n        onExitComplete: function () {\r\n            numExitComplete.current++;\r\n            var allComplete = numExitComplete.current >= numPresenceChildren.current;\r\n            onExitComplete && allComplete && onExitComplete();\r\n        },\r\n    };\r\n    var register = useMemo(function () {\r\n        numExitComplete.current = 0;\r\n        return function () {\r\n            numPresenceChildren.current++;\r\n            return function () { return numPresenceChildren.current--; };\r\n        };\r\n    }, [isPresent]);\r\n    return (createElement(PresenceContext.Provider, { value: __assign(__assign({}, context), { register: register }) }, children));\r\n};\n\nfunction getChildKey(child) {\r\n    return child.key || \"\";\r\n}\r\nfunction updateChildLookup(children, allChildren) {\r\n    var seenChildren = process.env.NODE_ENV !== \"production\" ? new Set() : null;\r\n    children.forEach(function (child) {\r\n        var key = getChildKey(child);\r\n        if (process.env.NODE_ENV !== \"production\" && seenChildren) {\r\n            if (seenChildren.has(key)) {\r\n                console.warn(\"Children of AnimatePresence require unique keys. \\\"\" + key + \"\\\" is a duplicate.\");\r\n            }\r\n            seenChildren.add(key);\r\n        }\r\n        allChildren.set(key, child);\r\n    });\r\n}\r\nfunction onlyElements(children) {\r\n    var filtered = [];\r\n    // We use forEach here instead of map as map mutates the component key by preprending `.$`\r\n    Children.forEach(children, function (child) {\r\n        if (isValidElement(child))\r\n            filtered.push(child);\r\n    });\r\n    return filtered;\r\n}\r\n/**\r\n * `AnimatePresence` enables the animation of components that have been removed from the tree.\r\n *\r\n * When adding/removing more than a single child, every child **must** be given a unique `key` prop.\r\n *\r\n * @library\r\n *\r\n * Any `Frame` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { Frame, AnimatePresence } from 'framer'\r\n *\r\n * // As items are added and removed from `items`\r\n * export function Items({ items }) {\r\n *   return (\r\n *     <AnimatePresence>\r\n *       {items.map(item => (\r\n *         <Frame\r\n *           key={item.id}\r\n *           initial={{ opacity: 0 }}\r\n *           animate={{ opacity: 1 }}\r\n *           exit={{ opacity: 0 }}\r\n *         />\r\n *       ))}\r\n *     </AnimatePresence>\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * @motion\r\n *\r\n * Any `motion` components that have an `exit` property defined will animate out when removed from\r\n * the tree.\r\n *\r\n * ```jsx\r\n * import { motion, AnimatePresence } from 'framer-motion'\r\n *\r\n * export const Items = ({ items }) => (\r\n *   <AnimatePresence>\r\n *     {items.map(item => (\r\n *       <motion.div\r\n *         key={item.id}\r\n *         initial={{ opacity: 0 }}\r\n *         animate={{ opacity: 1 }}\r\n *         exit={{ opacity: 0 }}\r\n *       />\r\n *     ))}\r\n *   </AnimatePresence>\r\n * )\r\n * ```\r\n *\r\n * You can sequence exit animations throughout a tree using variants.\r\n *\r\n * If a child contains multiple `motion` components with `exit` props, it will only unmount the child\r\n * once all `motion` components have finished animating out. Likewise, any components using\r\n * `usePresence` all need to call `safeToRemove`.\r\n *\r\n * @public\r\n */\r\nvar AnimatePresence = function (_a) {\r\n    var children = _a.children, custom = _a.custom, _b = _a.initial, initial = _b === void 0 ? true : _b, onExitComplete = _a.onExitComplete, exitBeforeEnter = _a.exitBeforeEnter;\r\n    // We want to force a re-render once all exiting animations have finished. We\r\n    // either use a local forceUpdate function, or one from a parent context if it exists.\r\n    var localForceUpdate = useForceUpdate();\r\n    var contextForceUpdate = useContext(SyncLayoutContext);\r\n    var forceUpdate = contextForceUpdate || localForceUpdate;\r\n    var isInitialRender = useRef(true);\r\n    // Filter out any children that aren't ReactElements. We can only track ReactElements with a props.key\r\n    var filteredChildren = onlyElements(children);\r\n    // Keep a living record of the children we're actually rendering so we\r\n    // can diff to figure out which are entering and exiting\r\n    var presentChildren = useRef(filteredChildren);\r\n    // A lookup table to quickly reference components by key\r\n    var allChildren = useRef(new Map())\r\n        .current;\r\n    // A living record of all currently exiting components.\r\n    var exiting = useRef(new Set()).current;\r\n    updateChildLookup(filteredChildren, allChildren);\r\n    // If this is the initial component render, just deal with logic surrounding whether\r\n    // we play onMount animations or not.\r\n    if (isInitialRender.current) {\r\n        isInitialRender.current = false;\r\n        return (createElement(Fragment, null, filteredChildren.map(function (child) { return (createElement(PresenceChild, { key: getChildKey(child), isPresent: true, initial: initial ? undefined : false }, child)); })));\r\n    }\r\n    // If this is a subsequent render, deal with entering and exiting children\r\n    var childrenToRender = __spreadArrays(filteredChildren);\r\n    // Diff the keys of the currently-present and target children to update our\r\n    // exiting list.\r\n    var presentKeys = presentChildren.current.map(getChildKey);\r\n    var targetKeys = filteredChildren.map(getChildKey);\r\n    // Diff the present children with our target children and mark those that are exiting\r\n    var numPresent = presentKeys.length;\r\n    for (var i = 0; i < numPresent; i++) {\r\n        var key = presentKeys[i];\r\n        if (targetKeys.indexOf(key) === -1) {\r\n            exiting.add(key);\r\n        }\r\n        else {\r\n            // In case this key has re-entered, remove from the exiting list\r\n            exiting.delete(key);\r\n        }\r\n    }\r\n    // If we currently have exiting children, and we're deferring rendering incoming children\r\n    // until after all current children have exiting, empty the childrenToRender array\r\n    if (exitBeforeEnter && exiting.size) {\r\n        childrenToRender = [];\r\n    }\r\n    // Loop through all currently exiting components and clone them to overwrite `animate`\r\n    // with any `exit` prop they might have defined.\r\n    exiting.forEach(function (key) {\r\n        // If this component is actually entering again, early return\r\n        if (targetKeys.indexOf(key) !== -1)\r\n            return;\r\n        var child = allChildren.get(key);\r\n        if (!child)\r\n            return;\r\n        var insertionIndex = presentKeys.indexOf(key);\r\n        var onExit = function () {\r\n            exiting.delete(key);\r\n            // Remove this child from the present children\r\n            var removeIndex = presentChildren.current.findIndex(function (child) { return child.key === key; });\r\n            presentChildren.current.splice(removeIndex, 1);\r\n            // Defer re-rendering until all exiting children have indeed left\r\n            if (!exiting.size) {\r\n                presentChildren.current = filteredChildren;\r\n                forceUpdate();\r\n                onExitComplete && onExitComplete();\r\n            }\r\n        };\r\n        childrenToRender.splice(insertionIndex, 0, createElement(PresenceChild, { key: getChildKey(child), isPresent: false, onExitComplete: onExit, custom: custom }, child));\r\n    });\r\n    // Add `MotionContext` even to children that don't need it to ensure we're rendering\r\n    // the same tree between renders\r\n    childrenToRender = childrenToRender.map(function (child) {\r\n        var key = child.key;\r\n        return exiting.has(key) ? (child) : (createElement(PresenceChild, { key: getChildKey(child), isPresent: true }, child));\r\n    });\r\n    presentChildren.current = childrenToRender;\r\n    if (process.env.NODE_ENV !== \"production\" &&\r\n        exitBeforeEnter &&\r\n        childrenToRender.length > 1) {\r\n        console.warn(\"You're attempting to animate multiple children within AnimatePresence, but its exitBeforeEnter prop is set to true. This will lead to odd visual behaviour.\");\r\n    }\r\n    return (createElement(Fragment, null, exiting.size\r\n        ? childrenToRender\r\n        : childrenToRender.map(function (child) { return cloneElement(child); })));\r\n};\n\n// Does this device prefer reduced motion? Returns `null` server-side.\r\nvar prefersReducedMotion = motionValue(null);\r\nif (typeof window !== \"undefined\") {\r\n    if (window.matchMedia) {\r\n        var motionMediaQuery_1 = window.matchMedia(\"(prefers-reduced-motion)\");\r\n        var setReducedMotionPreferences = function () {\r\n            return prefersReducedMotion.set(motionMediaQuery_1.matches);\r\n        };\r\n        motionMediaQuery_1.addListener(setReducedMotionPreferences);\r\n        setReducedMotionPreferences();\r\n    }\r\n    else {\r\n        prefersReducedMotion.set(false);\r\n    }\r\n}\r\nfunction determineShouldReduceMotion(prefersReduced, isReducedMotion) {\r\n    return typeof isReducedMotion === \"boolean\"\r\n        ? isReducedMotion\r\n        : Boolean(prefersReduced);\r\n}\n\n/**\r\n * A hook that returns `true` if we should be using reduced motion based on the current device's Reduced Motion setting.\r\n *\r\n * This can be used to implement changes to your UI based on Reduced Motion. For instance, replacing motion-sickness inducing\r\n * `x`/`y` animations with `opacity`, disabling the autoplay of background videos, or turning off parallax motion.\r\n *\r\n * It will actively respond to changes and re-render your components with the latest setting.\r\n *\r\n * ```jsx\r\n * export function Sidebar({ isOpen }) {\r\n *   const shouldReduceMotion = useReducedMotion()\r\n *   const closedX = shouldReduceMotion ? 0 : \"-100%\"\r\n *\r\n *   return (\r\n *     <motion.div animate={{\r\n *       opacity: isOpen ? 1 : 0,\r\n *       x: isOpen ? 0 : closedX\r\n *     }} />\r\n *   )\r\n * }\r\n * ```\r\n *\r\n * @return boolean\r\n *\r\n * @public\r\n */\r\nfunction useReducedMotion() {\r\n    var isReducedMotion = useContext(MotionContext).isReducedMotion;\r\n    var _a = useState(determineShouldReduceMotion(prefersReducedMotion.get(), isReducedMotion)), shouldReduceMotion = _a[0], setShouldReduceMotion = _a[1];\r\n    useEffect(function () {\r\n        return prefersReducedMotion.onChange(function (v) {\r\n            setShouldReduceMotion(determineShouldReduceMotion(v, isReducedMotion));\r\n        });\r\n    }, [setShouldReduceMotion, isReducedMotion]);\r\n    return shouldReduceMotion;\r\n}\n\n/**\r\n * Define accessibility options for a tree. Can be used to force the tree into Reduced Motion mode,\r\n * or disable device detection.\r\n *\r\n * @internal\r\n */\r\nfunction ReducedMotion(_a) {\r\n    var children = _a.children, enabled = _a.enabled;\r\n    var context = useContext(MotionContext);\r\n    context = useMemo(function () { return (__assign(__assign({}, context), { isReducedMotion: enabled })); }, [enabled]);\r\n    return (createElement(MotionContext.Provider, { value: context }, children));\r\n}\n\nexport { AnimatePresence, AnimationControls, DragControls, MotionContext, MotionPluginContext, MotionPlugins, MotionValue, Point, ReducedMotion, UnstableSyncLayout, animationControls, createMotionComponent, isValidMotionProp, motion, motionValue, transform, unwrapMotionValue, useAnimatedState, useAnimation, useCycle, useDomEvent, useDragControls, useElementScroll, useExternalRef, useGestures, useInvertedScale, useMotionValue, usePanGesture, usePresence, useReducedMotion, useSpring, useTapGesture, useTransform, useViewportScroll };\n"]},"metadata":{},"sourceType":"module"}